
Base_code.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002b64  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000007c  08002c70  08002c70  00003c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002cec  08002cec  0000405c  2**0
                  CONTENTS
  4 .ARM          00000008  08002cec  08002cec  00003cec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08002cf4  08002cf4  0000405c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002cf4  08002cf4  00003cf4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002cf8  08002cf8  00003cf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08002cfc  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000390  2000005c  08002d58  0000405c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003ec  08002d58  000043ec  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000405c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005b47  00000000  00000000  00004085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000016e4  00000000  00000000  00009bcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000006d8  00000000  00000000  0000b2b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000052d  00000000  00000000  0000b988  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000137e6  00000000  00000000  0000beb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000783b  00000000  00000000  0001f69b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0006a305  00000000  00000000  00026ed6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000911db  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001fd0  00000000  00000000  00091220  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000072  00000000  00000000  000931f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000005c 	.word	0x2000005c
 8000128:	00000000 	.word	0x00000000
 800012c:	08002c58 	.word	0x08002c58

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000060 	.word	0x20000060
 8000148:	08002c58 	.word	0x08002c58

0800014c <strcmp>:
 800014c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000150:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000154:	2a01      	cmp	r2, #1
 8000156:	bf28      	it	cs
 8000158:	429a      	cmpcs	r2, r3
 800015a:	d0f7      	beq.n	800014c <strcmp>
 800015c:	1ad0      	subs	r0, r2, r3
 800015e:	4770      	bx	lr

08000160 <strlen>:
 8000160:	4603      	mov	r3, r0
 8000162:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000166:	2a00      	cmp	r2, #0
 8000168:	d1fb      	bne.n	8000162 <strlen+0x2>
 800016a:	1a18      	subs	r0, r3, r0
 800016c:	3801      	subs	r0, #1
 800016e:	4770      	bx	lr

08000170 <check_send_flags>:
fifo_item_t fifo_dequeue();
void fifo_enqueue(uint8_t sender_id, uint8_t message_number);

int is_fifo_empty();

void check_send_flags() {
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
    if (philL_permit_flag) {
 8000174:	4b0c      	ldr	r3, [pc, #48]	@ (80001a8 <check_send_flags+0x38>)
 8000176:	781b      	ldrb	r3, [r3, #0]
 8000178:	b2db      	uxtb	r3, r3
 800017a:	2b00      	cmp	r3, #0
 800017c:	d006      	beq.n	800018c <check_send_flags+0x1c>
        send_usart_message(&huart1, "permit");
 800017e:	490b      	ldr	r1, [pc, #44]	@ (80001ac <check_send_flags+0x3c>)
 8000180:	480b      	ldr	r0, [pc, #44]	@ (80001b0 <check_send_flags+0x40>)
 8000182:	f000 f97b 	bl	800047c <send_usart_message>
        philL_permit_flag = 0;
 8000186:	4b08      	ldr	r3, [pc, #32]	@ (80001a8 <check_send_flags+0x38>)
 8000188:	2200      	movs	r2, #0
 800018a:	701a      	strb	r2, [r3, #0]
    }
    if (philR_permit_flag) {
 800018c:	4b09      	ldr	r3, [pc, #36]	@ (80001b4 <check_send_flags+0x44>)
 800018e:	781b      	ldrb	r3, [r3, #0]
 8000190:	b2db      	uxtb	r3, r3
 8000192:	2b00      	cmp	r3, #0
 8000194:	d006      	beq.n	80001a4 <check_send_flags+0x34>
        send_usart_message(&huart2, "permit");
 8000196:	4905      	ldr	r1, [pc, #20]	@ (80001ac <check_send_flags+0x3c>)
 8000198:	4807      	ldr	r0, [pc, #28]	@ (80001b8 <check_send_flags+0x48>)
 800019a:	f000 f96f 	bl	800047c <send_usart_message>
        philR_permit_flag = 0;
 800019e:	4b05      	ldr	r3, [pc, #20]	@ (80001b4 <check_send_flags+0x44>)
 80001a0:	2200      	movs	r2, #0
 80001a2:	701a      	strb	r2, [r3, #0]
    }
}
 80001a4:	bf00      	nop
 80001a6:	bd80      	pop	{r7, pc}
 80001a8:	20000216 	.word	0x20000216
 80001ac:	08002c70 	.word	0x08002c70
 80001b0:	20000078 	.word	0x20000078
 80001b4:	20000217 	.word	0x20000217
 80001b8:	200000b8 	.word	0x200000b8

080001bc <check_USART_1_routine>:

void check_USART_1_routine() {
 80001bc:	b580      	push	{r7, lr}
 80001be:	b0a2      	sub	sp, #136	@ 0x88
 80001c0:	af00      	add	r7, sp, #0
    if (check_for_new_message(usart1_rx_buffer, &usart1_rx_head, &usart1_rx_tail, &usart1_new_message_flag)) {
 80001c2:	4b24      	ldr	r3, [pc, #144]	@ (8000254 <check_USART_1_routine+0x98>)
 80001c4:	4a24      	ldr	r2, [pc, #144]	@ (8000258 <check_USART_1_routine+0x9c>)
 80001c6:	4925      	ldr	r1, [pc, #148]	@ (800025c <check_USART_1_routine+0xa0>)
 80001c8:	4825      	ldr	r0, [pc, #148]	@ (8000260 <check_USART_1_routine+0xa4>)
 80001ca:	f000 f9b1 	bl	8000530 <check_for_new_message>
 80001ce:	4603      	mov	r3, r0
 80001d0:	2b00      	cmp	r3, #0
 80001d2:	d03a      	beq.n	800024a <check_USART_1_routine+0x8e>
        char message[BUFFER_SIZE];
        for (int i = 0; i < BUFFER_SIZE; i++) {
 80001d4:	2300      	movs	r3, #0
 80001d6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80001da:	e017      	b.n	800020c <check_USART_1_routine+0x50>
            message[i] = circular_buffer_read(usart1_rx_buffer, &usart1_rx_tail);
 80001dc:	491e      	ldr	r1, [pc, #120]	@ (8000258 <check_USART_1_routine+0x9c>)
 80001de:	4820      	ldr	r0, [pc, #128]	@ (8000260 <check_USART_1_routine+0xa4>)
 80001e0:	f000 f985 	bl	80004ee <circular_buffer_read>
 80001e4:	4603      	mov	r3, r0
 80001e6:	4619      	mov	r1, r3
 80001e8:	1d3a      	adds	r2, r7, #4
 80001ea:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80001ee:	4413      	add	r3, r2
 80001f0:	460a      	mov	r2, r1
 80001f2:	701a      	strb	r2, [r3, #0]
            if (message[i] == '\n') break;
 80001f4:	1d3a      	adds	r2, r7, #4
 80001f6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80001fa:	4413      	add	r3, r2
 80001fc:	781b      	ldrb	r3, [r3, #0]
 80001fe:	2b0a      	cmp	r3, #10
 8000200:	d009      	beq.n	8000216 <check_USART_1_routine+0x5a>
        for (int i = 0; i < BUFFER_SIZE; i++) {
 8000202:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8000206:	3301      	adds	r3, #1
 8000208:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800020c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8000210:	2b7f      	cmp	r3, #127	@ 0x7f
 8000212:	dde3      	ble.n	80001dc <check_USART_1_routine+0x20>
 8000214:	e000      	b.n	8000218 <check_USART_1_routine+0x5c>
            if (message[i] == '\n') break;
 8000216:	bf00      	nop
        }
        if (strcmp((const char *)message, "request") == 0) {
 8000218:	1d3b      	adds	r3, r7, #4
 800021a:	4912      	ldr	r1, [pc, #72]	@ (8000264 <check_USART_1_routine+0xa8>)
 800021c:	4618      	mov	r0, r3
 800021e:	f7ff ff95 	bl	800014c <strcmp>
 8000222:	4603      	mov	r3, r0
 8000224:	2b00      	cmp	r3, #0
 8000226:	d104      	bne.n	8000232 <check_USART_1_routine+0x76>
            fifo_enqueue(1,MSG_REQUEST);
 8000228:	2101      	movs	r1, #1
 800022a:	2001      	movs	r0, #1
 800022c:	f000 f8a8 	bl	8000380 <fifo_enqueue>
        } else if (strcmp((const char *)message, "release") == 0) {
            fifo_enqueue(1,MSG_RELEASE);
        }
    }
}
 8000230:	e00b      	b.n	800024a <check_USART_1_routine+0x8e>
        } else if (strcmp((const char *)message, "release") == 0) {
 8000232:	1d3b      	adds	r3, r7, #4
 8000234:	490c      	ldr	r1, [pc, #48]	@ (8000268 <check_USART_1_routine+0xac>)
 8000236:	4618      	mov	r0, r3
 8000238:	f7ff ff88 	bl	800014c <strcmp>
 800023c:	4603      	mov	r3, r0
 800023e:	2b00      	cmp	r3, #0
 8000240:	d103      	bne.n	800024a <check_USART_1_routine+0x8e>
            fifo_enqueue(1,MSG_RELEASE);
 8000242:	2102      	movs	r1, #2
 8000244:	2001      	movs	r0, #1
 8000246:	f000 f89b 	bl	8000380 <fifo_enqueue>
}
 800024a:	bf00      	nop
 800024c:	3788      	adds	r7, #136	@ 0x88
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}
 8000252:	bf00      	nop
 8000254:	20000214 	.word	0x20000214
 8000258:	2000020e 	.word	0x2000020e
 800025c:	2000020c 	.word	0x2000020c
 8000260:	2000010c 	.word	0x2000010c
 8000264:	08002c78 	.word	0x08002c78
 8000268:	08002c80 	.word	0x08002c80

0800026c <check_USART_2_routine>:

void check_USART_2_routine() {
 800026c:	b580      	push	{r7, lr}
 800026e:	b0a2      	sub	sp, #136	@ 0x88
 8000270:	af00      	add	r7, sp, #0
    if (check_for_new_message(usart2_rx_buffer, &usart2_rx_head, &usart2_rx_tail, &usart2_new_message_flag)) {
 8000272:	4b24      	ldr	r3, [pc, #144]	@ (8000304 <check_USART_2_routine+0x98>)
 8000274:	4a24      	ldr	r2, [pc, #144]	@ (8000308 <check_USART_2_routine+0x9c>)
 8000276:	4925      	ldr	r1, [pc, #148]	@ (800030c <check_USART_2_routine+0xa0>)
 8000278:	4825      	ldr	r0, [pc, #148]	@ (8000310 <check_USART_2_routine+0xa4>)
 800027a:	f000 f959 	bl	8000530 <check_for_new_message>
 800027e:	4603      	mov	r3, r0
 8000280:	2b00      	cmp	r3, #0
 8000282:	d03a      	beq.n	80002fa <check_USART_2_routine+0x8e>
        char message[BUFFER_SIZE];
        for (int i = 0; i < BUFFER_SIZE; i++) {
 8000284:	2300      	movs	r3, #0
 8000286:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800028a:	e017      	b.n	80002bc <check_USART_2_routine+0x50>
            message[i] = circular_buffer_read(usart2_rx_buffer, &usart2_rx_tail);
 800028c:	491e      	ldr	r1, [pc, #120]	@ (8000308 <check_USART_2_routine+0x9c>)
 800028e:	4820      	ldr	r0, [pc, #128]	@ (8000310 <check_USART_2_routine+0xa4>)
 8000290:	f000 f92d 	bl	80004ee <circular_buffer_read>
 8000294:	4603      	mov	r3, r0
 8000296:	4619      	mov	r1, r3
 8000298:	1d3a      	adds	r2, r7, #4
 800029a:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800029e:	4413      	add	r3, r2
 80002a0:	460a      	mov	r2, r1
 80002a2:	701a      	strb	r2, [r3, #0]
            if (message[i] == '\n') break;
 80002a4:	1d3a      	adds	r2, r7, #4
 80002a6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80002aa:	4413      	add	r3, r2
 80002ac:	781b      	ldrb	r3, [r3, #0]
 80002ae:	2b0a      	cmp	r3, #10
 80002b0:	d009      	beq.n	80002c6 <check_USART_2_routine+0x5a>
        for (int i = 0; i < BUFFER_SIZE; i++) {
 80002b2:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80002b6:	3301      	adds	r3, #1
 80002b8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80002bc:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80002c0:	2b7f      	cmp	r3, #127	@ 0x7f
 80002c2:	dde3      	ble.n	800028c <check_USART_2_routine+0x20>
 80002c4:	e000      	b.n	80002c8 <check_USART_2_routine+0x5c>
            if (message[i] == '\n') break;
 80002c6:	bf00      	nop
        }
        if (strcmp((const char *)message, "request") == 0) {
 80002c8:	1d3b      	adds	r3, r7, #4
 80002ca:	4912      	ldr	r1, [pc, #72]	@ (8000314 <check_USART_2_routine+0xa8>)
 80002cc:	4618      	mov	r0, r3
 80002ce:	f7ff ff3d 	bl	800014c <strcmp>
 80002d2:	4603      	mov	r3, r0
 80002d4:	2b00      	cmp	r3, #0
 80002d6:	d104      	bne.n	80002e2 <check_USART_2_routine+0x76>
			fifo_enqueue(2,MSG_REQUEST);
 80002d8:	2101      	movs	r1, #1
 80002da:	2002      	movs	r0, #2
 80002dc:	f000 f850 	bl	8000380 <fifo_enqueue>
		} else if (strcmp((const char *)message, "release") == 0) {
			fifo_enqueue(2,MSG_RELEASE);
		}
    }
}
 80002e0:	e00b      	b.n	80002fa <check_USART_2_routine+0x8e>
		} else if (strcmp((const char *)message, "release") == 0) {
 80002e2:	1d3b      	adds	r3, r7, #4
 80002e4:	490c      	ldr	r1, [pc, #48]	@ (8000318 <check_USART_2_routine+0xac>)
 80002e6:	4618      	mov	r0, r3
 80002e8:	f7ff ff30 	bl	800014c <strcmp>
 80002ec:	4603      	mov	r3, r0
 80002ee:	2b00      	cmp	r3, #0
 80002f0:	d103      	bne.n	80002fa <check_USART_2_routine+0x8e>
			fifo_enqueue(2,MSG_RELEASE);
 80002f2:	2102      	movs	r1, #2
 80002f4:	2002      	movs	r0, #2
 80002f6:	f000 f843 	bl	8000380 <fifo_enqueue>
}
 80002fa:	bf00      	nop
 80002fc:	3788      	adds	r7, #136	@ 0x88
 80002fe:	46bd      	mov	sp, r7
 8000300:	bd80      	pop	{r7, pc}
 8000302:	bf00      	nop
 8000304:	20000215 	.word	0x20000215
 8000308:	20000212 	.word	0x20000212
 800030c:	20000210 	.word	0x20000210
 8000310:	2000018c 	.word	0x2000018c
 8000314:	08002c78 	.word	0x08002c78
 8000318:	08002c80 	.word	0x08002c80

0800031c <check_FIFO_queue>:

void check_FIFO_queue() {
 800031c:	b580      	push	{r7, lr}
 800031e:	b082      	sub	sp, #8
 8000320:	af00      	add	r7, sp, #0
    if (msgsrv_request_flag || msgsrv_release_flag) return;
 8000322:	4b14      	ldr	r3, [pc, #80]	@ (8000374 <check_FIFO_queue+0x58>)
 8000324:	781b      	ldrb	r3, [r3, #0]
 8000326:	b2db      	uxtb	r3, r3
 8000328:	2b00      	cmp	r3, #0
 800032a:	d11e      	bne.n	800036a <check_FIFO_queue+0x4e>
 800032c:	4b12      	ldr	r3, [pc, #72]	@ (8000378 <check_FIFO_queue+0x5c>)
 800032e:	781b      	ldrb	r3, [r3, #0]
 8000330:	b2db      	uxtb	r3, r3
 8000332:	2b00      	cmp	r3, #0
 8000334:	d119      	bne.n	800036a <check_FIFO_queue+0x4e>

    if (!is_fifo_empty()) {
 8000336:	f000 f879 	bl	800042c <is_fifo_empty>
 800033a:	4603      	mov	r3, r0
 800033c:	2b00      	cmp	r3, #0
 800033e:	d115      	bne.n	800036c <check_FIFO_queue+0x50>
        fifo_item_t item = fifo_dequeue();
 8000340:	f000 f84a 	bl	80003d8 <fifo_dequeue>
 8000344:	4603      	mov	r3, r0
 8000346:	80bb      	strh	r3, [r7, #4]
        sender = item.sender_id;
 8000348:	793a      	ldrb	r2, [r7, #4]
 800034a:	4b0c      	ldr	r3, [pc, #48]	@ (800037c <check_FIFO_queue+0x60>)
 800034c:	701a      	strb	r2, [r3, #0]
        if (item.message_number == MSG_REQUEST) {
 800034e:	797b      	ldrb	r3, [r7, #5]
 8000350:	2b01      	cmp	r3, #1
 8000352:	d103      	bne.n	800035c <check_FIFO_queue+0x40>
        	msgsrv_request_flag = 1;
 8000354:	4b07      	ldr	r3, [pc, #28]	@ (8000374 <check_FIFO_queue+0x58>)
 8000356:	2201      	movs	r2, #1
 8000358:	701a      	strb	r2, [r3, #0]
 800035a:	e007      	b.n	800036c <check_FIFO_queue+0x50>
        } else if (item.message_number == MSG_RELEASE) {
 800035c:	797b      	ldrb	r3, [r7, #5]
 800035e:	2b02      	cmp	r3, #2
 8000360:	d104      	bne.n	800036c <check_FIFO_queue+0x50>
        	msgsrv_release_flag = 1;
 8000362:	4b05      	ldr	r3, [pc, #20]	@ (8000378 <check_FIFO_queue+0x5c>)
 8000364:	2201      	movs	r2, #1
 8000366:	701a      	strb	r2, [r3, #0]
 8000368:	e000      	b.n	800036c <check_FIFO_queue+0x50>
    if (msgsrv_request_flag || msgsrv_release_flag) return;
 800036a:	bf00      	nop
        }
    }
}
 800036c:	3708      	adds	r7, #8
 800036e:	46bd      	mov	sp, r7
 8000370:	bd80      	pop	{r7, pc}
 8000372:	bf00      	nop
 8000374:	20000218 	.word	0x20000218
 8000378:	20000219 	.word	0x20000219
 800037c:	2000021a 	.word	0x2000021a

08000380 <fifo_enqueue>:

void fifo_enqueue(uint8_t sender_id, uint8_t message_number) {
 8000380:	b480      	push	{r7}
 8000382:	b083      	sub	sp, #12
 8000384:	af00      	add	r7, sp, #0
 8000386:	4603      	mov	r3, r0
 8000388:	460a      	mov	r2, r1
 800038a:	71fb      	strb	r3, [r7, #7]
 800038c:	4613      	mov	r3, r2
 800038e:	71bb      	strb	r3, [r7, #6]
    fifo_queue[fifo_head].sender_id = sender_id;
 8000390:	4b0f      	ldr	r3, [pc, #60]	@ (80003d0 <fifo_enqueue+0x50>)
 8000392:	781b      	ldrb	r3, [r3, #0]
 8000394:	4619      	mov	r1, r3
 8000396:	4a0f      	ldr	r2, [pc, #60]	@ (80003d4 <fifo_enqueue+0x54>)
 8000398:	79fb      	ldrb	r3, [r7, #7]
 800039a:	f802 3011 	strb.w	r3, [r2, r1, lsl #1]
    fifo_queue[fifo_head].message_number = message_number;
 800039e:	4b0c      	ldr	r3, [pc, #48]	@ (80003d0 <fifo_enqueue+0x50>)
 80003a0:	781b      	ldrb	r3, [r3, #0]
 80003a2:	4a0c      	ldr	r2, [pc, #48]	@ (80003d4 <fifo_enqueue+0x54>)
 80003a4:	005b      	lsls	r3, r3, #1
 80003a6:	4413      	add	r3, r2
 80003a8:	79ba      	ldrb	r2, [r7, #6]
 80003aa:	705a      	strb	r2, [r3, #1]
    fifo_head = (fifo_head + 1) % FIFO_SIZE;
 80003ac:	4b08      	ldr	r3, [pc, #32]	@ (80003d0 <fifo_enqueue+0x50>)
 80003ae:	781b      	ldrb	r3, [r3, #0]
 80003b0:	3301      	adds	r3, #1
 80003b2:	425a      	negs	r2, r3
 80003b4:	f003 0307 	and.w	r3, r3, #7
 80003b8:	f002 0207 	and.w	r2, r2, #7
 80003bc:	bf58      	it	pl
 80003be:	4253      	negpl	r3, r2
 80003c0:	b2da      	uxtb	r2, r3
 80003c2:	4b03      	ldr	r3, [pc, #12]	@ (80003d0 <fifo_enqueue+0x50>)
 80003c4:	701a      	strb	r2, [r3, #0]
}
 80003c6:	bf00      	nop
 80003c8:	370c      	adds	r7, #12
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bc80      	pop	{r7}
 80003ce:	4770      	bx	lr
 80003d0:	20000108 	.word	0x20000108
 80003d4:	200000f8 	.word	0x200000f8

080003d8 <fifo_dequeue>:

fifo_item_t fifo_dequeue() {
 80003d8:	b480      	push	{r7}
 80003da:	b083      	sub	sp, #12
 80003dc:	af00      	add	r7, sp, #0
    fifo_item_t item = fifo_queue[fifo_tail];
 80003de:	4b11      	ldr	r3, [pc, #68]	@ (8000424 <fifo_dequeue+0x4c>)
 80003e0:	781b      	ldrb	r3, [r3, #0]
 80003e2:	461a      	mov	r2, r3
 80003e4:	4b10      	ldr	r3, [pc, #64]	@ (8000428 <fifo_dequeue+0x50>)
 80003e6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80003ea:	803b      	strh	r3, [r7, #0]
    fifo_tail = (fifo_tail + 1) % FIFO_SIZE;
 80003ec:	4b0d      	ldr	r3, [pc, #52]	@ (8000424 <fifo_dequeue+0x4c>)
 80003ee:	781b      	ldrb	r3, [r3, #0]
 80003f0:	3301      	adds	r3, #1
 80003f2:	425a      	negs	r2, r3
 80003f4:	f003 0307 	and.w	r3, r3, #7
 80003f8:	f002 0207 	and.w	r2, r2, #7
 80003fc:	bf58      	it	pl
 80003fe:	4253      	negpl	r3, r2
 8000400:	b2da      	uxtb	r2, r3
 8000402:	4b08      	ldr	r3, [pc, #32]	@ (8000424 <fifo_dequeue+0x4c>)
 8000404:	701a      	strb	r2, [r3, #0]
    return item;
 8000406:	883b      	ldrh	r3, [r7, #0]
 8000408:	80bb      	strh	r3, [r7, #4]
 800040a:	2300      	movs	r3, #0
 800040c:	793a      	ldrb	r2, [r7, #4]
 800040e:	f362 0307 	bfi	r3, r2, #0, #8
 8000412:	797a      	ldrb	r2, [r7, #5]
 8000414:	f362 230f 	bfi	r3, r2, #8, #8
}
 8000418:	4618      	mov	r0, r3
 800041a:	370c      	adds	r7, #12
 800041c:	46bd      	mov	sp, r7
 800041e:	bc80      	pop	{r7}
 8000420:	4770      	bx	lr
 8000422:	bf00      	nop
 8000424:	20000109 	.word	0x20000109
 8000428:	200000f8 	.word	0x200000f8

0800042c <is_fifo_empty>:

int is_fifo_empty() {
 800042c:	b480      	push	{r7}
 800042e:	af00      	add	r7, sp, #0
    return fifo_head == fifo_tail;
 8000430:	4b06      	ldr	r3, [pc, #24]	@ (800044c <is_fifo_empty+0x20>)
 8000432:	781a      	ldrb	r2, [r3, #0]
 8000434:	4b06      	ldr	r3, [pc, #24]	@ (8000450 <is_fifo_empty+0x24>)
 8000436:	781b      	ldrb	r3, [r3, #0]
 8000438:	429a      	cmp	r2, r3
 800043a:	bf0c      	ite	eq
 800043c:	2301      	moveq	r3, #1
 800043e:	2300      	movne	r3, #0
 8000440:	b2db      	uxtb	r3, r3
}
 8000442:	4618      	mov	r0, r3
 8000444:	46bd      	mov	sp, r7
 8000446:	bc80      	pop	{r7}
 8000448:	4770      	bx	lr
 800044a:	bf00      	nop
 800044c:	20000108 	.word	0x20000108
 8000450:	20000109 	.word	0x20000109

08000454 <add_crlf>:


const char* add_crlf(const char* str) {
 8000454:	b580      	push	{r7, lr}
 8000456:	b082      	sub	sp, #8
 8000458:	af00      	add	r7, sp, #0
 800045a:	6078      	str	r0, [r7, #4]
    static char buffer[BUFFER_SIZE];
    snprintf(buffer, BUFFER_SIZE, "%s\r\n", str);
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	4a05      	ldr	r2, [pc, #20]	@ (8000474 <add_crlf+0x20>)
 8000460:	2180      	movs	r1, #128	@ 0x80
 8000462:	4805      	ldr	r0, [pc, #20]	@ (8000478 <add_crlf+0x24>)
 8000464:	f001 ff34 	bl	80022d0 <sniprintf>
    return buffer;
 8000468:	4b03      	ldr	r3, [pc, #12]	@ (8000478 <add_crlf+0x24>)
}
 800046a:	4618      	mov	r0, r3
 800046c:	3708      	adds	r7, #8
 800046e:	46bd      	mov	sp, r7
 8000470:	bd80      	pop	{r7, pc}
 8000472:	bf00      	nop
 8000474:	08002c88 	.word	0x08002c88
 8000478:	2000021c 	.word	0x2000021c

0800047c <send_usart_message>:

void send_usart_message(UART_HandleTypeDef* huart, const char* message) {
 800047c:	b580      	push	{r7, lr}
 800047e:	b084      	sub	sp, #16
 8000480:	af00      	add	r7, sp, #0
 8000482:	6078      	str	r0, [r7, #4]
 8000484:	6039      	str	r1, [r7, #0]
    const char* msg_with_crlf = add_crlf(message);
 8000486:	6838      	ldr	r0, [r7, #0]
 8000488:	f7ff ffe4 	bl	8000454 <add_crlf>
 800048c:	60f8      	str	r0, [r7, #12]
    HAL_UART_Transmit_IT(huart, (uint8_t*)msg_with_crlf, strlen(msg_with_crlf));
 800048e:	68f8      	ldr	r0, [r7, #12]
 8000490:	f7ff fe66 	bl	8000160 <strlen>
 8000494:	4603      	mov	r3, r0
 8000496:	b29b      	uxth	r3, r3
 8000498:	461a      	mov	r2, r3
 800049a:	68f9      	ldr	r1, [r7, #12]
 800049c:	6878      	ldr	r0, [r7, #4]
 800049e:	f001 fb78 	bl	8001b92 <HAL_UART_Transmit_IT>
}
 80004a2:	bf00      	nop
 80004a4:	3710      	adds	r7, #16
 80004a6:	46bd      	mov	sp, r7
 80004a8:	bd80      	pop	{r7, pc}

080004aa <circular_buffer_write>:

// Circular buffer write for receiving data
void circular_buffer_write(uint8_t* buffer, volatile uint16_t* head, uint8_t data) {
 80004aa:	b480      	push	{r7}
 80004ac:	b085      	sub	sp, #20
 80004ae:	af00      	add	r7, sp, #0
 80004b0:	60f8      	str	r0, [r7, #12]
 80004b2:	60b9      	str	r1, [r7, #8]
 80004b4:	4613      	mov	r3, r2
 80004b6:	71fb      	strb	r3, [r7, #7]
    buffer[*head] = data;
 80004b8:	68bb      	ldr	r3, [r7, #8]
 80004ba:	881b      	ldrh	r3, [r3, #0]
 80004bc:	b29b      	uxth	r3, r3
 80004be:	461a      	mov	r2, r3
 80004c0:	68fb      	ldr	r3, [r7, #12]
 80004c2:	4413      	add	r3, r2
 80004c4:	79fa      	ldrb	r2, [r7, #7]
 80004c6:	701a      	strb	r2, [r3, #0]
    *head = (*head + 1) % BUFFER_SIZE;
 80004c8:	68bb      	ldr	r3, [r7, #8]
 80004ca:	881b      	ldrh	r3, [r3, #0]
 80004cc:	b29b      	uxth	r3, r3
 80004ce:	3301      	adds	r3, #1
 80004d0:	425a      	negs	r2, r3
 80004d2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80004d6:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80004da:	bf58      	it	pl
 80004dc:	4253      	negpl	r3, r2
 80004de:	b29a      	uxth	r2, r3
 80004e0:	68bb      	ldr	r3, [r7, #8]
 80004e2:	801a      	strh	r2, [r3, #0]
}
 80004e4:	bf00      	nop
 80004e6:	3714      	adds	r7, #20
 80004e8:	46bd      	mov	sp, r7
 80004ea:	bc80      	pop	{r7}
 80004ec:	4770      	bx	lr

080004ee <circular_buffer_read>:

uint8_t circular_buffer_read(uint8_t* buffer, volatile uint16_t* tail) {
 80004ee:	b480      	push	{r7}
 80004f0:	b085      	sub	sp, #20
 80004f2:	af00      	add	r7, sp, #0
 80004f4:	6078      	str	r0, [r7, #4]
 80004f6:	6039      	str	r1, [r7, #0]
    uint8_t data = buffer[*tail];
 80004f8:	683b      	ldr	r3, [r7, #0]
 80004fa:	881b      	ldrh	r3, [r3, #0]
 80004fc:	b29b      	uxth	r3, r3
 80004fe:	461a      	mov	r2, r3
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	4413      	add	r3, r2
 8000504:	781b      	ldrb	r3, [r3, #0]
 8000506:	73fb      	strb	r3, [r7, #15]
    *tail = (*tail + 1) % BUFFER_SIZE;
 8000508:	683b      	ldr	r3, [r7, #0]
 800050a:	881b      	ldrh	r3, [r3, #0]
 800050c:	b29b      	uxth	r3, r3
 800050e:	3301      	adds	r3, #1
 8000510:	425a      	negs	r2, r3
 8000512:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8000516:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800051a:	bf58      	it	pl
 800051c:	4253      	negpl	r3, r2
 800051e:	b29a      	uxth	r2, r3
 8000520:	683b      	ldr	r3, [r7, #0]
 8000522:	801a      	strh	r2, [r3, #0]
    return data;
 8000524:	7bfb      	ldrb	r3, [r7, #15]
}
 8000526:	4618      	mov	r0, r3
 8000528:	3714      	adds	r7, #20
 800052a:	46bd      	mov	sp, r7
 800052c:	bc80      	pop	{r7}
 800052e:	4770      	bx	lr

08000530 <check_for_new_message>:

// Function to check if a complete message has been received (CRLF)
uint8_t check_for_new_message(uint8_t* buffer, volatile uint16_t* head, volatile uint16_t* tail, volatile uint8_t* new_message_flag) {
 8000530:	b480      	push	{r7}
 8000532:	b085      	sub	sp, #20
 8000534:	af00      	add	r7, sp, #0
 8000536:	60f8      	str	r0, [r7, #12]
 8000538:	60b9      	str	r1, [r7, #8]
 800053a:	607a      	str	r2, [r7, #4]
 800053c:	603b      	str	r3, [r7, #0]
    if (*new_message_flag) {
 800053e:	683b      	ldr	r3, [r7, #0]
 8000540:	781b      	ldrb	r3, [r3, #0]
 8000542:	b2db      	uxtb	r3, r3
 8000544:	2b00      	cmp	r3, #0
 8000546:	d004      	beq.n	8000552 <check_for_new_message+0x22>
        *new_message_flag = 0;
 8000548:	683b      	ldr	r3, [r7, #0]
 800054a:	2200      	movs	r2, #0
 800054c:	701a      	strb	r2, [r3, #0]
        return 1;
 800054e:	2301      	movs	r3, #1
 8000550:	e000      	b.n	8000554 <check_for_new_message+0x24>
    }
    return 0;
 8000552:	2300      	movs	r3, #0
}
 8000554:	4618      	mov	r0, r3
 8000556:	3714      	adds	r7, #20
 8000558:	46bd      	mov	sp, r7
 800055a:	bc80      	pop	{r7}
 800055c:	4770      	bx	lr
	...

08000560 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart) {
 8000560:	b580      	push	{r7, lr}
 8000562:	b084      	sub	sp, #16
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]
    uint8_t received_byte;

    if (huart->Instance == USART1) {
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	4a33      	ldr	r2, [pc, #204]	@ (800063c <HAL_UART_RxCpltCallback+0xdc>)
 800056e:	4293      	cmp	r3, r2
 8000570:	d12d      	bne.n	80005ce <HAL_UART_RxCpltCallback+0x6e>
        received_byte = huart->pRxBuffPtr[0];  // Received byte from USART1
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000576:	781b      	ldrb	r3, [r3, #0]
 8000578:	72fb      	strb	r3, [r7, #11]
        circular_buffer_write(usart1_rx_buffer, &usart1_rx_head, received_byte);
 800057a:	7afb      	ldrb	r3, [r7, #11]
 800057c:	461a      	mov	r2, r3
 800057e:	4930      	ldr	r1, [pc, #192]	@ (8000640 <HAL_UART_RxCpltCallback+0xe0>)
 8000580:	4830      	ldr	r0, [pc, #192]	@ (8000644 <HAL_UART_RxCpltCallback+0xe4>)
 8000582:	f7ff ff92 	bl	80004aa <circular_buffer_write>

        // Check if last two bytes are CR (13) and LF (10)
        uint16_t prev_index = (usart1_rx_head + BUFFER_SIZE - 2) % BUFFER_SIZE;
 8000586:	4b2e      	ldr	r3, [pc, #184]	@ (8000640 <HAL_UART_RxCpltCallback+0xe0>)
 8000588:	881b      	ldrh	r3, [r3, #0]
 800058a:	b29b      	uxth	r3, r3
 800058c:	337e      	adds	r3, #126	@ 0x7e
 800058e:	425a      	negs	r2, r3
 8000590:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8000594:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8000598:	bf58      	it	pl
 800059a:	4253      	negpl	r3, r2
 800059c:	81bb      	strh	r3, [r7, #12]
        if (usart1_rx_buffer[prev_index] == 13 && usart1_rx_buffer[usart1_rx_head - 1] == 10) {
 800059e:	89bb      	ldrh	r3, [r7, #12]
 80005a0:	4a28      	ldr	r2, [pc, #160]	@ (8000644 <HAL_UART_RxCpltCallback+0xe4>)
 80005a2:	5cd3      	ldrb	r3, [r2, r3]
 80005a4:	2b0d      	cmp	r3, #13
 80005a6:	d10a      	bne.n	80005be <HAL_UART_RxCpltCallback+0x5e>
 80005a8:	4b25      	ldr	r3, [pc, #148]	@ (8000640 <HAL_UART_RxCpltCallback+0xe0>)
 80005aa:	881b      	ldrh	r3, [r3, #0]
 80005ac:	b29b      	uxth	r3, r3
 80005ae:	3b01      	subs	r3, #1
 80005b0:	4a24      	ldr	r2, [pc, #144]	@ (8000644 <HAL_UART_RxCpltCallback+0xe4>)
 80005b2:	5cd3      	ldrb	r3, [r2, r3]
 80005b4:	2b0a      	cmp	r3, #10
 80005b6:	d102      	bne.n	80005be <HAL_UART_RxCpltCallback+0x5e>
            usart1_new_message_flag = 1;  // Set new message flag
 80005b8:	4b23      	ldr	r3, [pc, #140]	@ (8000648 <HAL_UART_RxCpltCallback+0xe8>)
 80005ba:	2201      	movs	r2, #1
 80005bc:	701a      	strb	r2, [r3, #0]
        }
        // Ready to receive the next byte
        HAL_UART_Receive_IT(&huart1, &received_byte, 1);
 80005be:	f107 030b 	add.w	r3, r7, #11
 80005c2:	2201      	movs	r2, #1
 80005c4:	4619      	mov	r1, r3
 80005c6:	4821      	ldr	r0, [pc, #132]	@ (800064c <HAL_UART_RxCpltCallback+0xec>)
 80005c8:	f001 fb27 	bl	8001c1a <HAL_UART_Receive_IT>
        if (usart2_rx_buffer[prev_index] == 13 && usart2_rx_buffer[usart2_rx_head - 1] == 10) {
            usart2_new_message_flag = 1;
        }
        HAL_UART_Receive_IT(&huart2, &received_byte, 1);
    }
}
 80005cc:	e031      	b.n	8000632 <HAL_UART_RxCpltCallback+0xd2>
    else if (huart->Instance == USART2) {
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	4a1f      	ldr	r2, [pc, #124]	@ (8000650 <HAL_UART_RxCpltCallback+0xf0>)
 80005d4:	4293      	cmp	r3, r2
 80005d6:	d12c      	bne.n	8000632 <HAL_UART_RxCpltCallback+0xd2>
        received_byte = huart->pRxBuffPtr[0];
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80005dc:	781b      	ldrb	r3, [r3, #0]
 80005de:	72fb      	strb	r3, [r7, #11]
        circular_buffer_write(usart2_rx_buffer, &usart2_rx_head, received_byte);
 80005e0:	7afb      	ldrb	r3, [r7, #11]
 80005e2:	461a      	mov	r2, r3
 80005e4:	491b      	ldr	r1, [pc, #108]	@ (8000654 <HAL_UART_RxCpltCallback+0xf4>)
 80005e6:	481c      	ldr	r0, [pc, #112]	@ (8000658 <HAL_UART_RxCpltCallback+0xf8>)
 80005e8:	f7ff ff5f 	bl	80004aa <circular_buffer_write>
        uint16_t prev_index = (usart2_rx_head + BUFFER_SIZE - 2) % BUFFER_SIZE;
 80005ec:	4b19      	ldr	r3, [pc, #100]	@ (8000654 <HAL_UART_RxCpltCallback+0xf4>)
 80005ee:	881b      	ldrh	r3, [r3, #0]
 80005f0:	b29b      	uxth	r3, r3
 80005f2:	337e      	adds	r3, #126	@ 0x7e
 80005f4:	425a      	negs	r2, r3
 80005f6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80005fa:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80005fe:	bf58      	it	pl
 8000600:	4253      	negpl	r3, r2
 8000602:	81fb      	strh	r3, [r7, #14]
        if (usart2_rx_buffer[prev_index] == 13 && usart2_rx_buffer[usart2_rx_head - 1] == 10) {
 8000604:	89fb      	ldrh	r3, [r7, #14]
 8000606:	4a14      	ldr	r2, [pc, #80]	@ (8000658 <HAL_UART_RxCpltCallback+0xf8>)
 8000608:	5cd3      	ldrb	r3, [r2, r3]
 800060a:	2b0d      	cmp	r3, #13
 800060c:	d10a      	bne.n	8000624 <HAL_UART_RxCpltCallback+0xc4>
 800060e:	4b11      	ldr	r3, [pc, #68]	@ (8000654 <HAL_UART_RxCpltCallback+0xf4>)
 8000610:	881b      	ldrh	r3, [r3, #0]
 8000612:	b29b      	uxth	r3, r3
 8000614:	3b01      	subs	r3, #1
 8000616:	4a10      	ldr	r2, [pc, #64]	@ (8000658 <HAL_UART_RxCpltCallback+0xf8>)
 8000618:	5cd3      	ldrb	r3, [r2, r3]
 800061a:	2b0a      	cmp	r3, #10
 800061c:	d102      	bne.n	8000624 <HAL_UART_RxCpltCallback+0xc4>
            usart2_new_message_flag = 1;
 800061e:	4b0f      	ldr	r3, [pc, #60]	@ (800065c <HAL_UART_RxCpltCallback+0xfc>)
 8000620:	2201      	movs	r2, #1
 8000622:	701a      	strb	r2, [r3, #0]
        HAL_UART_Receive_IT(&huart2, &received_byte, 1);
 8000624:	f107 030b 	add.w	r3, r7, #11
 8000628:	2201      	movs	r2, #1
 800062a:	4619      	mov	r1, r3
 800062c:	480c      	ldr	r0, [pc, #48]	@ (8000660 <HAL_UART_RxCpltCallback+0x100>)
 800062e:	f001 faf4 	bl	8001c1a <HAL_UART_Receive_IT>
}
 8000632:	bf00      	nop
 8000634:	3710      	adds	r7, #16
 8000636:	46bd      	mov	sp, r7
 8000638:	bd80      	pop	{r7, pc}
 800063a:	bf00      	nop
 800063c:	40013800 	.word	0x40013800
 8000640:	2000020c 	.word	0x2000020c
 8000644:	2000010c 	.word	0x2000010c
 8000648:	20000214 	.word	0x20000214
 800064c:	20000078 	.word	0x20000078
 8000650:	40004400 	.word	0x40004400
 8000654:	20000210 	.word	0x20000210
 8000658:	2000018c 	.word	0x2000018c
 800065c:	20000215 	.word	0x20000215
 8000660:	200000b8 	.word	0x200000b8

08000664 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000664:	b580      	push	{r7, lr}
 8000666:	b082      	sub	sp, #8
 8000668:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800066a:	f000 faa9 	bl	8000bc0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800066e:	f000 f821 	bl	80006b4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000672:	f000 f8af 	bl	80007d4 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000676:	f000 f859 	bl	800072c <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800067a:	f000 f881 	bl	8000780 <MX_USART2_UART_Init>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  uint8_t temp_byte;
  HAL_UART_Receive_IT(&huart1, &temp_byte, 1);
 800067e:	1dfb      	adds	r3, r7, #7
 8000680:	2201      	movs	r2, #1
 8000682:	4619      	mov	r1, r3
 8000684:	4809      	ldr	r0, [pc, #36]	@ (80006ac <label_end+0x4>)
 8000686:	f001 fac8 	bl	8001c1a <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart2, &temp_byte, 1);
 800068a:	1dfb      	adds	r3, r7, #7
 800068c:	2201      	movs	r2, #1
 800068e:	4619      	mov	r1, r3
 8000690:	4807      	ldr	r0, [pc, #28]	@ (80006b0 <label_end+0x8>)
 8000692:	f001 fac2 	bl	8001c1a <HAL_UART_Receive_IT>
  while (1)
  {
      check_USART_1_routine();
 8000696:	f7ff fd91 	bl	80001bc <check_USART_1_routine>
      check_USART_2_routine();
 800069a:	f7ff fde7 	bl	800026c <check_USART_2_routine>
      check_send_flags();
 800069e:	f7ff fd67 	bl	8000170 <check_send_flags>
      check_FIFO_queue();
 80006a2:	f7ff fe3b 	bl	800031c <check_FIFO_queue>
      asm("nop \n"
 80006a6:	bf00      	nop

080006a8 <label_end>:
      check_USART_1_routine();
 80006a8:	bf00      	nop
 80006aa:	e7f4      	b.n	8000696 <main+0x32>
 80006ac:	20000078 	.word	0x20000078
 80006b0:	200000b8 	.word	0x200000b8

080006b4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80006b4:	b580      	push	{r7, lr}
 80006b6:	b090      	sub	sp, #64	@ 0x40
 80006b8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80006ba:	f107 0318 	add.w	r3, r7, #24
 80006be:	2228      	movs	r2, #40	@ 0x28
 80006c0:	2100      	movs	r1, #0
 80006c2:	4618      	mov	r0, r3
 80006c4:	f001 fe38 	bl	8002338 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006c8:	1d3b      	adds	r3, r7, #4
 80006ca:	2200      	movs	r2, #0
 80006cc:	601a      	str	r2, [r3, #0]
 80006ce:	605a      	str	r2, [r3, #4]
 80006d0:	609a      	str	r2, [r3, #8]
 80006d2:	60da      	str	r2, [r3, #12]
 80006d4:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80006d6:	2302      	movs	r3, #2
 80006d8:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80006da:	2301      	movs	r3, #1
 80006dc:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80006de:	2310      	movs	r3, #16
 80006e0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80006e2:	2300      	movs	r3, #0
 80006e4:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006e6:	f107 0318 	add.w	r3, r7, #24
 80006ea:	4618      	mov	r0, r3
 80006ec:	f000 fdea 	bl	80012c4 <HAL_RCC_OscConfig>
 80006f0:	4603      	mov	r3, r0
 80006f2:	2b00      	cmp	r3, #0
 80006f4:	d001      	beq.n	80006fa <SystemClock_Config+0x46>
  {
    Error_Handler();
 80006f6:	f000 f8c7 	bl	8000888 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006fa:	230f      	movs	r3, #15
 80006fc:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80006fe:	2300      	movs	r3, #0
 8000700:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000702:	2300      	movs	r3, #0
 8000704:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000706:	2300      	movs	r3, #0
 8000708:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800070a:	2300      	movs	r3, #0
 800070c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800070e:	1d3b      	adds	r3, r7, #4
 8000710:	2100      	movs	r1, #0
 8000712:	4618      	mov	r0, r3
 8000714:	f001 f858 	bl	80017c8 <HAL_RCC_ClockConfig>
 8000718:	4603      	mov	r3, r0
 800071a:	2b00      	cmp	r3, #0
 800071c:	d001      	beq.n	8000722 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 800071e:	f000 f8b3 	bl	8000888 <Error_Handler>
  }
}
 8000722:	bf00      	nop
 8000724:	3740      	adds	r7, #64	@ 0x40
 8000726:	46bd      	mov	sp, r7
 8000728:	bd80      	pop	{r7, pc}
	...

0800072c <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 800072c:	b580      	push	{r7, lr}
 800072e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000730:	4b11      	ldr	r3, [pc, #68]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 8000732:	4a12      	ldr	r2, [pc, #72]	@ (800077c <MX_USART1_UART_Init+0x50>)
 8000734:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8000736:	4b10      	ldr	r3, [pc, #64]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 8000738:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 800073c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800073e:	4b0e      	ldr	r3, [pc, #56]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 8000740:	2200      	movs	r2, #0
 8000742:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_2;
 8000744:	4b0c      	ldr	r3, [pc, #48]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 8000746:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800074a:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800074c:	4b0a      	ldr	r3, [pc, #40]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 800074e:	2200      	movs	r2, #0
 8000750:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000752:	4b09      	ldr	r3, [pc, #36]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 8000754:	220c      	movs	r2, #12
 8000756:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000758:	4b07      	ldr	r3, [pc, #28]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 800075a:	2200      	movs	r2, #0
 800075c:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800075e:	4b06      	ldr	r3, [pc, #24]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 8000760:	2200      	movs	r2, #0
 8000762:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000764:	4804      	ldr	r0, [pc, #16]	@ (8000778 <MX_USART1_UART_Init+0x4c>)
 8000766:	f001 f9c7 	bl	8001af8 <HAL_UART_Init>
 800076a:	4603      	mov	r3, r0
 800076c:	2b00      	cmp	r3, #0
 800076e:	d001      	beq.n	8000774 <MX_USART1_UART_Init+0x48>
  {
    Error_Handler();
 8000770:	f000 f88a 	bl	8000888 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000774:	bf00      	nop
 8000776:	bd80      	pop	{r7, pc}
 8000778:	20000078 	.word	0x20000078
 800077c:	40013800 	.word	0x40013800

08000780 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000780:	b580      	push	{r7, lr}
 8000782:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000784:	4b11      	ldr	r3, [pc, #68]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 8000786:	4a12      	ldr	r2, [pc, #72]	@ (80007d0 <MX_USART2_UART_Init+0x50>)
 8000788:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800078a:	4b10      	ldr	r3, [pc, #64]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 800078c:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8000790:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000792:	4b0e      	ldr	r3, [pc, #56]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 8000794:	2200      	movs	r2, #0
 8000796:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_2;
 8000798:	4b0c      	ldr	r3, [pc, #48]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 800079a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800079e:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80007a0:	4b0a      	ldr	r3, [pc, #40]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 80007a2:	2200      	movs	r2, #0
 80007a4:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80007a6:	4b09      	ldr	r3, [pc, #36]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 80007a8:	220c      	movs	r2, #12
 80007aa:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80007ac:	4b07      	ldr	r3, [pc, #28]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 80007ae:	2200      	movs	r2, #0
 80007b0:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80007b2:	4b06      	ldr	r3, [pc, #24]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 80007b4:	2200      	movs	r2, #0
 80007b6:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80007b8:	4804      	ldr	r0, [pc, #16]	@ (80007cc <MX_USART2_UART_Init+0x4c>)
 80007ba:	f001 f99d 	bl	8001af8 <HAL_UART_Init>
 80007be:	4603      	mov	r3, r0
 80007c0:	2b00      	cmp	r3, #0
 80007c2:	d001      	beq.n	80007c8 <MX_USART2_UART_Init+0x48>
  {
    Error_Handler();
 80007c4:	f000 f860 	bl	8000888 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80007c8:	bf00      	nop
 80007ca:	bd80      	pop	{r7, pc}
 80007cc:	200000b8 	.word	0x200000b8
 80007d0:	40004400 	.word	0x40004400

080007d4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80007d4:	b580      	push	{r7, lr}
 80007d6:	b088      	sub	sp, #32
 80007d8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80007da:	f107 0310 	add.w	r3, r7, #16
 80007de:	2200      	movs	r2, #0
 80007e0:	601a      	str	r2, [r3, #0]
 80007e2:	605a      	str	r2, [r3, #4]
 80007e4:	609a      	str	r2, [r3, #8]
 80007e6:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80007e8:	4b24      	ldr	r3, [pc, #144]	@ (800087c <MX_GPIO_Init+0xa8>)
 80007ea:	699b      	ldr	r3, [r3, #24]
 80007ec:	4a23      	ldr	r2, [pc, #140]	@ (800087c <MX_GPIO_Init+0xa8>)
 80007ee:	f043 0310 	orr.w	r3, r3, #16
 80007f2:	6193      	str	r3, [r2, #24]
 80007f4:	4b21      	ldr	r3, [pc, #132]	@ (800087c <MX_GPIO_Init+0xa8>)
 80007f6:	699b      	ldr	r3, [r3, #24]
 80007f8:	f003 0310 	and.w	r3, r3, #16
 80007fc:	60fb      	str	r3, [r7, #12]
 80007fe:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000800:	4b1e      	ldr	r3, [pc, #120]	@ (800087c <MX_GPIO_Init+0xa8>)
 8000802:	699b      	ldr	r3, [r3, #24]
 8000804:	4a1d      	ldr	r2, [pc, #116]	@ (800087c <MX_GPIO_Init+0xa8>)
 8000806:	f043 0304 	orr.w	r3, r3, #4
 800080a:	6193      	str	r3, [r2, #24]
 800080c:	4b1b      	ldr	r3, [pc, #108]	@ (800087c <MX_GPIO_Init+0xa8>)
 800080e:	699b      	ldr	r3, [r3, #24]
 8000810:	f003 0304 	and.w	r3, r3, #4
 8000814:	60bb      	str	r3, [r7, #8]
 8000816:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000818:	4b18      	ldr	r3, [pc, #96]	@ (800087c <MX_GPIO_Init+0xa8>)
 800081a:	699b      	ldr	r3, [r3, #24]
 800081c:	4a17      	ldr	r2, [pc, #92]	@ (800087c <MX_GPIO_Init+0xa8>)
 800081e:	f043 0308 	orr.w	r3, r3, #8
 8000822:	6193      	str	r3, [r2, #24]
 8000824:	4b15      	ldr	r3, [pc, #84]	@ (800087c <MX_GPIO_Init+0xa8>)
 8000826:	699b      	ldr	r3, [r3, #24]
 8000828:	f003 0308 	and.w	r3, r3, #8
 800082c:	607b      	str	r3, [r7, #4]
 800082e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8000830:	2200      	movs	r2, #0
 8000832:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000836:	4812      	ldr	r0, [pc, #72]	@ (8000880 <MX_GPIO_Init+0xac>)
 8000838:	f000 fd2c 	bl	8001294 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 800083c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000840:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000842:	2301      	movs	r3, #1
 8000844:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000846:	2300      	movs	r3, #0
 8000848:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800084a:	2302      	movs	r3, #2
 800084c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 800084e:	f107 0310 	add.w	r3, r7, #16
 8000852:	4619      	mov	r1, r3
 8000854:	480a      	ldr	r0, [pc, #40]	@ (8000880 <MX_GPIO_Init+0xac>)
 8000856:	f000 fb99 	bl	8000f8c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB12 */
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800085a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800085e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000860:	2300      	movs	r3, #0
 8000862:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000864:	2301      	movs	r3, #1
 8000866:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000868:	f107 0310 	add.w	r3, r7, #16
 800086c:	4619      	mov	r1, r3
 800086e:	4805      	ldr	r0, [pc, #20]	@ (8000884 <MX_GPIO_Init+0xb0>)
 8000870:	f000 fb8c 	bl	8000f8c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000874:	bf00      	nop
 8000876:	3720      	adds	r7, #32
 8000878:	46bd      	mov	sp, r7
 800087a:	bd80      	pop	{r7, pc}
 800087c:	40021000 	.word	0x40021000
 8000880:	40011000 	.word	0x40011000
 8000884:	40010c00 	.word	0x40010c00

08000888 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000888:	b480      	push	{r7}
 800088a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800088c:	b672      	cpsid	i
}
 800088e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000890:	bf00      	nop
 8000892:	e7fd      	b.n	8000890 <Error_Handler+0x8>

08000894 <HAL_MspInit>:
 8000894:	b480      	push	{r7}
 8000896:	b085      	sub	sp, #20
 8000898:	af00      	add	r7, sp, #0
 800089a:	4b15      	ldr	r3, [pc, #84]	@ (80008f0 <HAL_MspInit+0x5c>)
 800089c:	699b      	ldr	r3, [r3, #24]
 800089e:	4a14      	ldr	r2, [pc, #80]	@ (80008f0 <HAL_MspInit+0x5c>)
 80008a0:	f043 0301 	orr.w	r3, r3, #1
 80008a4:	6193      	str	r3, [r2, #24]
 80008a6:	4b12      	ldr	r3, [pc, #72]	@ (80008f0 <HAL_MspInit+0x5c>)
 80008a8:	699b      	ldr	r3, [r3, #24]
 80008aa:	f003 0301 	and.w	r3, r3, #1
 80008ae:	60bb      	str	r3, [r7, #8]
 80008b0:	68bb      	ldr	r3, [r7, #8]
 80008b2:	4b0f      	ldr	r3, [pc, #60]	@ (80008f0 <HAL_MspInit+0x5c>)
 80008b4:	69db      	ldr	r3, [r3, #28]
 80008b6:	4a0e      	ldr	r2, [pc, #56]	@ (80008f0 <HAL_MspInit+0x5c>)
 80008b8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80008bc:	61d3      	str	r3, [r2, #28]
 80008be:	4b0c      	ldr	r3, [pc, #48]	@ (80008f0 <HAL_MspInit+0x5c>)
 80008c0:	69db      	ldr	r3, [r3, #28]
 80008c2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80008c6:	607b      	str	r3, [r7, #4]
 80008c8:	687b      	ldr	r3, [r7, #4]
 80008ca:	4b0a      	ldr	r3, [pc, #40]	@ (80008f4 <HAL_MspInit+0x60>)
 80008cc:	685b      	ldr	r3, [r3, #4]
 80008ce:	60fb      	str	r3, [r7, #12]
 80008d0:	68fb      	ldr	r3, [r7, #12]
 80008d2:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80008d6:	60fb      	str	r3, [r7, #12]
 80008d8:	68fb      	ldr	r3, [r7, #12]
 80008da:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80008de:	60fb      	str	r3, [r7, #12]
 80008e0:	4a04      	ldr	r2, [pc, #16]	@ (80008f4 <HAL_MspInit+0x60>)
 80008e2:	68fb      	ldr	r3, [r7, #12]
 80008e4:	6053      	str	r3, [r2, #4]
 80008e6:	bf00      	nop
 80008e8:	3714      	adds	r7, #20
 80008ea:	46bd      	mov	sp, r7
 80008ec:	bc80      	pop	{r7}
 80008ee:	4770      	bx	lr
 80008f0:	40021000 	.word	0x40021000
 80008f4:	40010000 	.word	0x40010000

080008f8 <HAL_UART_MspInit>:
 80008f8:	b580      	push	{r7, lr}
 80008fa:	b08a      	sub	sp, #40	@ 0x28
 80008fc:	af00      	add	r7, sp, #0
 80008fe:	6078      	str	r0, [r7, #4]
 8000900:	f107 0318 	add.w	r3, r7, #24
 8000904:	2200      	movs	r2, #0
 8000906:	601a      	str	r2, [r3, #0]
 8000908:	605a      	str	r2, [r3, #4]
 800090a:	609a      	str	r2, [r3, #8]
 800090c:	60da      	str	r2, [r3, #12]
 800090e:	687b      	ldr	r3, [r7, #4]
 8000910:	681b      	ldr	r3, [r3, #0]
 8000912:	4a3f      	ldr	r2, [pc, #252]	@ (8000a10 <HAL_UART_MspInit+0x118>)
 8000914:	4293      	cmp	r3, r2
 8000916:	d13a      	bne.n	800098e <HAL_UART_MspInit+0x96>
 8000918:	4b3e      	ldr	r3, [pc, #248]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 800091a:	699b      	ldr	r3, [r3, #24]
 800091c:	4a3d      	ldr	r2, [pc, #244]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 800091e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000922:	6193      	str	r3, [r2, #24]
 8000924:	4b3b      	ldr	r3, [pc, #236]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 8000926:	699b      	ldr	r3, [r3, #24]
 8000928:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800092c:	617b      	str	r3, [r7, #20]
 800092e:	697b      	ldr	r3, [r7, #20]
 8000930:	4b38      	ldr	r3, [pc, #224]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 8000932:	699b      	ldr	r3, [r3, #24]
 8000934:	4a37      	ldr	r2, [pc, #220]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 8000936:	f043 0304 	orr.w	r3, r3, #4
 800093a:	6193      	str	r3, [r2, #24]
 800093c:	4b35      	ldr	r3, [pc, #212]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 800093e:	699b      	ldr	r3, [r3, #24]
 8000940:	f003 0304 	and.w	r3, r3, #4
 8000944:	613b      	str	r3, [r7, #16]
 8000946:	693b      	ldr	r3, [r7, #16]
 8000948:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800094c:	61bb      	str	r3, [r7, #24]
 800094e:	2302      	movs	r3, #2
 8000950:	61fb      	str	r3, [r7, #28]
 8000952:	2303      	movs	r3, #3
 8000954:	627b      	str	r3, [r7, #36]	@ 0x24
 8000956:	f107 0318 	add.w	r3, r7, #24
 800095a:	4619      	mov	r1, r3
 800095c:	482e      	ldr	r0, [pc, #184]	@ (8000a18 <HAL_UART_MspInit+0x120>)
 800095e:	f000 fb15 	bl	8000f8c <HAL_GPIO_Init>
 8000962:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000966:	61bb      	str	r3, [r7, #24]
 8000968:	2300      	movs	r3, #0
 800096a:	61fb      	str	r3, [r7, #28]
 800096c:	2300      	movs	r3, #0
 800096e:	623b      	str	r3, [r7, #32]
 8000970:	f107 0318 	add.w	r3, r7, #24
 8000974:	4619      	mov	r1, r3
 8000976:	4828      	ldr	r0, [pc, #160]	@ (8000a18 <HAL_UART_MspInit+0x120>)
 8000978:	f000 fb08 	bl	8000f8c <HAL_GPIO_Init>
 800097c:	2200      	movs	r2, #0
 800097e:	2100      	movs	r1, #0
 8000980:	2025      	movs	r0, #37	@ 0x25
 8000982:	f000 fa56 	bl	8000e32 <HAL_NVIC_SetPriority>
 8000986:	2025      	movs	r0, #37	@ 0x25
 8000988:	f000 fa6f 	bl	8000e6a <HAL_NVIC_EnableIRQ>
 800098c:	e03c      	b.n	8000a08 <HAL_UART_MspInit+0x110>
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	681b      	ldr	r3, [r3, #0]
 8000992:	4a22      	ldr	r2, [pc, #136]	@ (8000a1c <HAL_UART_MspInit+0x124>)
 8000994:	4293      	cmp	r3, r2
 8000996:	d137      	bne.n	8000a08 <HAL_UART_MspInit+0x110>
 8000998:	4b1e      	ldr	r3, [pc, #120]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 800099a:	69db      	ldr	r3, [r3, #28]
 800099c:	4a1d      	ldr	r2, [pc, #116]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 800099e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80009a2:	61d3      	str	r3, [r2, #28]
 80009a4:	4b1b      	ldr	r3, [pc, #108]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 80009a6:	69db      	ldr	r3, [r3, #28]
 80009a8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80009ac:	60fb      	str	r3, [r7, #12]
 80009ae:	68fb      	ldr	r3, [r7, #12]
 80009b0:	4b18      	ldr	r3, [pc, #96]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 80009b2:	699b      	ldr	r3, [r3, #24]
 80009b4:	4a17      	ldr	r2, [pc, #92]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 80009b6:	f043 0304 	orr.w	r3, r3, #4
 80009ba:	6193      	str	r3, [r2, #24]
 80009bc:	4b15      	ldr	r3, [pc, #84]	@ (8000a14 <HAL_UART_MspInit+0x11c>)
 80009be:	699b      	ldr	r3, [r3, #24]
 80009c0:	f003 0304 	and.w	r3, r3, #4
 80009c4:	60bb      	str	r3, [r7, #8]
 80009c6:	68bb      	ldr	r3, [r7, #8]
 80009c8:	2304      	movs	r3, #4
 80009ca:	61bb      	str	r3, [r7, #24]
 80009cc:	2302      	movs	r3, #2
 80009ce:	61fb      	str	r3, [r7, #28]
 80009d0:	2303      	movs	r3, #3
 80009d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80009d4:	f107 0318 	add.w	r3, r7, #24
 80009d8:	4619      	mov	r1, r3
 80009da:	480f      	ldr	r0, [pc, #60]	@ (8000a18 <HAL_UART_MspInit+0x120>)
 80009dc:	f000 fad6 	bl	8000f8c <HAL_GPIO_Init>
 80009e0:	2308      	movs	r3, #8
 80009e2:	61bb      	str	r3, [r7, #24]
 80009e4:	2300      	movs	r3, #0
 80009e6:	61fb      	str	r3, [r7, #28]
 80009e8:	2300      	movs	r3, #0
 80009ea:	623b      	str	r3, [r7, #32]
 80009ec:	f107 0318 	add.w	r3, r7, #24
 80009f0:	4619      	mov	r1, r3
 80009f2:	4809      	ldr	r0, [pc, #36]	@ (8000a18 <HAL_UART_MspInit+0x120>)
 80009f4:	f000 faca 	bl	8000f8c <HAL_GPIO_Init>
 80009f8:	2200      	movs	r2, #0
 80009fa:	2100      	movs	r1, #0
 80009fc:	2026      	movs	r0, #38	@ 0x26
 80009fe:	f000 fa18 	bl	8000e32 <HAL_NVIC_SetPriority>
 8000a02:	2026      	movs	r0, #38	@ 0x26
 8000a04:	f000 fa31 	bl	8000e6a <HAL_NVIC_EnableIRQ>
 8000a08:	bf00      	nop
 8000a0a:	3728      	adds	r7, #40	@ 0x28
 8000a0c:	46bd      	mov	sp, r7
 8000a0e:	bd80      	pop	{r7, pc}
 8000a10:	40013800 	.word	0x40013800
 8000a14:	40021000 	.word	0x40021000
 8000a18:	40010800 	.word	0x40010800
 8000a1c:	40004400 	.word	0x40004400

08000a20 <NMI_Handler>:
 8000a20:	b480      	push	{r7}
 8000a22:	af00      	add	r7, sp, #0
 8000a24:	bf00      	nop
 8000a26:	e7fd      	b.n	8000a24 <NMI_Handler+0x4>

08000a28 <HardFault_Handler>:
 8000a28:	b480      	push	{r7}
 8000a2a:	af00      	add	r7, sp, #0
 8000a2c:	bf00      	nop
 8000a2e:	e7fd      	b.n	8000a2c <HardFault_Handler+0x4>

08000a30 <MemManage_Handler>:
 8000a30:	b480      	push	{r7}
 8000a32:	af00      	add	r7, sp, #0
 8000a34:	bf00      	nop
 8000a36:	e7fd      	b.n	8000a34 <MemManage_Handler+0x4>

08000a38 <BusFault_Handler>:
 8000a38:	b480      	push	{r7}
 8000a3a:	af00      	add	r7, sp, #0
 8000a3c:	bf00      	nop
 8000a3e:	e7fd      	b.n	8000a3c <BusFault_Handler+0x4>

08000a40 <UsageFault_Handler>:
 8000a40:	b480      	push	{r7}
 8000a42:	af00      	add	r7, sp, #0
 8000a44:	bf00      	nop
 8000a46:	e7fd      	b.n	8000a44 <UsageFault_Handler+0x4>

08000a48 <SVC_Handler>:
 8000a48:	b480      	push	{r7}
 8000a4a:	af00      	add	r7, sp, #0
 8000a4c:	bf00      	nop
 8000a4e:	46bd      	mov	sp, r7
 8000a50:	bc80      	pop	{r7}
 8000a52:	4770      	bx	lr

08000a54 <DebugMon_Handler>:
 8000a54:	b480      	push	{r7}
 8000a56:	af00      	add	r7, sp, #0
 8000a58:	bf00      	nop
 8000a5a:	46bd      	mov	sp, r7
 8000a5c:	bc80      	pop	{r7}
 8000a5e:	4770      	bx	lr

08000a60 <PendSV_Handler>:
 8000a60:	b480      	push	{r7}
 8000a62:	af00      	add	r7, sp, #0
 8000a64:	bf00      	nop
 8000a66:	46bd      	mov	sp, r7
 8000a68:	bc80      	pop	{r7}
 8000a6a:	4770      	bx	lr

08000a6c <SysTick_Handler>:
 8000a6c:	b580      	push	{r7, lr}
 8000a6e:	af00      	add	r7, sp, #0
 8000a70:	f000 f8ec 	bl	8000c4c <HAL_IncTick>
 8000a74:	bf00      	nop
 8000a76:	bd80      	pop	{r7, pc}

08000a78 <USART1_IRQHandler>:
 8000a78:	b580      	push	{r7, lr}
 8000a7a:	af00      	add	r7, sp, #0
 8000a7c:	4802      	ldr	r0, [pc, #8]	@ (8000a88 <USART1_IRQHandler+0x10>)
 8000a7e:	f001 f921 	bl	8001cc4 <HAL_UART_IRQHandler>
 8000a82:	bf00      	nop
 8000a84:	bd80      	pop	{r7, pc}
 8000a86:	bf00      	nop
 8000a88:	20000078 	.word	0x20000078

08000a8c <USART2_IRQHandler>:
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	af00      	add	r7, sp, #0
 8000a90:	4802      	ldr	r0, [pc, #8]	@ (8000a9c <USART2_IRQHandler+0x10>)
 8000a92:	f001 f917 	bl	8001cc4 <HAL_UART_IRQHandler>
 8000a96:	bf00      	nop
 8000a98:	bd80      	pop	{r7, pc}
 8000a9a:	bf00      	nop
 8000a9c:	200000b8 	.word	0x200000b8

08000aa0 <_sbrk>:
 8000aa0:	b580      	push	{r7, lr}
 8000aa2:	b086      	sub	sp, #24
 8000aa4:	af00      	add	r7, sp, #0
 8000aa6:	6078      	str	r0, [r7, #4]
 8000aa8:	4a14      	ldr	r2, [pc, #80]	@ (8000afc <_sbrk+0x5c>)
 8000aaa:	4b15      	ldr	r3, [pc, #84]	@ (8000b00 <_sbrk+0x60>)
 8000aac:	1ad3      	subs	r3, r2, r3
 8000aae:	617b      	str	r3, [r7, #20]
 8000ab0:	697b      	ldr	r3, [r7, #20]
 8000ab2:	613b      	str	r3, [r7, #16]
 8000ab4:	4b13      	ldr	r3, [pc, #76]	@ (8000b04 <_sbrk+0x64>)
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	2b00      	cmp	r3, #0
 8000aba:	d102      	bne.n	8000ac2 <_sbrk+0x22>
 8000abc:	4b11      	ldr	r3, [pc, #68]	@ (8000b04 <_sbrk+0x64>)
 8000abe:	4a12      	ldr	r2, [pc, #72]	@ (8000b08 <_sbrk+0x68>)
 8000ac0:	601a      	str	r2, [r3, #0]
 8000ac2:	4b10      	ldr	r3, [pc, #64]	@ (8000b04 <_sbrk+0x64>)
 8000ac4:	681a      	ldr	r2, [r3, #0]
 8000ac6:	687b      	ldr	r3, [r7, #4]
 8000ac8:	4413      	add	r3, r2
 8000aca:	693a      	ldr	r2, [r7, #16]
 8000acc:	429a      	cmp	r2, r3
 8000ace:	d207      	bcs.n	8000ae0 <_sbrk+0x40>
 8000ad0:	f001 fc3a 	bl	8002348 <__errno>
 8000ad4:	4603      	mov	r3, r0
 8000ad6:	220c      	movs	r2, #12
 8000ad8:	601a      	str	r2, [r3, #0]
 8000ada:	f04f 33ff 	mov.w	r3, #4294967295
 8000ade:	e009      	b.n	8000af4 <_sbrk+0x54>
 8000ae0:	4b08      	ldr	r3, [pc, #32]	@ (8000b04 <_sbrk+0x64>)
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	60fb      	str	r3, [r7, #12]
 8000ae6:	4b07      	ldr	r3, [pc, #28]	@ (8000b04 <_sbrk+0x64>)
 8000ae8:	681a      	ldr	r2, [r3, #0]
 8000aea:	687b      	ldr	r3, [r7, #4]
 8000aec:	4413      	add	r3, r2
 8000aee:	4a05      	ldr	r2, [pc, #20]	@ (8000b04 <_sbrk+0x64>)
 8000af0:	6013      	str	r3, [r2, #0]
 8000af2:	68fb      	ldr	r3, [r7, #12]
 8000af4:	4618      	mov	r0, r3
 8000af6:	3718      	adds	r7, #24
 8000af8:	46bd      	mov	sp, r7
 8000afa:	bd80      	pop	{r7, pc}
 8000afc:	20005000 	.word	0x20005000
 8000b00:	00000400 	.word	0x00000400
 8000b04:	2000029c 	.word	0x2000029c
 8000b08:	200003f0 	.word	0x200003f0

08000b0c <SystemInit>:
 8000b0c:	b480      	push	{r7}
 8000b0e:	af00      	add	r7, sp, #0
 8000b10:	4b15      	ldr	r3, [pc, #84]	@ (8000b68 <SystemInit+0x5c>)
 8000b12:	681b      	ldr	r3, [r3, #0]
 8000b14:	4a14      	ldr	r2, [pc, #80]	@ (8000b68 <SystemInit+0x5c>)
 8000b16:	f043 0301 	orr.w	r3, r3, #1
 8000b1a:	6013      	str	r3, [r2, #0]
 8000b1c:	4b12      	ldr	r3, [pc, #72]	@ (8000b68 <SystemInit+0x5c>)
 8000b1e:	685a      	ldr	r2, [r3, #4]
 8000b20:	4911      	ldr	r1, [pc, #68]	@ (8000b68 <SystemInit+0x5c>)
 8000b22:	4b12      	ldr	r3, [pc, #72]	@ (8000b6c <SystemInit+0x60>)
 8000b24:	4013      	ands	r3, r2
 8000b26:	604b      	str	r3, [r1, #4]
 8000b28:	4b0f      	ldr	r3, [pc, #60]	@ (8000b68 <SystemInit+0x5c>)
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	4a0e      	ldr	r2, [pc, #56]	@ (8000b68 <SystemInit+0x5c>)
 8000b2e:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
 8000b32:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000b36:	6013      	str	r3, [r2, #0]
 8000b38:	4b0b      	ldr	r3, [pc, #44]	@ (8000b68 <SystemInit+0x5c>)
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b68 <SystemInit+0x5c>)
 8000b3e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8000b42:	6013      	str	r3, [r2, #0]
 8000b44:	4b08      	ldr	r3, [pc, #32]	@ (8000b68 <SystemInit+0x5c>)
 8000b46:	685b      	ldr	r3, [r3, #4]
 8000b48:	4a07      	ldr	r2, [pc, #28]	@ (8000b68 <SystemInit+0x5c>)
 8000b4a:	f423 03fe 	bic.w	r3, r3, #8323072	@ 0x7f0000
 8000b4e:	6053      	str	r3, [r2, #4]
 8000b50:	4b05      	ldr	r3, [pc, #20]	@ (8000b68 <SystemInit+0x5c>)
 8000b52:	f44f 021f 	mov.w	r2, #10420224	@ 0x9f0000
 8000b56:	609a      	str	r2, [r3, #8]
 8000b58:	4b05      	ldr	r3, [pc, #20]	@ (8000b70 <SystemInit+0x64>)
 8000b5a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8000b5e:	609a      	str	r2, [r3, #8]
 8000b60:	bf00      	nop
 8000b62:	46bd      	mov	sp, r7
 8000b64:	bc80      	pop	{r7}
 8000b66:	4770      	bx	lr
 8000b68:	40021000 	.word	0x40021000
 8000b6c:	f8ff0000 	.word	0xf8ff0000
 8000b70:	e000ed00 	.word	0xe000ed00

08000b74 <Reset_Handler>:
 8000b74:	2100      	movs	r1, #0
 8000b76:	e003      	b.n	8000b80 <LoopCopyDataInit>

08000b78 <CopyDataInit>:
 8000b78:	4b0b      	ldr	r3, [pc, #44]	@ (8000ba8 <LoopFillZerobss+0x14>)
 8000b7a:	585b      	ldr	r3, [r3, r1]
 8000b7c:	5043      	str	r3, [r0, r1]
 8000b7e:	3104      	adds	r1, #4

08000b80 <LoopCopyDataInit>:
 8000b80:	480a      	ldr	r0, [pc, #40]	@ (8000bac <LoopFillZerobss+0x18>)
 8000b82:	4b0b      	ldr	r3, [pc, #44]	@ (8000bb0 <LoopFillZerobss+0x1c>)
 8000b84:	1842      	adds	r2, r0, r1
 8000b86:	429a      	cmp	r2, r3
 8000b88:	d3f6      	bcc.n	8000b78 <CopyDataInit>
 8000b8a:	4a0a      	ldr	r2, [pc, #40]	@ (8000bb4 <LoopFillZerobss+0x20>)
 8000b8c:	e002      	b.n	8000b94 <LoopFillZerobss>

08000b8e <FillZerobss>:
 8000b8e:	2300      	movs	r3, #0
 8000b90:	f842 3b04 	str.w	r3, [r2], #4

08000b94 <LoopFillZerobss>:
 8000b94:	4b08      	ldr	r3, [pc, #32]	@ (8000bb8 <LoopFillZerobss+0x24>)
 8000b96:	429a      	cmp	r2, r3
 8000b98:	d3f9      	bcc.n	8000b8e <FillZerobss>
 8000b9a:	f7ff ffb7 	bl	8000b0c <SystemInit>
 8000b9e:	f001 fbd9 	bl	8002354 <__libc_init_array>
 8000ba2:	f7ff fd5f 	bl	8000664 <main>
 8000ba6:	4770      	bx	lr
 8000ba8:	08002cfc 	.word	0x08002cfc
 8000bac:	20000000 	.word	0x20000000
 8000bb0:	2000005c 	.word	0x2000005c
 8000bb4:	2000005c 	.word	0x2000005c
 8000bb8:	200003ec 	.word	0x200003ec

08000bbc <ADC1_2_IRQHandler>:
 8000bbc:	e7fe      	b.n	8000bbc <ADC1_2_IRQHandler>
	...

08000bc0 <HAL_Init>:
 8000bc0:	b580      	push	{r7, lr}
 8000bc2:	af00      	add	r7, sp, #0
 8000bc4:	4b08      	ldr	r3, [pc, #32]	@ (8000be8 <HAL_Init+0x28>)
 8000bc6:	681b      	ldr	r3, [r3, #0]
 8000bc8:	4a07      	ldr	r2, [pc, #28]	@ (8000be8 <HAL_Init+0x28>)
 8000bca:	f043 0310 	orr.w	r3, r3, #16
 8000bce:	6013      	str	r3, [r2, #0]
 8000bd0:	2003      	movs	r0, #3
 8000bd2:	f000 f923 	bl	8000e1c <HAL_NVIC_SetPriorityGrouping>
 8000bd6:	200f      	movs	r0, #15
 8000bd8:	f000 f808 	bl	8000bec <HAL_InitTick>
 8000bdc:	f7ff fe5a 	bl	8000894 <HAL_MspInit>
 8000be0:	2300      	movs	r3, #0
 8000be2:	4618      	mov	r0, r3
 8000be4:	bd80      	pop	{r7, pc}
 8000be6:	bf00      	nop
 8000be8:	40022000 	.word	0x40022000

08000bec <HAL_InitTick>:
 8000bec:	b580      	push	{r7, lr}
 8000bee:	b082      	sub	sp, #8
 8000bf0:	af00      	add	r7, sp, #0
 8000bf2:	6078      	str	r0, [r7, #4]
 8000bf4:	4b12      	ldr	r3, [pc, #72]	@ (8000c40 <HAL_InitTick+0x54>)
 8000bf6:	681a      	ldr	r2, [r3, #0]
 8000bf8:	4b12      	ldr	r3, [pc, #72]	@ (8000c44 <HAL_InitTick+0x58>)
 8000bfa:	781b      	ldrb	r3, [r3, #0]
 8000bfc:	4619      	mov	r1, r3
 8000bfe:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000c02:	fbb3 f3f1 	udiv	r3, r3, r1
 8000c06:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c0a:	4618      	mov	r0, r3
 8000c0c:	f000 f93b 	bl	8000e86 <HAL_SYSTICK_Config>
 8000c10:	4603      	mov	r3, r0
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d001      	beq.n	8000c1a <HAL_InitTick+0x2e>
 8000c16:	2301      	movs	r3, #1
 8000c18:	e00e      	b.n	8000c38 <HAL_InitTick+0x4c>
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	2b0f      	cmp	r3, #15
 8000c1e:	d80a      	bhi.n	8000c36 <HAL_InitTick+0x4a>
 8000c20:	2200      	movs	r2, #0
 8000c22:	6879      	ldr	r1, [r7, #4]
 8000c24:	f04f 30ff 	mov.w	r0, #4294967295
 8000c28:	f000 f903 	bl	8000e32 <HAL_NVIC_SetPriority>
 8000c2c:	4a06      	ldr	r2, [pc, #24]	@ (8000c48 <HAL_InitTick+0x5c>)
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	6013      	str	r3, [r2, #0]
 8000c32:	2300      	movs	r3, #0
 8000c34:	e000      	b.n	8000c38 <HAL_InitTick+0x4c>
 8000c36:	2301      	movs	r3, #1
 8000c38:	4618      	mov	r0, r3
 8000c3a:	3708      	adds	r7, #8
 8000c3c:	46bd      	mov	sp, r7
 8000c3e:	bd80      	pop	{r7, pc}
 8000c40:	20000000 	.word	0x20000000
 8000c44:	20000008 	.word	0x20000008
 8000c48:	20000004 	.word	0x20000004

08000c4c <HAL_IncTick>:
 8000c4c:	b480      	push	{r7}
 8000c4e:	af00      	add	r7, sp, #0
 8000c50:	4b05      	ldr	r3, [pc, #20]	@ (8000c68 <HAL_IncTick+0x1c>)
 8000c52:	781b      	ldrb	r3, [r3, #0]
 8000c54:	461a      	mov	r2, r3
 8000c56:	4b05      	ldr	r3, [pc, #20]	@ (8000c6c <HAL_IncTick+0x20>)
 8000c58:	681b      	ldr	r3, [r3, #0]
 8000c5a:	4413      	add	r3, r2
 8000c5c:	4a03      	ldr	r2, [pc, #12]	@ (8000c6c <HAL_IncTick+0x20>)
 8000c5e:	6013      	str	r3, [r2, #0]
 8000c60:	bf00      	nop
 8000c62:	46bd      	mov	sp, r7
 8000c64:	bc80      	pop	{r7}
 8000c66:	4770      	bx	lr
 8000c68:	20000008 	.word	0x20000008
 8000c6c:	200002a0 	.word	0x200002a0

08000c70 <HAL_GetTick>:
 8000c70:	b480      	push	{r7}
 8000c72:	af00      	add	r7, sp, #0
 8000c74:	4b02      	ldr	r3, [pc, #8]	@ (8000c80 <HAL_GetTick+0x10>)
 8000c76:	681b      	ldr	r3, [r3, #0]
 8000c78:	4618      	mov	r0, r3
 8000c7a:	46bd      	mov	sp, r7
 8000c7c:	bc80      	pop	{r7}
 8000c7e:	4770      	bx	lr
 8000c80:	200002a0 	.word	0x200002a0

08000c84 <__NVIC_SetPriorityGrouping>:
 8000c84:	b480      	push	{r7}
 8000c86:	b085      	sub	sp, #20
 8000c88:	af00      	add	r7, sp, #0
 8000c8a:	6078      	str	r0, [r7, #4]
 8000c8c:	687b      	ldr	r3, [r7, #4]
 8000c8e:	f003 0307 	and.w	r3, r3, #7
 8000c92:	60fb      	str	r3, [r7, #12]
 8000c94:	4b0c      	ldr	r3, [pc, #48]	@ (8000cc8 <__NVIC_SetPriorityGrouping+0x44>)
 8000c96:	68db      	ldr	r3, [r3, #12]
 8000c98:	60bb      	str	r3, [r7, #8]
 8000c9a:	68ba      	ldr	r2, [r7, #8]
 8000c9c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000ca0:	4013      	ands	r3, r2
 8000ca2:	60bb      	str	r3, [r7, #8]
 8000ca4:	68fb      	ldr	r3, [r7, #12]
 8000ca6:	021a      	lsls	r2, r3, #8
 8000ca8:	68bb      	ldr	r3, [r7, #8]
 8000caa:	4313      	orrs	r3, r2
 8000cac:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000cb0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000cb4:	60bb      	str	r3, [r7, #8]
 8000cb6:	4a04      	ldr	r2, [pc, #16]	@ (8000cc8 <__NVIC_SetPriorityGrouping+0x44>)
 8000cb8:	68bb      	ldr	r3, [r7, #8]
 8000cba:	60d3      	str	r3, [r2, #12]
 8000cbc:	bf00      	nop
 8000cbe:	3714      	adds	r7, #20
 8000cc0:	46bd      	mov	sp, r7
 8000cc2:	bc80      	pop	{r7}
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop
 8000cc8:	e000ed00 	.word	0xe000ed00

08000ccc <__NVIC_GetPriorityGrouping>:
 8000ccc:	b480      	push	{r7}
 8000cce:	af00      	add	r7, sp, #0
 8000cd0:	4b04      	ldr	r3, [pc, #16]	@ (8000ce4 <__NVIC_GetPriorityGrouping+0x18>)
 8000cd2:	68db      	ldr	r3, [r3, #12]
 8000cd4:	0a1b      	lsrs	r3, r3, #8
 8000cd6:	f003 0307 	and.w	r3, r3, #7
 8000cda:	4618      	mov	r0, r3
 8000cdc:	46bd      	mov	sp, r7
 8000cde:	bc80      	pop	{r7}
 8000ce0:	4770      	bx	lr
 8000ce2:	bf00      	nop
 8000ce4:	e000ed00 	.word	0xe000ed00

08000ce8 <__NVIC_EnableIRQ>:
 8000ce8:	b480      	push	{r7}
 8000cea:	b083      	sub	sp, #12
 8000cec:	af00      	add	r7, sp, #0
 8000cee:	4603      	mov	r3, r0
 8000cf0:	71fb      	strb	r3, [r7, #7]
 8000cf2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000cf6:	2b00      	cmp	r3, #0
 8000cf8:	db0b      	blt.n	8000d12 <__NVIC_EnableIRQ+0x2a>
 8000cfa:	79fb      	ldrb	r3, [r7, #7]
 8000cfc:	f003 021f 	and.w	r2, r3, #31
 8000d00:	4906      	ldr	r1, [pc, #24]	@ (8000d1c <__NVIC_EnableIRQ+0x34>)
 8000d02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d06:	095b      	lsrs	r3, r3, #5
 8000d08:	2001      	movs	r0, #1
 8000d0a:	fa00 f202 	lsl.w	r2, r0, r2
 8000d0e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000d12:	bf00      	nop
 8000d14:	370c      	adds	r7, #12
 8000d16:	46bd      	mov	sp, r7
 8000d18:	bc80      	pop	{r7}
 8000d1a:	4770      	bx	lr
 8000d1c:	e000e100 	.word	0xe000e100

08000d20 <__NVIC_SetPriority>:
 8000d20:	b480      	push	{r7}
 8000d22:	b083      	sub	sp, #12
 8000d24:	af00      	add	r7, sp, #0
 8000d26:	4603      	mov	r3, r0
 8000d28:	6039      	str	r1, [r7, #0]
 8000d2a:	71fb      	strb	r3, [r7, #7]
 8000d2c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	db0a      	blt.n	8000d4a <__NVIC_SetPriority+0x2a>
 8000d34:	683b      	ldr	r3, [r7, #0]
 8000d36:	b2da      	uxtb	r2, r3
 8000d38:	490c      	ldr	r1, [pc, #48]	@ (8000d6c <__NVIC_SetPriority+0x4c>)
 8000d3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d3e:	0112      	lsls	r2, r2, #4
 8000d40:	b2d2      	uxtb	r2, r2
 8000d42:	440b      	add	r3, r1
 8000d44:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8000d48:	e00a      	b.n	8000d60 <__NVIC_SetPriority+0x40>
 8000d4a:	683b      	ldr	r3, [r7, #0]
 8000d4c:	b2da      	uxtb	r2, r3
 8000d4e:	4908      	ldr	r1, [pc, #32]	@ (8000d70 <__NVIC_SetPriority+0x50>)
 8000d50:	79fb      	ldrb	r3, [r7, #7]
 8000d52:	f003 030f 	and.w	r3, r3, #15
 8000d56:	3b04      	subs	r3, #4
 8000d58:	0112      	lsls	r2, r2, #4
 8000d5a:	b2d2      	uxtb	r2, r2
 8000d5c:	440b      	add	r3, r1
 8000d5e:	761a      	strb	r2, [r3, #24]
 8000d60:	bf00      	nop
 8000d62:	370c      	adds	r7, #12
 8000d64:	46bd      	mov	sp, r7
 8000d66:	bc80      	pop	{r7}
 8000d68:	4770      	bx	lr
 8000d6a:	bf00      	nop
 8000d6c:	e000e100 	.word	0xe000e100
 8000d70:	e000ed00 	.word	0xe000ed00

08000d74 <NVIC_EncodePriority>:
 8000d74:	b480      	push	{r7}
 8000d76:	b089      	sub	sp, #36	@ 0x24
 8000d78:	af00      	add	r7, sp, #0
 8000d7a:	60f8      	str	r0, [r7, #12]
 8000d7c:	60b9      	str	r1, [r7, #8]
 8000d7e:	607a      	str	r2, [r7, #4]
 8000d80:	68fb      	ldr	r3, [r7, #12]
 8000d82:	f003 0307 	and.w	r3, r3, #7
 8000d86:	61fb      	str	r3, [r7, #28]
 8000d88:	69fb      	ldr	r3, [r7, #28]
 8000d8a:	f1c3 0307 	rsb	r3, r3, #7
 8000d8e:	2b04      	cmp	r3, #4
 8000d90:	bf28      	it	cs
 8000d92:	2304      	movcs	r3, #4
 8000d94:	61bb      	str	r3, [r7, #24]
 8000d96:	69fb      	ldr	r3, [r7, #28]
 8000d98:	3304      	adds	r3, #4
 8000d9a:	2b06      	cmp	r3, #6
 8000d9c:	d902      	bls.n	8000da4 <NVIC_EncodePriority+0x30>
 8000d9e:	69fb      	ldr	r3, [r7, #28]
 8000da0:	3b03      	subs	r3, #3
 8000da2:	e000      	b.n	8000da6 <NVIC_EncodePriority+0x32>
 8000da4:	2300      	movs	r3, #0
 8000da6:	617b      	str	r3, [r7, #20]
 8000da8:	f04f 32ff 	mov.w	r2, #4294967295
 8000dac:	69bb      	ldr	r3, [r7, #24]
 8000dae:	fa02 f303 	lsl.w	r3, r2, r3
 8000db2:	43da      	mvns	r2, r3
 8000db4:	68bb      	ldr	r3, [r7, #8]
 8000db6:	401a      	ands	r2, r3
 8000db8:	697b      	ldr	r3, [r7, #20]
 8000dba:	409a      	lsls	r2, r3
 8000dbc:	f04f 31ff 	mov.w	r1, #4294967295
 8000dc0:	697b      	ldr	r3, [r7, #20]
 8000dc2:	fa01 f303 	lsl.w	r3, r1, r3
 8000dc6:	43d9      	mvns	r1, r3
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	400b      	ands	r3, r1
 8000dcc:	4313      	orrs	r3, r2
 8000dce:	4618      	mov	r0, r3
 8000dd0:	3724      	adds	r7, #36	@ 0x24
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	bc80      	pop	{r7}
 8000dd6:	4770      	bx	lr

08000dd8 <SysTick_Config>:
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	b082      	sub	sp, #8
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	6078      	str	r0, [r7, #4]
 8000de0:	687b      	ldr	r3, [r7, #4]
 8000de2:	3b01      	subs	r3, #1
 8000de4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000de8:	d301      	bcc.n	8000dee <SysTick_Config+0x16>
 8000dea:	2301      	movs	r3, #1
 8000dec:	e00f      	b.n	8000e0e <SysTick_Config+0x36>
 8000dee:	4a0a      	ldr	r2, [pc, #40]	@ (8000e18 <SysTick_Config+0x40>)
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	3b01      	subs	r3, #1
 8000df4:	6053      	str	r3, [r2, #4]
 8000df6:	210f      	movs	r1, #15
 8000df8:	f04f 30ff 	mov.w	r0, #4294967295
 8000dfc:	f7ff ff90 	bl	8000d20 <__NVIC_SetPriority>
 8000e00:	4b05      	ldr	r3, [pc, #20]	@ (8000e18 <SysTick_Config+0x40>)
 8000e02:	2200      	movs	r2, #0
 8000e04:	609a      	str	r2, [r3, #8]
 8000e06:	4b04      	ldr	r3, [pc, #16]	@ (8000e18 <SysTick_Config+0x40>)
 8000e08:	2207      	movs	r2, #7
 8000e0a:	601a      	str	r2, [r3, #0]
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	4618      	mov	r0, r3
 8000e10:	3708      	adds	r7, #8
 8000e12:	46bd      	mov	sp, r7
 8000e14:	bd80      	pop	{r7, pc}
 8000e16:	bf00      	nop
 8000e18:	e000e010 	.word	0xe000e010

08000e1c <HAL_NVIC_SetPriorityGrouping>:
 8000e1c:	b580      	push	{r7, lr}
 8000e1e:	b082      	sub	sp, #8
 8000e20:	af00      	add	r7, sp, #0
 8000e22:	6078      	str	r0, [r7, #4]
 8000e24:	6878      	ldr	r0, [r7, #4]
 8000e26:	f7ff ff2d 	bl	8000c84 <__NVIC_SetPriorityGrouping>
 8000e2a:	bf00      	nop
 8000e2c:	3708      	adds	r7, #8
 8000e2e:	46bd      	mov	sp, r7
 8000e30:	bd80      	pop	{r7, pc}

08000e32 <HAL_NVIC_SetPriority>:
 8000e32:	b580      	push	{r7, lr}
 8000e34:	b086      	sub	sp, #24
 8000e36:	af00      	add	r7, sp, #0
 8000e38:	4603      	mov	r3, r0
 8000e3a:	60b9      	str	r1, [r7, #8]
 8000e3c:	607a      	str	r2, [r7, #4]
 8000e3e:	73fb      	strb	r3, [r7, #15]
 8000e40:	2300      	movs	r3, #0
 8000e42:	617b      	str	r3, [r7, #20]
 8000e44:	f7ff ff42 	bl	8000ccc <__NVIC_GetPriorityGrouping>
 8000e48:	6178      	str	r0, [r7, #20]
 8000e4a:	687a      	ldr	r2, [r7, #4]
 8000e4c:	68b9      	ldr	r1, [r7, #8]
 8000e4e:	6978      	ldr	r0, [r7, #20]
 8000e50:	f7ff ff90 	bl	8000d74 <NVIC_EncodePriority>
 8000e54:	4602      	mov	r2, r0
 8000e56:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000e5a:	4611      	mov	r1, r2
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	f7ff ff5f 	bl	8000d20 <__NVIC_SetPriority>
 8000e62:	bf00      	nop
 8000e64:	3718      	adds	r7, #24
 8000e66:	46bd      	mov	sp, r7
 8000e68:	bd80      	pop	{r7, pc}

08000e6a <HAL_NVIC_EnableIRQ>:
 8000e6a:	b580      	push	{r7, lr}
 8000e6c:	b082      	sub	sp, #8
 8000e6e:	af00      	add	r7, sp, #0
 8000e70:	4603      	mov	r3, r0
 8000e72:	71fb      	strb	r3, [r7, #7]
 8000e74:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e78:	4618      	mov	r0, r3
 8000e7a:	f7ff ff35 	bl	8000ce8 <__NVIC_EnableIRQ>
 8000e7e:	bf00      	nop
 8000e80:	3708      	adds	r7, #8
 8000e82:	46bd      	mov	sp, r7
 8000e84:	bd80      	pop	{r7, pc}

08000e86 <HAL_SYSTICK_Config>:
 8000e86:	b580      	push	{r7, lr}
 8000e88:	b082      	sub	sp, #8
 8000e8a:	af00      	add	r7, sp, #0
 8000e8c:	6078      	str	r0, [r7, #4]
 8000e8e:	6878      	ldr	r0, [r7, #4]
 8000e90:	f7ff ffa2 	bl	8000dd8 <SysTick_Config>
 8000e94:	4603      	mov	r3, r0
 8000e96:	4618      	mov	r0, r3
 8000e98:	3708      	adds	r7, #8
 8000e9a:	46bd      	mov	sp, r7
 8000e9c:	bd80      	pop	{r7, pc}
	...

08000ea0 <HAL_DMA_Abort_IT>:
 8000ea0:	b580      	push	{r7, lr}
 8000ea2:	b084      	sub	sp, #16
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	6078      	str	r0, [r7, #4]
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	73fb      	strb	r3, [r7, #15]
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8000eb2:	2b02      	cmp	r3, #2
 8000eb4:	d005      	beq.n	8000ec2 <HAL_DMA_Abort_IT+0x22>
 8000eb6:	687b      	ldr	r3, [r7, #4]
 8000eb8:	2204      	movs	r2, #4
 8000eba:	639a      	str	r2, [r3, #56]	@ 0x38
 8000ebc:	2301      	movs	r3, #1
 8000ebe:	73fb      	strb	r3, [r7, #15]
 8000ec0:	e051      	b.n	8000f66 <HAL_DMA_Abort_IT+0xc6>
 8000ec2:	687b      	ldr	r3, [r7, #4]
 8000ec4:	681b      	ldr	r3, [r3, #0]
 8000ec6:	681a      	ldr	r2, [r3, #0]
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	f022 020e 	bic.w	r2, r2, #14
 8000ed0:	601a      	str	r2, [r3, #0]
 8000ed2:	687b      	ldr	r3, [r7, #4]
 8000ed4:	681b      	ldr	r3, [r3, #0]
 8000ed6:	681a      	ldr	r2, [r3, #0]
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	681b      	ldr	r3, [r3, #0]
 8000edc:	f022 0201 	bic.w	r2, r2, #1
 8000ee0:	601a      	str	r2, [r3, #0]
 8000ee2:	687b      	ldr	r3, [r7, #4]
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	4a22      	ldr	r2, [pc, #136]	@ (8000f70 <HAL_DMA_Abort_IT+0xd0>)
 8000ee8:	4293      	cmp	r3, r2
 8000eea:	d029      	beq.n	8000f40 <HAL_DMA_Abort_IT+0xa0>
 8000eec:	687b      	ldr	r3, [r7, #4]
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	4a20      	ldr	r2, [pc, #128]	@ (8000f74 <HAL_DMA_Abort_IT+0xd4>)
 8000ef2:	4293      	cmp	r3, r2
 8000ef4:	d022      	beq.n	8000f3c <HAL_DMA_Abort_IT+0x9c>
 8000ef6:	687b      	ldr	r3, [r7, #4]
 8000ef8:	681b      	ldr	r3, [r3, #0]
 8000efa:	4a1f      	ldr	r2, [pc, #124]	@ (8000f78 <HAL_DMA_Abort_IT+0xd8>)
 8000efc:	4293      	cmp	r3, r2
 8000efe:	d01a      	beq.n	8000f36 <HAL_DMA_Abort_IT+0x96>
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	681b      	ldr	r3, [r3, #0]
 8000f04:	4a1d      	ldr	r2, [pc, #116]	@ (8000f7c <HAL_DMA_Abort_IT+0xdc>)
 8000f06:	4293      	cmp	r3, r2
 8000f08:	d012      	beq.n	8000f30 <HAL_DMA_Abort_IT+0x90>
 8000f0a:	687b      	ldr	r3, [r7, #4]
 8000f0c:	681b      	ldr	r3, [r3, #0]
 8000f0e:	4a1c      	ldr	r2, [pc, #112]	@ (8000f80 <HAL_DMA_Abort_IT+0xe0>)
 8000f10:	4293      	cmp	r3, r2
 8000f12:	d00a      	beq.n	8000f2a <HAL_DMA_Abort_IT+0x8a>
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	4a1a      	ldr	r2, [pc, #104]	@ (8000f84 <HAL_DMA_Abort_IT+0xe4>)
 8000f1a:	4293      	cmp	r3, r2
 8000f1c:	d102      	bne.n	8000f24 <HAL_DMA_Abort_IT+0x84>
 8000f1e:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8000f22:	e00e      	b.n	8000f42 <HAL_DMA_Abort_IT+0xa2>
 8000f24:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8000f28:	e00b      	b.n	8000f42 <HAL_DMA_Abort_IT+0xa2>
 8000f2a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000f2e:	e008      	b.n	8000f42 <HAL_DMA_Abort_IT+0xa2>
 8000f30:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f34:	e005      	b.n	8000f42 <HAL_DMA_Abort_IT+0xa2>
 8000f36:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000f3a:	e002      	b.n	8000f42 <HAL_DMA_Abort_IT+0xa2>
 8000f3c:	2310      	movs	r3, #16
 8000f3e:	e000      	b.n	8000f42 <HAL_DMA_Abort_IT+0xa2>
 8000f40:	2301      	movs	r3, #1
 8000f42:	4a11      	ldr	r2, [pc, #68]	@ (8000f88 <HAL_DMA_Abort_IT+0xe8>)
 8000f44:	6053      	str	r3, [r2, #4]
 8000f46:	687b      	ldr	r3, [r7, #4]
 8000f48:	2201      	movs	r2, #1
 8000f4a:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8000f4e:	687b      	ldr	r3, [r7, #4]
 8000f50:	2200      	movs	r2, #0
 8000f52:	f883 2020 	strb.w	r2, [r3, #32]
 8000f56:	687b      	ldr	r3, [r7, #4]
 8000f58:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d003      	beq.n	8000f66 <HAL_DMA_Abort_IT+0xc6>
 8000f5e:	687b      	ldr	r3, [r7, #4]
 8000f60:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000f62:	6878      	ldr	r0, [r7, #4]
 8000f64:	4798      	blx	r3
 8000f66:	7bfb      	ldrb	r3, [r7, #15]
 8000f68:	4618      	mov	r0, r3
 8000f6a:	3710      	adds	r7, #16
 8000f6c:	46bd      	mov	sp, r7
 8000f6e:	bd80      	pop	{r7, pc}
 8000f70:	40020008 	.word	0x40020008
 8000f74:	4002001c 	.word	0x4002001c
 8000f78:	40020030 	.word	0x40020030
 8000f7c:	40020044 	.word	0x40020044
 8000f80:	40020058 	.word	0x40020058
 8000f84:	4002006c 	.word	0x4002006c
 8000f88:	40020000 	.word	0x40020000

08000f8c <HAL_GPIO_Init>:
 8000f8c:	b480      	push	{r7}
 8000f8e:	b08b      	sub	sp, #44	@ 0x2c
 8000f90:	af00      	add	r7, sp, #0
 8000f92:	6078      	str	r0, [r7, #4]
 8000f94:	6039      	str	r1, [r7, #0]
 8000f96:	2300      	movs	r3, #0
 8000f98:	627b      	str	r3, [r7, #36]	@ 0x24
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	623b      	str	r3, [r7, #32]
 8000f9e:	e169      	b.n	8001274 <HAL_GPIO_Init+0x2e8>
 8000fa0:	2201      	movs	r2, #1
 8000fa2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000fa4:	fa02 f303 	lsl.w	r3, r2, r3
 8000fa8:	61fb      	str	r3, [r7, #28]
 8000faa:	683b      	ldr	r3, [r7, #0]
 8000fac:	681b      	ldr	r3, [r3, #0]
 8000fae:	69fa      	ldr	r2, [r7, #28]
 8000fb0:	4013      	ands	r3, r2
 8000fb2:	61bb      	str	r3, [r7, #24]
 8000fb4:	69ba      	ldr	r2, [r7, #24]
 8000fb6:	69fb      	ldr	r3, [r7, #28]
 8000fb8:	429a      	cmp	r2, r3
 8000fba:	f040 8158 	bne.w	800126e <HAL_GPIO_Init+0x2e2>
 8000fbe:	683b      	ldr	r3, [r7, #0]
 8000fc0:	685b      	ldr	r3, [r3, #4]
 8000fc2:	4a9a      	ldr	r2, [pc, #616]	@ (800122c <HAL_GPIO_Init+0x2a0>)
 8000fc4:	4293      	cmp	r3, r2
 8000fc6:	d05e      	beq.n	8001086 <HAL_GPIO_Init+0xfa>
 8000fc8:	4a98      	ldr	r2, [pc, #608]	@ (800122c <HAL_GPIO_Init+0x2a0>)
 8000fca:	4293      	cmp	r3, r2
 8000fcc:	d875      	bhi.n	80010ba <HAL_GPIO_Init+0x12e>
 8000fce:	4a98      	ldr	r2, [pc, #608]	@ (8001230 <HAL_GPIO_Init+0x2a4>)
 8000fd0:	4293      	cmp	r3, r2
 8000fd2:	d058      	beq.n	8001086 <HAL_GPIO_Init+0xfa>
 8000fd4:	4a96      	ldr	r2, [pc, #600]	@ (8001230 <HAL_GPIO_Init+0x2a4>)
 8000fd6:	4293      	cmp	r3, r2
 8000fd8:	d86f      	bhi.n	80010ba <HAL_GPIO_Init+0x12e>
 8000fda:	4a96      	ldr	r2, [pc, #600]	@ (8001234 <HAL_GPIO_Init+0x2a8>)
 8000fdc:	4293      	cmp	r3, r2
 8000fde:	d052      	beq.n	8001086 <HAL_GPIO_Init+0xfa>
 8000fe0:	4a94      	ldr	r2, [pc, #592]	@ (8001234 <HAL_GPIO_Init+0x2a8>)
 8000fe2:	4293      	cmp	r3, r2
 8000fe4:	d869      	bhi.n	80010ba <HAL_GPIO_Init+0x12e>
 8000fe6:	4a94      	ldr	r2, [pc, #592]	@ (8001238 <HAL_GPIO_Init+0x2ac>)
 8000fe8:	4293      	cmp	r3, r2
 8000fea:	d04c      	beq.n	8001086 <HAL_GPIO_Init+0xfa>
 8000fec:	4a92      	ldr	r2, [pc, #584]	@ (8001238 <HAL_GPIO_Init+0x2ac>)
 8000fee:	4293      	cmp	r3, r2
 8000ff0:	d863      	bhi.n	80010ba <HAL_GPIO_Init+0x12e>
 8000ff2:	4a92      	ldr	r2, [pc, #584]	@ (800123c <HAL_GPIO_Init+0x2b0>)
 8000ff4:	4293      	cmp	r3, r2
 8000ff6:	d046      	beq.n	8001086 <HAL_GPIO_Init+0xfa>
 8000ff8:	4a90      	ldr	r2, [pc, #576]	@ (800123c <HAL_GPIO_Init+0x2b0>)
 8000ffa:	4293      	cmp	r3, r2
 8000ffc:	d85d      	bhi.n	80010ba <HAL_GPIO_Init+0x12e>
 8000ffe:	2b12      	cmp	r3, #18
 8001000:	d82a      	bhi.n	8001058 <HAL_GPIO_Init+0xcc>
 8001002:	2b12      	cmp	r3, #18
 8001004:	d859      	bhi.n	80010ba <HAL_GPIO_Init+0x12e>
 8001006:	a201      	add	r2, pc, #4	@ (adr r2, 800100c <HAL_GPIO_Init+0x80>)
 8001008:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800100c:	08001087 	.word	0x08001087
 8001010:	08001061 	.word	0x08001061
 8001014:	08001073 	.word	0x08001073
 8001018:	080010b5 	.word	0x080010b5
 800101c:	080010bb 	.word	0x080010bb
 8001020:	080010bb 	.word	0x080010bb
 8001024:	080010bb 	.word	0x080010bb
 8001028:	080010bb 	.word	0x080010bb
 800102c:	080010bb 	.word	0x080010bb
 8001030:	080010bb 	.word	0x080010bb
 8001034:	080010bb 	.word	0x080010bb
 8001038:	080010bb 	.word	0x080010bb
 800103c:	080010bb 	.word	0x080010bb
 8001040:	080010bb 	.word	0x080010bb
 8001044:	080010bb 	.word	0x080010bb
 8001048:	080010bb 	.word	0x080010bb
 800104c:	080010bb 	.word	0x080010bb
 8001050:	08001069 	.word	0x08001069
 8001054:	0800107d 	.word	0x0800107d
 8001058:	4a79      	ldr	r2, [pc, #484]	@ (8001240 <HAL_GPIO_Init+0x2b4>)
 800105a:	4293      	cmp	r3, r2
 800105c:	d013      	beq.n	8001086 <HAL_GPIO_Init+0xfa>
 800105e:	e02c      	b.n	80010ba <HAL_GPIO_Init+0x12e>
 8001060:	683b      	ldr	r3, [r7, #0]
 8001062:	68db      	ldr	r3, [r3, #12]
 8001064:	623b      	str	r3, [r7, #32]
 8001066:	e029      	b.n	80010bc <HAL_GPIO_Init+0x130>
 8001068:	683b      	ldr	r3, [r7, #0]
 800106a:	68db      	ldr	r3, [r3, #12]
 800106c:	3304      	adds	r3, #4
 800106e:	623b      	str	r3, [r7, #32]
 8001070:	e024      	b.n	80010bc <HAL_GPIO_Init+0x130>
 8001072:	683b      	ldr	r3, [r7, #0]
 8001074:	68db      	ldr	r3, [r3, #12]
 8001076:	3308      	adds	r3, #8
 8001078:	623b      	str	r3, [r7, #32]
 800107a:	e01f      	b.n	80010bc <HAL_GPIO_Init+0x130>
 800107c:	683b      	ldr	r3, [r7, #0]
 800107e:	68db      	ldr	r3, [r3, #12]
 8001080:	330c      	adds	r3, #12
 8001082:	623b      	str	r3, [r7, #32]
 8001084:	e01a      	b.n	80010bc <HAL_GPIO_Init+0x130>
 8001086:	683b      	ldr	r3, [r7, #0]
 8001088:	689b      	ldr	r3, [r3, #8]
 800108a:	2b00      	cmp	r3, #0
 800108c:	d102      	bne.n	8001094 <HAL_GPIO_Init+0x108>
 800108e:	2304      	movs	r3, #4
 8001090:	623b      	str	r3, [r7, #32]
 8001092:	e013      	b.n	80010bc <HAL_GPIO_Init+0x130>
 8001094:	683b      	ldr	r3, [r7, #0]
 8001096:	689b      	ldr	r3, [r3, #8]
 8001098:	2b01      	cmp	r3, #1
 800109a:	d105      	bne.n	80010a8 <HAL_GPIO_Init+0x11c>
 800109c:	2308      	movs	r3, #8
 800109e:	623b      	str	r3, [r7, #32]
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	69fa      	ldr	r2, [r7, #28]
 80010a4:	611a      	str	r2, [r3, #16]
 80010a6:	e009      	b.n	80010bc <HAL_GPIO_Init+0x130>
 80010a8:	2308      	movs	r3, #8
 80010aa:	623b      	str	r3, [r7, #32]
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	69fa      	ldr	r2, [r7, #28]
 80010b0:	615a      	str	r2, [r3, #20]
 80010b2:	e003      	b.n	80010bc <HAL_GPIO_Init+0x130>
 80010b4:	2300      	movs	r3, #0
 80010b6:	623b      	str	r3, [r7, #32]
 80010b8:	e000      	b.n	80010bc <HAL_GPIO_Init+0x130>
 80010ba:	bf00      	nop
 80010bc:	69bb      	ldr	r3, [r7, #24]
 80010be:	2bff      	cmp	r3, #255	@ 0xff
 80010c0:	d801      	bhi.n	80010c6 <HAL_GPIO_Init+0x13a>
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	e001      	b.n	80010ca <HAL_GPIO_Init+0x13e>
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	3304      	adds	r3, #4
 80010ca:	617b      	str	r3, [r7, #20]
 80010cc:	69bb      	ldr	r3, [r7, #24]
 80010ce:	2bff      	cmp	r3, #255	@ 0xff
 80010d0:	d802      	bhi.n	80010d8 <HAL_GPIO_Init+0x14c>
 80010d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80010d4:	009b      	lsls	r3, r3, #2
 80010d6:	e002      	b.n	80010de <HAL_GPIO_Init+0x152>
 80010d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80010da:	3b08      	subs	r3, #8
 80010dc:	009b      	lsls	r3, r3, #2
 80010de:	613b      	str	r3, [r7, #16]
 80010e0:	697b      	ldr	r3, [r7, #20]
 80010e2:	681a      	ldr	r2, [r3, #0]
 80010e4:	210f      	movs	r1, #15
 80010e6:	693b      	ldr	r3, [r7, #16]
 80010e8:	fa01 f303 	lsl.w	r3, r1, r3
 80010ec:	43db      	mvns	r3, r3
 80010ee:	401a      	ands	r2, r3
 80010f0:	6a39      	ldr	r1, [r7, #32]
 80010f2:	693b      	ldr	r3, [r7, #16]
 80010f4:	fa01 f303 	lsl.w	r3, r1, r3
 80010f8:	431a      	orrs	r2, r3
 80010fa:	697b      	ldr	r3, [r7, #20]
 80010fc:	601a      	str	r2, [r3, #0]
 80010fe:	683b      	ldr	r3, [r7, #0]
 8001100:	685b      	ldr	r3, [r3, #4]
 8001102:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001106:	2b00      	cmp	r3, #0
 8001108:	f000 80b1 	beq.w	800126e <HAL_GPIO_Init+0x2e2>
 800110c:	4b4d      	ldr	r3, [pc, #308]	@ (8001244 <HAL_GPIO_Init+0x2b8>)
 800110e:	699b      	ldr	r3, [r3, #24]
 8001110:	4a4c      	ldr	r2, [pc, #304]	@ (8001244 <HAL_GPIO_Init+0x2b8>)
 8001112:	f043 0301 	orr.w	r3, r3, #1
 8001116:	6193      	str	r3, [r2, #24]
 8001118:	4b4a      	ldr	r3, [pc, #296]	@ (8001244 <HAL_GPIO_Init+0x2b8>)
 800111a:	699b      	ldr	r3, [r3, #24]
 800111c:	f003 0301 	and.w	r3, r3, #1
 8001120:	60bb      	str	r3, [r7, #8]
 8001122:	68bb      	ldr	r3, [r7, #8]
 8001124:	4a48      	ldr	r2, [pc, #288]	@ (8001248 <HAL_GPIO_Init+0x2bc>)
 8001126:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001128:	089b      	lsrs	r3, r3, #2
 800112a:	3302      	adds	r3, #2
 800112c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001130:	60fb      	str	r3, [r7, #12]
 8001132:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001134:	f003 0303 	and.w	r3, r3, #3
 8001138:	009b      	lsls	r3, r3, #2
 800113a:	220f      	movs	r2, #15
 800113c:	fa02 f303 	lsl.w	r3, r2, r3
 8001140:	43db      	mvns	r3, r3
 8001142:	68fa      	ldr	r2, [r7, #12]
 8001144:	4013      	ands	r3, r2
 8001146:	60fb      	str	r3, [r7, #12]
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	4a40      	ldr	r2, [pc, #256]	@ (800124c <HAL_GPIO_Init+0x2c0>)
 800114c:	4293      	cmp	r3, r2
 800114e:	d013      	beq.n	8001178 <HAL_GPIO_Init+0x1ec>
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	4a3f      	ldr	r2, [pc, #252]	@ (8001250 <HAL_GPIO_Init+0x2c4>)
 8001154:	4293      	cmp	r3, r2
 8001156:	d00d      	beq.n	8001174 <HAL_GPIO_Init+0x1e8>
 8001158:	687b      	ldr	r3, [r7, #4]
 800115a:	4a3e      	ldr	r2, [pc, #248]	@ (8001254 <HAL_GPIO_Init+0x2c8>)
 800115c:	4293      	cmp	r3, r2
 800115e:	d007      	beq.n	8001170 <HAL_GPIO_Init+0x1e4>
 8001160:	687b      	ldr	r3, [r7, #4]
 8001162:	4a3d      	ldr	r2, [pc, #244]	@ (8001258 <HAL_GPIO_Init+0x2cc>)
 8001164:	4293      	cmp	r3, r2
 8001166:	d101      	bne.n	800116c <HAL_GPIO_Init+0x1e0>
 8001168:	2303      	movs	r3, #3
 800116a:	e006      	b.n	800117a <HAL_GPIO_Init+0x1ee>
 800116c:	2304      	movs	r3, #4
 800116e:	e004      	b.n	800117a <HAL_GPIO_Init+0x1ee>
 8001170:	2302      	movs	r3, #2
 8001172:	e002      	b.n	800117a <HAL_GPIO_Init+0x1ee>
 8001174:	2301      	movs	r3, #1
 8001176:	e000      	b.n	800117a <HAL_GPIO_Init+0x1ee>
 8001178:	2300      	movs	r3, #0
 800117a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800117c:	f002 0203 	and.w	r2, r2, #3
 8001180:	0092      	lsls	r2, r2, #2
 8001182:	4093      	lsls	r3, r2
 8001184:	68fa      	ldr	r2, [r7, #12]
 8001186:	4313      	orrs	r3, r2
 8001188:	60fb      	str	r3, [r7, #12]
 800118a:	492f      	ldr	r1, [pc, #188]	@ (8001248 <HAL_GPIO_Init+0x2bc>)
 800118c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800118e:	089b      	lsrs	r3, r3, #2
 8001190:	3302      	adds	r3, #2
 8001192:	68fa      	ldr	r2, [r7, #12]
 8001194:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001198:	683b      	ldr	r3, [r7, #0]
 800119a:	685b      	ldr	r3, [r3, #4]
 800119c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d006      	beq.n	80011b2 <HAL_GPIO_Init+0x226>
 80011a4:	4b2d      	ldr	r3, [pc, #180]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011a6:	681a      	ldr	r2, [r3, #0]
 80011a8:	492c      	ldr	r1, [pc, #176]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011aa:	69bb      	ldr	r3, [r7, #24]
 80011ac:	4313      	orrs	r3, r2
 80011ae:	600b      	str	r3, [r1, #0]
 80011b0:	e006      	b.n	80011c0 <HAL_GPIO_Init+0x234>
 80011b2:	4b2a      	ldr	r3, [pc, #168]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011b4:	681a      	ldr	r2, [r3, #0]
 80011b6:	69bb      	ldr	r3, [r7, #24]
 80011b8:	43db      	mvns	r3, r3
 80011ba:	4928      	ldr	r1, [pc, #160]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011bc:	4013      	ands	r3, r2
 80011be:	600b      	str	r3, [r1, #0]
 80011c0:	683b      	ldr	r3, [r7, #0]
 80011c2:	685b      	ldr	r3, [r3, #4]
 80011c4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d006      	beq.n	80011da <HAL_GPIO_Init+0x24e>
 80011cc:	4b23      	ldr	r3, [pc, #140]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011ce:	685a      	ldr	r2, [r3, #4]
 80011d0:	4922      	ldr	r1, [pc, #136]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011d2:	69bb      	ldr	r3, [r7, #24]
 80011d4:	4313      	orrs	r3, r2
 80011d6:	604b      	str	r3, [r1, #4]
 80011d8:	e006      	b.n	80011e8 <HAL_GPIO_Init+0x25c>
 80011da:	4b20      	ldr	r3, [pc, #128]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011dc:	685a      	ldr	r2, [r3, #4]
 80011de:	69bb      	ldr	r3, [r7, #24]
 80011e0:	43db      	mvns	r3, r3
 80011e2:	491e      	ldr	r1, [pc, #120]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011e4:	4013      	ands	r3, r2
 80011e6:	604b      	str	r3, [r1, #4]
 80011e8:	683b      	ldr	r3, [r7, #0]
 80011ea:	685b      	ldr	r3, [r3, #4]
 80011ec:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	d006      	beq.n	8001202 <HAL_GPIO_Init+0x276>
 80011f4:	4b19      	ldr	r3, [pc, #100]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011f6:	689a      	ldr	r2, [r3, #8]
 80011f8:	4918      	ldr	r1, [pc, #96]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 80011fa:	69bb      	ldr	r3, [r7, #24]
 80011fc:	4313      	orrs	r3, r2
 80011fe:	608b      	str	r3, [r1, #8]
 8001200:	e006      	b.n	8001210 <HAL_GPIO_Init+0x284>
 8001202:	4b16      	ldr	r3, [pc, #88]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 8001204:	689a      	ldr	r2, [r3, #8]
 8001206:	69bb      	ldr	r3, [r7, #24]
 8001208:	43db      	mvns	r3, r3
 800120a:	4914      	ldr	r1, [pc, #80]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 800120c:	4013      	ands	r3, r2
 800120e:	608b      	str	r3, [r1, #8]
 8001210:	683b      	ldr	r3, [r7, #0]
 8001212:	685b      	ldr	r3, [r3, #4]
 8001214:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001218:	2b00      	cmp	r3, #0
 800121a:	d021      	beq.n	8001260 <HAL_GPIO_Init+0x2d4>
 800121c:	4b0f      	ldr	r3, [pc, #60]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 800121e:	68da      	ldr	r2, [r3, #12]
 8001220:	490e      	ldr	r1, [pc, #56]	@ (800125c <HAL_GPIO_Init+0x2d0>)
 8001222:	69bb      	ldr	r3, [r7, #24]
 8001224:	4313      	orrs	r3, r2
 8001226:	60cb      	str	r3, [r1, #12]
 8001228:	e021      	b.n	800126e <HAL_GPIO_Init+0x2e2>
 800122a:	bf00      	nop
 800122c:	10320000 	.word	0x10320000
 8001230:	10310000 	.word	0x10310000
 8001234:	10220000 	.word	0x10220000
 8001238:	10210000 	.word	0x10210000
 800123c:	10120000 	.word	0x10120000
 8001240:	10110000 	.word	0x10110000
 8001244:	40021000 	.word	0x40021000
 8001248:	40010000 	.word	0x40010000
 800124c:	40010800 	.word	0x40010800
 8001250:	40010c00 	.word	0x40010c00
 8001254:	40011000 	.word	0x40011000
 8001258:	40011400 	.word	0x40011400
 800125c:	40010400 	.word	0x40010400
 8001260:	4b0b      	ldr	r3, [pc, #44]	@ (8001290 <HAL_GPIO_Init+0x304>)
 8001262:	68da      	ldr	r2, [r3, #12]
 8001264:	69bb      	ldr	r3, [r7, #24]
 8001266:	43db      	mvns	r3, r3
 8001268:	4909      	ldr	r1, [pc, #36]	@ (8001290 <HAL_GPIO_Init+0x304>)
 800126a:	4013      	ands	r3, r2
 800126c:	60cb      	str	r3, [r1, #12]
 800126e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001270:	3301      	adds	r3, #1
 8001272:	627b      	str	r3, [r7, #36]	@ 0x24
 8001274:	683b      	ldr	r3, [r7, #0]
 8001276:	681a      	ldr	r2, [r3, #0]
 8001278:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800127a:	fa22 f303 	lsr.w	r3, r2, r3
 800127e:	2b00      	cmp	r3, #0
 8001280:	f47f ae8e 	bne.w	8000fa0 <HAL_GPIO_Init+0x14>
 8001284:	bf00      	nop
 8001286:	bf00      	nop
 8001288:	372c      	adds	r7, #44	@ 0x2c
 800128a:	46bd      	mov	sp, r7
 800128c:	bc80      	pop	{r7}
 800128e:	4770      	bx	lr
 8001290:	40010400 	.word	0x40010400

08001294 <HAL_GPIO_WritePin>:
 8001294:	b480      	push	{r7}
 8001296:	b083      	sub	sp, #12
 8001298:	af00      	add	r7, sp, #0
 800129a:	6078      	str	r0, [r7, #4]
 800129c:	460b      	mov	r3, r1
 800129e:	807b      	strh	r3, [r7, #2]
 80012a0:	4613      	mov	r3, r2
 80012a2:	707b      	strb	r3, [r7, #1]
 80012a4:	787b      	ldrb	r3, [r7, #1]
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	d003      	beq.n	80012b2 <HAL_GPIO_WritePin+0x1e>
 80012aa:	887a      	ldrh	r2, [r7, #2]
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	611a      	str	r2, [r3, #16]
 80012b0:	e003      	b.n	80012ba <HAL_GPIO_WritePin+0x26>
 80012b2:	887b      	ldrh	r3, [r7, #2]
 80012b4:	041a      	lsls	r2, r3, #16
 80012b6:	687b      	ldr	r3, [r7, #4]
 80012b8:	611a      	str	r2, [r3, #16]
 80012ba:	bf00      	nop
 80012bc:	370c      	adds	r7, #12
 80012be:	46bd      	mov	sp, r7
 80012c0:	bc80      	pop	{r7}
 80012c2:	4770      	bx	lr

080012c4 <HAL_RCC_OscConfig>:
 80012c4:	b580      	push	{r7, lr}
 80012c6:	b086      	sub	sp, #24
 80012c8:	af00      	add	r7, sp, #0
 80012ca:	6078      	str	r0, [r7, #4]
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d101      	bne.n	80012d6 <HAL_RCC_OscConfig+0x12>
 80012d2:	2301      	movs	r3, #1
 80012d4:	e272      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80012d6:	687b      	ldr	r3, [r7, #4]
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	f003 0301 	and.w	r3, r3, #1
 80012de:	2b00      	cmp	r3, #0
 80012e0:	f000 8087 	beq.w	80013f2 <HAL_RCC_OscConfig+0x12e>
 80012e4:	4b92      	ldr	r3, [pc, #584]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 80012e6:	685b      	ldr	r3, [r3, #4]
 80012e8:	f003 030c 	and.w	r3, r3, #12
 80012ec:	2b04      	cmp	r3, #4
 80012ee:	d00c      	beq.n	800130a <HAL_RCC_OscConfig+0x46>
 80012f0:	4b8f      	ldr	r3, [pc, #572]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 80012f2:	685b      	ldr	r3, [r3, #4]
 80012f4:	f003 030c 	and.w	r3, r3, #12
 80012f8:	2b08      	cmp	r3, #8
 80012fa:	d112      	bne.n	8001322 <HAL_RCC_OscConfig+0x5e>
 80012fc:	4b8c      	ldr	r3, [pc, #560]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 80012fe:	685b      	ldr	r3, [r3, #4]
 8001300:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001304:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001308:	d10b      	bne.n	8001322 <HAL_RCC_OscConfig+0x5e>
 800130a:	4b89      	ldr	r3, [pc, #548]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800130c:	681b      	ldr	r3, [r3, #0]
 800130e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001312:	2b00      	cmp	r3, #0
 8001314:	d06c      	beq.n	80013f0 <HAL_RCC_OscConfig+0x12c>
 8001316:	687b      	ldr	r3, [r7, #4]
 8001318:	685b      	ldr	r3, [r3, #4]
 800131a:	2b00      	cmp	r3, #0
 800131c:	d168      	bne.n	80013f0 <HAL_RCC_OscConfig+0x12c>
 800131e:	2301      	movs	r3, #1
 8001320:	e24c      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	685b      	ldr	r3, [r3, #4]
 8001326:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800132a:	d106      	bne.n	800133a <HAL_RCC_OscConfig+0x76>
 800132c:	4b80      	ldr	r3, [pc, #512]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800132e:	681b      	ldr	r3, [r3, #0]
 8001330:	4a7f      	ldr	r2, [pc, #508]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001332:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001336:	6013      	str	r3, [r2, #0]
 8001338:	e02e      	b.n	8001398 <HAL_RCC_OscConfig+0xd4>
 800133a:	687b      	ldr	r3, [r7, #4]
 800133c:	685b      	ldr	r3, [r3, #4]
 800133e:	2b00      	cmp	r3, #0
 8001340:	d10c      	bne.n	800135c <HAL_RCC_OscConfig+0x98>
 8001342:	4b7b      	ldr	r3, [pc, #492]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	4a7a      	ldr	r2, [pc, #488]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001348:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800134c:	6013      	str	r3, [r2, #0]
 800134e:	4b78      	ldr	r3, [pc, #480]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001350:	681b      	ldr	r3, [r3, #0]
 8001352:	4a77      	ldr	r2, [pc, #476]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001354:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001358:	6013      	str	r3, [r2, #0]
 800135a:	e01d      	b.n	8001398 <HAL_RCC_OscConfig+0xd4>
 800135c:	687b      	ldr	r3, [r7, #4]
 800135e:	685b      	ldr	r3, [r3, #4]
 8001360:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001364:	d10c      	bne.n	8001380 <HAL_RCC_OscConfig+0xbc>
 8001366:	4b72      	ldr	r3, [pc, #456]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	4a71      	ldr	r2, [pc, #452]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800136c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001370:	6013      	str	r3, [r2, #0]
 8001372:	4b6f      	ldr	r3, [pc, #444]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001374:	681b      	ldr	r3, [r3, #0]
 8001376:	4a6e      	ldr	r2, [pc, #440]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001378:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800137c:	6013      	str	r3, [r2, #0]
 800137e:	e00b      	b.n	8001398 <HAL_RCC_OscConfig+0xd4>
 8001380:	4b6b      	ldr	r3, [pc, #428]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001382:	681b      	ldr	r3, [r3, #0]
 8001384:	4a6a      	ldr	r2, [pc, #424]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001386:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800138a:	6013      	str	r3, [r2, #0]
 800138c:	4b68      	ldr	r3, [pc, #416]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800138e:	681b      	ldr	r3, [r3, #0]
 8001390:	4a67      	ldr	r2, [pc, #412]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001392:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001396:	6013      	str	r3, [r2, #0]
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	685b      	ldr	r3, [r3, #4]
 800139c:	2b00      	cmp	r3, #0
 800139e:	d013      	beq.n	80013c8 <HAL_RCC_OscConfig+0x104>
 80013a0:	f7ff fc66 	bl	8000c70 <HAL_GetTick>
 80013a4:	6138      	str	r0, [r7, #16]
 80013a6:	e008      	b.n	80013ba <HAL_RCC_OscConfig+0xf6>
 80013a8:	f7ff fc62 	bl	8000c70 <HAL_GetTick>
 80013ac:	4602      	mov	r2, r0
 80013ae:	693b      	ldr	r3, [r7, #16]
 80013b0:	1ad3      	subs	r3, r2, r3
 80013b2:	2b64      	cmp	r3, #100	@ 0x64
 80013b4:	d901      	bls.n	80013ba <HAL_RCC_OscConfig+0xf6>
 80013b6:	2303      	movs	r3, #3
 80013b8:	e200      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80013ba:	4b5d      	ldr	r3, [pc, #372]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 80013bc:	681b      	ldr	r3, [r3, #0]
 80013be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80013c2:	2b00      	cmp	r3, #0
 80013c4:	d0f0      	beq.n	80013a8 <HAL_RCC_OscConfig+0xe4>
 80013c6:	e014      	b.n	80013f2 <HAL_RCC_OscConfig+0x12e>
 80013c8:	f7ff fc52 	bl	8000c70 <HAL_GetTick>
 80013cc:	6138      	str	r0, [r7, #16]
 80013ce:	e008      	b.n	80013e2 <HAL_RCC_OscConfig+0x11e>
 80013d0:	f7ff fc4e 	bl	8000c70 <HAL_GetTick>
 80013d4:	4602      	mov	r2, r0
 80013d6:	693b      	ldr	r3, [r7, #16]
 80013d8:	1ad3      	subs	r3, r2, r3
 80013da:	2b64      	cmp	r3, #100	@ 0x64
 80013dc:	d901      	bls.n	80013e2 <HAL_RCC_OscConfig+0x11e>
 80013de:	2303      	movs	r3, #3
 80013e0:	e1ec      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80013e2:	4b53      	ldr	r3, [pc, #332]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d1f0      	bne.n	80013d0 <HAL_RCC_OscConfig+0x10c>
 80013ee:	e000      	b.n	80013f2 <HAL_RCC_OscConfig+0x12e>
 80013f0:	bf00      	nop
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	f003 0302 	and.w	r3, r3, #2
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d063      	beq.n	80014c6 <HAL_RCC_OscConfig+0x202>
 80013fe:	4b4c      	ldr	r3, [pc, #304]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001400:	685b      	ldr	r3, [r3, #4]
 8001402:	f003 030c 	and.w	r3, r3, #12
 8001406:	2b00      	cmp	r3, #0
 8001408:	d00b      	beq.n	8001422 <HAL_RCC_OscConfig+0x15e>
 800140a:	4b49      	ldr	r3, [pc, #292]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800140c:	685b      	ldr	r3, [r3, #4]
 800140e:	f003 030c 	and.w	r3, r3, #12
 8001412:	2b08      	cmp	r3, #8
 8001414:	d11c      	bne.n	8001450 <HAL_RCC_OscConfig+0x18c>
 8001416:	4b46      	ldr	r3, [pc, #280]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001418:	685b      	ldr	r3, [r3, #4]
 800141a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800141e:	2b00      	cmp	r3, #0
 8001420:	d116      	bne.n	8001450 <HAL_RCC_OscConfig+0x18c>
 8001422:	4b43      	ldr	r3, [pc, #268]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001424:	681b      	ldr	r3, [r3, #0]
 8001426:	f003 0302 	and.w	r3, r3, #2
 800142a:	2b00      	cmp	r3, #0
 800142c:	d005      	beq.n	800143a <HAL_RCC_OscConfig+0x176>
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	691b      	ldr	r3, [r3, #16]
 8001432:	2b01      	cmp	r3, #1
 8001434:	d001      	beq.n	800143a <HAL_RCC_OscConfig+0x176>
 8001436:	2301      	movs	r3, #1
 8001438:	e1c0      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 800143a:	4b3d      	ldr	r3, [pc, #244]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800143c:	681b      	ldr	r3, [r3, #0]
 800143e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	695b      	ldr	r3, [r3, #20]
 8001446:	00db      	lsls	r3, r3, #3
 8001448:	4939      	ldr	r1, [pc, #228]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800144a:	4313      	orrs	r3, r2
 800144c:	600b      	str	r3, [r1, #0]
 800144e:	e03a      	b.n	80014c6 <HAL_RCC_OscConfig+0x202>
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	691b      	ldr	r3, [r3, #16]
 8001454:	2b00      	cmp	r3, #0
 8001456:	d020      	beq.n	800149a <HAL_RCC_OscConfig+0x1d6>
 8001458:	4b36      	ldr	r3, [pc, #216]	@ (8001534 <HAL_RCC_OscConfig+0x270>)
 800145a:	2201      	movs	r2, #1
 800145c:	601a      	str	r2, [r3, #0]
 800145e:	f7ff fc07 	bl	8000c70 <HAL_GetTick>
 8001462:	6138      	str	r0, [r7, #16]
 8001464:	e008      	b.n	8001478 <HAL_RCC_OscConfig+0x1b4>
 8001466:	f7ff fc03 	bl	8000c70 <HAL_GetTick>
 800146a:	4602      	mov	r2, r0
 800146c:	693b      	ldr	r3, [r7, #16]
 800146e:	1ad3      	subs	r3, r2, r3
 8001470:	2b02      	cmp	r3, #2
 8001472:	d901      	bls.n	8001478 <HAL_RCC_OscConfig+0x1b4>
 8001474:	2303      	movs	r3, #3
 8001476:	e1a1      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 8001478:	4b2d      	ldr	r3, [pc, #180]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	f003 0302 	and.w	r3, r3, #2
 8001480:	2b00      	cmp	r3, #0
 8001482:	d0f0      	beq.n	8001466 <HAL_RCC_OscConfig+0x1a2>
 8001484:	4b2a      	ldr	r3, [pc, #168]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	695b      	ldr	r3, [r3, #20]
 8001490:	00db      	lsls	r3, r3, #3
 8001492:	4927      	ldr	r1, [pc, #156]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 8001494:	4313      	orrs	r3, r2
 8001496:	600b      	str	r3, [r1, #0]
 8001498:	e015      	b.n	80014c6 <HAL_RCC_OscConfig+0x202>
 800149a:	4b26      	ldr	r3, [pc, #152]	@ (8001534 <HAL_RCC_OscConfig+0x270>)
 800149c:	2200      	movs	r2, #0
 800149e:	601a      	str	r2, [r3, #0]
 80014a0:	f7ff fbe6 	bl	8000c70 <HAL_GetTick>
 80014a4:	6138      	str	r0, [r7, #16]
 80014a6:	e008      	b.n	80014ba <HAL_RCC_OscConfig+0x1f6>
 80014a8:	f7ff fbe2 	bl	8000c70 <HAL_GetTick>
 80014ac:	4602      	mov	r2, r0
 80014ae:	693b      	ldr	r3, [r7, #16]
 80014b0:	1ad3      	subs	r3, r2, r3
 80014b2:	2b02      	cmp	r3, #2
 80014b4:	d901      	bls.n	80014ba <HAL_RCC_OscConfig+0x1f6>
 80014b6:	2303      	movs	r3, #3
 80014b8:	e180      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80014ba:	4b1d      	ldr	r3, [pc, #116]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	f003 0302 	and.w	r3, r3, #2
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d1f0      	bne.n	80014a8 <HAL_RCC_OscConfig+0x1e4>
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	681b      	ldr	r3, [r3, #0]
 80014ca:	f003 0308 	and.w	r3, r3, #8
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d03a      	beq.n	8001548 <HAL_RCC_OscConfig+0x284>
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	699b      	ldr	r3, [r3, #24]
 80014d6:	2b00      	cmp	r3, #0
 80014d8:	d019      	beq.n	800150e <HAL_RCC_OscConfig+0x24a>
 80014da:	4b17      	ldr	r3, [pc, #92]	@ (8001538 <HAL_RCC_OscConfig+0x274>)
 80014dc:	2201      	movs	r2, #1
 80014de:	601a      	str	r2, [r3, #0]
 80014e0:	f7ff fbc6 	bl	8000c70 <HAL_GetTick>
 80014e4:	6138      	str	r0, [r7, #16]
 80014e6:	e008      	b.n	80014fa <HAL_RCC_OscConfig+0x236>
 80014e8:	f7ff fbc2 	bl	8000c70 <HAL_GetTick>
 80014ec:	4602      	mov	r2, r0
 80014ee:	693b      	ldr	r3, [r7, #16]
 80014f0:	1ad3      	subs	r3, r2, r3
 80014f2:	2b02      	cmp	r3, #2
 80014f4:	d901      	bls.n	80014fa <HAL_RCC_OscConfig+0x236>
 80014f6:	2303      	movs	r3, #3
 80014f8:	e160      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80014fa:	4b0d      	ldr	r3, [pc, #52]	@ (8001530 <HAL_RCC_OscConfig+0x26c>)
 80014fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80014fe:	f003 0302 	and.w	r3, r3, #2
 8001502:	2b00      	cmp	r3, #0
 8001504:	d0f0      	beq.n	80014e8 <HAL_RCC_OscConfig+0x224>
 8001506:	2001      	movs	r0, #1
 8001508:	f000 fad8 	bl	8001abc <RCC_Delay>
 800150c:	e01c      	b.n	8001548 <HAL_RCC_OscConfig+0x284>
 800150e:	4b0a      	ldr	r3, [pc, #40]	@ (8001538 <HAL_RCC_OscConfig+0x274>)
 8001510:	2200      	movs	r2, #0
 8001512:	601a      	str	r2, [r3, #0]
 8001514:	f7ff fbac 	bl	8000c70 <HAL_GetTick>
 8001518:	6138      	str	r0, [r7, #16]
 800151a:	e00f      	b.n	800153c <HAL_RCC_OscConfig+0x278>
 800151c:	f7ff fba8 	bl	8000c70 <HAL_GetTick>
 8001520:	4602      	mov	r2, r0
 8001522:	693b      	ldr	r3, [r7, #16]
 8001524:	1ad3      	subs	r3, r2, r3
 8001526:	2b02      	cmp	r3, #2
 8001528:	d908      	bls.n	800153c <HAL_RCC_OscConfig+0x278>
 800152a:	2303      	movs	r3, #3
 800152c:	e146      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 800152e:	bf00      	nop
 8001530:	40021000 	.word	0x40021000
 8001534:	42420000 	.word	0x42420000
 8001538:	42420480 	.word	0x42420480
 800153c:	4b92      	ldr	r3, [pc, #584]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800153e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001540:	f003 0302 	and.w	r3, r3, #2
 8001544:	2b00      	cmp	r3, #0
 8001546:	d1e9      	bne.n	800151c <HAL_RCC_OscConfig+0x258>
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	f003 0304 	and.w	r3, r3, #4
 8001550:	2b00      	cmp	r3, #0
 8001552:	f000 80a6 	beq.w	80016a2 <HAL_RCC_OscConfig+0x3de>
 8001556:	2300      	movs	r3, #0
 8001558:	75fb      	strb	r3, [r7, #23]
 800155a:	4b8b      	ldr	r3, [pc, #556]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800155c:	69db      	ldr	r3, [r3, #28]
 800155e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001562:	2b00      	cmp	r3, #0
 8001564:	d10d      	bne.n	8001582 <HAL_RCC_OscConfig+0x2be>
 8001566:	4b88      	ldr	r3, [pc, #544]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001568:	69db      	ldr	r3, [r3, #28]
 800156a:	4a87      	ldr	r2, [pc, #540]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800156c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001570:	61d3      	str	r3, [r2, #28]
 8001572:	4b85      	ldr	r3, [pc, #532]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001574:	69db      	ldr	r3, [r3, #28]
 8001576:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800157a:	60bb      	str	r3, [r7, #8]
 800157c:	68bb      	ldr	r3, [r7, #8]
 800157e:	2301      	movs	r3, #1
 8001580:	75fb      	strb	r3, [r7, #23]
 8001582:	4b82      	ldr	r3, [pc, #520]	@ (800178c <HAL_RCC_OscConfig+0x4c8>)
 8001584:	681b      	ldr	r3, [r3, #0]
 8001586:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800158a:	2b00      	cmp	r3, #0
 800158c:	d118      	bne.n	80015c0 <HAL_RCC_OscConfig+0x2fc>
 800158e:	4b7f      	ldr	r3, [pc, #508]	@ (800178c <HAL_RCC_OscConfig+0x4c8>)
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	4a7e      	ldr	r2, [pc, #504]	@ (800178c <HAL_RCC_OscConfig+0x4c8>)
 8001594:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001598:	6013      	str	r3, [r2, #0]
 800159a:	f7ff fb69 	bl	8000c70 <HAL_GetTick>
 800159e:	6138      	str	r0, [r7, #16]
 80015a0:	e008      	b.n	80015b4 <HAL_RCC_OscConfig+0x2f0>
 80015a2:	f7ff fb65 	bl	8000c70 <HAL_GetTick>
 80015a6:	4602      	mov	r2, r0
 80015a8:	693b      	ldr	r3, [r7, #16]
 80015aa:	1ad3      	subs	r3, r2, r3
 80015ac:	2b64      	cmp	r3, #100	@ 0x64
 80015ae:	d901      	bls.n	80015b4 <HAL_RCC_OscConfig+0x2f0>
 80015b0:	2303      	movs	r3, #3
 80015b2:	e103      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80015b4:	4b75      	ldr	r3, [pc, #468]	@ (800178c <HAL_RCC_OscConfig+0x4c8>)
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80015bc:	2b00      	cmp	r3, #0
 80015be:	d0f0      	beq.n	80015a2 <HAL_RCC_OscConfig+0x2de>
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	68db      	ldr	r3, [r3, #12]
 80015c4:	2b01      	cmp	r3, #1
 80015c6:	d106      	bne.n	80015d6 <HAL_RCC_OscConfig+0x312>
 80015c8:	4b6f      	ldr	r3, [pc, #444]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80015ca:	6a1b      	ldr	r3, [r3, #32]
 80015cc:	4a6e      	ldr	r2, [pc, #440]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80015ce:	f043 0301 	orr.w	r3, r3, #1
 80015d2:	6213      	str	r3, [r2, #32]
 80015d4:	e02d      	b.n	8001632 <HAL_RCC_OscConfig+0x36e>
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	68db      	ldr	r3, [r3, #12]
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d10c      	bne.n	80015f8 <HAL_RCC_OscConfig+0x334>
 80015de:	4b6a      	ldr	r3, [pc, #424]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80015e0:	6a1b      	ldr	r3, [r3, #32]
 80015e2:	4a69      	ldr	r2, [pc, #420]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80015e4:	f023 0301 	bic.w	r3, r3, #1
 80015e8:	6213      	str	r3, [r2, #32]
 80015ea:	4b67      	ldr	r3, [pc, #412]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80015ec:	6a1b      	ldr	r3, [r3, #32]
 80015ee:	4a66      	ldr	r2, [pc, #408]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80015f0:	f023 0304 	bic.w	r3, r3, #4
 80015f4:	6213      	str	r3, [r2, #32]
 80015f6:	e01c      	b.n	8001632 <HAL_RCC_OscConfig+0x36e>
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	68db      	ldr	r3, [r3, #12]
 80015fc:	2b05      	cmp	r3, #5
 80015fe:	d10c      	bne.n	800161a <HAL_RCC_OscConfig+0x356>
 8001600:	4b61      	ldr	r3, [pc, #388]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001602:	6a1b      	ldr	r3, [r3, #32]
 8001604:	4a60      	ldr	r2, [pc, #384]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001606:	f043 0304 	orr.w	r3, r3, #4
 800160a:	6213      	str	r3, [r2, #32]
 800160c:	4b5e      	ldr	r3, [pc, #376]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800160e:	6a1b      	ldr	r3, [r3, #32]
 8001610:	4a5d      	ldr	r2, [pc, #372]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001612:	f043 0301 	orr.w	r3, r3, #1
 8001616:	6213      	str	r3, [r2, #32]
 8001618:	e00b      	b.n	8001632 <HAL_RCC_OscConfig+0x36e>
 800161a:	4b5b      	ldr	r3, [pc, #364]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800161c:	6a1b      	ldr	r3, [r3, #32]
 800161e:	4a5a      	ldr	r2, [pc, #360]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001620:	f023 0301 	bic.w	r3, r3, #1
 8001624:	6213      	str	r3, [r2, #32]
 8001626:	4b58      	ldr	r3, [pc, #352]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001628:	6a1b      	ldr	r3, [r3, #32]
 800162a:	4a57      	ldr	r2, [pc, #348]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800162c:	f023 0304 	bic.w	r3, r3, #4
 8001630:	6213      	str	r3, [r2, #32]
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	68db      	ldr	r3, [r3, #12]
 8001636:	2b00      	cmp	r3, #0
 8001638:	d015      	beq.n	8001666 <HAL_RCC_OscConfig+0x3a2>
 800163a:	f7ff fb19 	bl	8000c70 <HAL_GetTick>
 800163e:	6138      	str	r0, [r7, #16]
 8001640:	e00a      	b.n	8001658 <HAL_RCC_OscConfig+0x394>
 8001642:	f7ff fb15 	bl	8000c70 <HAL_GetTick>
 8001646:	4602      	mov	r2, r0
 8001648:	693b      	ldr	r3, [r7, #16]
 800164a:	1ad3      	subs	r3, r2, r3
 800164c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001650:	4293      	cmp	r3, r2
 8001652:	d901      	bls.n	8001658 <HAL_RCC_OscConfig+0x394>
 8001654:	2303      	movs	r3, #3
 8001656:	e0b1      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 8001658:	4b4b      	ldr	r3, [pc, #300]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800165a:	6a1b      	ldr	r3, [r3, #32]
 800165c:	f003 0302 	and.w	r3, r3, #2
 8001660:	2b00      	cmp	r3, #0
 8001662:	d0ee      	beq.n	8001642 <HAL_RCC_OscConfig+0x37e>
 8001664:	e014      	b.n	8001690 <HAL_RCC_OscConfig+0x3cc>
 8001666:	f7ff fb03 	bl	8000c70 <HAL_GetTick>
 800166a:	6138      	str	r0, [r7, #16]
 800166c:	e00a      	b.n	8001684 <HAL_RCC_OscConfig+0x3c0>
 800166e:	f7ff faff 	bl	8000c70 <HAL_GetTick>
 8001672:	4602      	mov	r2, r0
 8001674:	693b      	ldr	r3, [r7, #16]
 8001676:	1ad3      	subs	r3, r2, r3
 8001678:	f241 3288 	movw	r2, #5000	@ 0x1388
 800167c:	4293      	cmp	r3, r2
 800167e:	d901      	bls.n	8001684 <HAL_RCC_OscConfig+0x3c0>
 8001680:	2303      	movs	r3, #3
 8001682:	e09b      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 8001684:	4b40      	ldr	r3, [pc, #256]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001686:	6a1b      	ldr	r3, [r3, #32]
 8001688:	f003 0302 	and.w	r3, r3, #2
 800168c:	2b00      	cmp	r3, #0
 800168e:	d1ee      	bne.n	800166e <HAL_RCC_OscConfig+0x3aa>
 8001690:	7dfb      	ldrb	r3, [r7, #23]
 8001692:	2b01      	cmp	r3, #1
 8001694:	d105      	bne.n	80016a2 <HAL_RCC_OscConfig+0x3de>
 8001696:	4b3c      	ldr	r3, [pc, #240]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001698:	69db      	ldr	r3, [r3, #28]
 800169a:	4a3b      	ldr	r2, [pc, #236]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800169c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80016a0:	61d3      	str	r3, [r2, #28]
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	69db      	ldr	r3, [r3, #28]
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	f000 8087 	beq.w	80017ba <HAL_RCC_OscConfig+0x4f6>
 80016ac:	4b36      	ldr	r3, [pc, #216]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80016ae:	685b      	ldr	r3, [r3, #4]
 80016b0:	f003 030c 	and.w	r3, r3, #12
 80016b4:	2b08      	cmp	r3, #8
 80016b6:	d061      	beq.n	800177c <HAL_RCC_OscConfig+0x4b8>
 80016b8:	687b      	ldr	r3, [r7, #4]
 80016ba:	69db      	ldr	r3, [r3, #28]
 80016bc:	2b02      	cmp	r3, #2
 80016be:	d146      	bne.n	800174e <HAL_RCC_OscConfig+0x48a>
 80016c0:	4b33      	ldr	r3, [pc, #204]	@ (8001790 <HAL_RCC_OscConfig+0x4cc>)
 80016c2:	2200      	movs	r2, #0
 80016c4:	601a      	str	r2, [r3, #0]
 80016c6:	f7ff fad3 	bl	8000c70 <HAL_GetTick>
 80016ca:	6138      	str	r0, [r7, #16]
 80016cc:	e008      	b.n	80016e0 <HAL_RCC_OscConfig+0x41c>
 80016ce:	f7ff facf 	bl	8000c70 <HAL_GetTick>
 80016d2:	4602      	mov	r2, r0
 80016d4:	693b      	ldr	r3, [r7, #16]
 80016d6:	1ad3      	subs	r3, r2, r3
 80016d8:	2b02      	cmp	r3, #2
 80016da:	d901      	bls.n	80016e0 <HAL_RCC_OscConfig+0x41c>
 80016dc:	2303      	movs	r3, #3
 80016de:	e06d      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80016e0:	4b29      	ldr	r3, [pc, #164]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80016e8:	2b00      	cmp	r3, #0
 80016ea:	d1f0      	bne.n	80016ce <HAL_RCC_OscConfig+0x40a>
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	6a1b      	ldr	r3, [r3, #32]
 80016f0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80016f4:	d108      	bne.n	8001708 <HAL_RCC_OscConfig+0x444>
 80016f6:	4b24      	ldr	r3, [pc, #144]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 80016f8:	685b      	ldr	r3, [r3, #4]
 80016fa:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	689b      	ldr	r3, [r3, #8]
 8001702:	4921      	ldr	r1, [pc, #132]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001704:	4313      	orrs	r3, r2
 8001706:	604b      	str	r3, [r1, #4]
 8001708:	4b1f      	ldr	r3, [pc, #124]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800170a:	685b      	ldr	r3, [r3, #4]
 800170c:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	6a19      	ldr	r1, [r3, #32]
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001718:	430b      	orrs	r3, r1
 800171a:	491b      	ldr	r1, [pc, #108]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 800171c:	4313      	orrs	r3, r2
 800171e:	604b      	str	r3, [r1, #4]
 8001720:	4b1b      	ldr	r3, [pc, #108]	@ (8001790 <HAL_RCC_OscConfig+0x4cc>)
 8001722:	2201      	movs	r2, #1
 8001724:	601a      	str	r2, [r3, #0]
 8001726:	f7ff faa3 	bl	8000c70 <HAL_GetTick>
 800172a:	6138      	str	r0, [r7, #16]
 800172c:	e008      	b.n	8001740 <HAL_RCC_OscConfig+0x47c>
 800172e:	f7ff fa9f 	bl	8000c70 <HAL_GetTick>
 8001732:	4602      	mov	r2, r0
 8001734:	693b      	ldr	r3, [r7, #16]
 8001736:	1ad3      	subs	r3, r2, r3
 8001738:	2b02      	cmp	r3, #2
 800173a:	d901      	bls.n	8001740 <HAL_RCC_OscConfig+0x47c>
 800173c:	2303      	movs	r3, #3
 800173e:	e03d      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 8001740:	4b11      	ldr	r3, [pc, #68]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001742:	681b      	ldr	r3, [r3, #0]
 8001744:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001748:	2b00      	cmp	r3, #0
 800174a:	d0f0      	beq.n	800172e <HAL_RCC_OscConfig+0x46a>
 800174c:	e035      	b.n	80017ba <HAL_RCC_OscConfig+0x4f6>
 800174e:	4b10      	ldr	r3, [pc, #64]	@ (8001790 <HAL_RCC_OscConfig+0x4cc>)
 8001750:	2200      	movs	r2, #0
 8001752:	601a      	str	r2, [r3, #0]
 8001754:	f7ff fa8c 	bl	8000c70 <HAL_GetTick>
 8001758:	6138      	str	r0, [r7, #16]
 800175a:	e008      	b.n	800176e <HAL_RCC_OscConfig+0x4aa>
 800175c:	f7ff fa88 	bl	8000c70 <HAL_GetTick>
 8001760:	4602      	mov	r2, r0
 8001762:	693b      	ldr	r3, [r7, #16]
 8001764:	1ad3      	subs	r3, r2, r3
 8001766:	2b02      	cmp	r3, #2
 8001768:	d901      	bls.n	800176e <HAL_RCC_OscConfig+0x4aa>
 800176a:	2303      	movs	r3, #3
 800176c:	e026      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 800176e:	4b06      	ldr	r3, [pc, #24]	@ (8001788 <HAL_RCC_OscConfig+0x4c4>)
 8001770:	681b      	ldr	r3, [r3, #0]
 8001772:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001776:	2b00      	cmp	r3, #0
 8001778:	d1f0      	bne.n	800175c <HAL_RCC_OscConfig+0x498>
 800177a:	e01e      	b.n	80017ba <HAL_RCC_OscConfig+0x4f6>
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	69db      	ldr	r3, [r3, #28]
 8001780:	2b01      	cmp	r3, #1
 8001782:	d107      	bne.n	8001794 <HAL_RCC_OscConfig+0x4d0>
 8001784:	2301      	movs	r3, #1
 8001786:	e019      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 8001788:	40021000 	.word	0x40021000
 800178c:	40007000 	.word	0x40007000
 8001790:	42420060 	.word	0x42420060
 8001794:	4b0b      	ldr	r3, [pc, #44]	@ (80017c4 <HAL_RCC_OscConfig+0x500>)
 8001796:	685b      	ldr	r3, [r3, #4]
 8001798:	60fb      	str	r3, [r7, #12]
 800179a:	68fb      	ldr	r3, [r7, #12]
 800179c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	6a1b      	ldr	r3, [r3, #32]
 80017a4:	429a      	cmp	r2, r3
 80017a6:	d106      	bne.n	80017b6 <HAL_RCC_OscConfig+0x4f2>
 80017a8:	68fb      	ldr	r3, [r7, #12]
 80017aa:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80017b2:	429a      	cmp	r2, r3
 80017b4:	d001      	beq.n	80017ba <HAL_RCC_OscConfig+0x4f6>
 80017b6:	2301      	movs	r3, #1
 80017b8:	e000      	b.n	80017bc <HAL_RCC_OscConfig+0x4f8>
 80017ba:	2300      	movs	r3, #0
 80017bc:	4618      	mov	r0, r3
 80017be:	3718      	adds	r7, #24
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bd80      	pop	{r7, pc}
 80017c4:	40021000 	.word	0x40021000

080017c8 <HAL_RCC_ClockConfig>:
 80017c8:	b580      	push	{r7, lr}
 80017ca:	b084      	sub	sp, #16
 80017cc:	af00      	add	r7, sp, #0
 80017ce:	6078      	str	r0, [r7, #4]
 80017d0:	6039      	str	r1, [r7, #0]
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d101      	bne.n	80017dc <HAL_RCC_ClockConfig+0x14>
 80017d8:	2301      	movs	r3, #1
 80017da:	e0d0      	b.n	800197e <HAL_RCC_ClockConfig+0x1b6>
 80017dc:	4b6a      	ldr	r3, [pc, #424]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	f003 0307 	and.w	r3, r3, #7
 80017e4:	683a      	ldr	r2, [r7, #0]
 80017e6:	429a      	cmp	r2, r3
 80017e8:	d910      	bls.n	800180c <HAL_RCC_ClockConfig+0x44>
 80017ea:	4b67      	ldr	r3, [pc, #412]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	f023 0207 	bic.w	r2, r3, #7
 80017f2:	4965      	ldr	r1, [pc, #404]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 80017f4:	683b      	ldr	r3, [r7, #0]
 80017f6:	4313      	orrs	r3, r2
 80017f8:	600b      	str	r3, [r1, #0]
 80017fa:	4b63      	ldr	r3, [pc, #396]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	f003 0307 	and.w	r3, r3, #7
 8001802:	683a      	ldr	r2, [r7, #0]
 8001804:	429a      	cmp	r2, r3
 8001806:	d001      	beq.n	800180c <HAL_RCC_ClockConfig+0x44>
 8001808:	2301      	movs	r3, #1
 800180a:	e0b8      	b.n	800197e <HAL_RCC_ClockConfig+0x1b6>
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	681b      	ldr	r3, [r3, #0]
 8001810:	f003 0302 	and.w	r3, r3, #2
 8001814:	2b00      	cmp	r3, #0
 8001816:	d020      	beq.n	800185a <HAL_RCC_ClockConfig+0x92>
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	f003 0304 	and.w	r3, r3, #4
 8001820:	2b00      	cmp	r3, #0
 8001822:	d005      	beq.n	8001830 <HAL_RCC_ClockConfig+0x68>
 8001824:	4b59      	ldr	r3, [pc, #356]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001826:	685b      	ldr	r3, [r3, #4]
 8001828:	4a58      	ldr	r2, [pc, #352]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 800182a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800182e:	6053      	str	r3, [r2, #4]
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	f003 0308 	and.w	r3, r3, #8
 8001838:	2b00      	cmp	r3, #0
 800183a:	d005      	beq.n	8001848 <HAL_RCC_ClockConfig+0x80>
 800183c:	4b53      	ldr	r3, [pc, #332]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 800183e:	685b      	ldr	r3, [r3, #4]
 8001840:	4a52      	ldr	r2, [pc, #328]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001842:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001846:	6053      	str	r3, [r2, #4]
 8001848:	4b50      	ldr	r3, [pc, #320]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 800184a:	685b      	ldr	r3, [r3, #4]
 800184c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	689b      	ldr	r3, [r3, #8]
 8001854:	494d      	ldr	r1, [pc, #308]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001856:	4313      	orrs	r3, r2
 8001858:	604b      	str	r3, [r1, #4]
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	f003 0301 	and.w	r3, r3, #1
 8001862:	2b00      	cmp	r3, #0
 8001864:	d040      	beq.n	80018e8 <HAL_RCC_ClockConfig+0x120>
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	685b      	ldr	r3, [r3, #4]
 800186a:	2b01      	cmp	r3, #1
 800186c:	d107      	bne.n	800187e <HAL_RCC_ClockConfig+0xb6>
 800186e:	4b47      	ldr	r3, [pc, #284]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001870:	681b      	ldr	r3, [r3, #0]
 8001872:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001876:	2b00      	cmp	r3, #0
 8001878:	d115      	bne.n	80018a6 <HAL_RCC_ClockConfig+0xde>
 800187a:	2301      	movs	r3, #1
 800187c:	e07f      	b.n	800197e <HAL_RCC_ClockConfig+0x1b6>
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	685b      	ldr	r3, [r3, #4]
 8001882:	2b02      	cmp	r3, #2
 8001884:	d107      	bne.n	8001896 <HAL_RCC_ClockConfig+0xce>
 8001886:	4b41      	ldr	r3, [pc, #260]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800188e:	2b00      	cmp	r3, #0
 8001890:	d109      	bne.n	80018a6 <HAL_RCC_ClockConfig+0xde>
 8001892:	2301      	movs	r3, #1
 8001894:	e073      	b.n	800197e <HAL_RCC_ClockConfig+0x1b6>
 8001896:	4b3d      	ldr	r3, [pc, #244]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	f003 0302 	and.w	r3, r3, #2
 800189e:	2b00      	cmp	r3, #0
 80018a0:	d101      	bne.n	80018a6 <HAL_RCC_ClockConfig+0xde>
 80018a2:	2301      	movs	r3, #1
 80018a4:	e06b      	b.n	800197e <HAL_RCC_ClockConfig+0x1b6>
 80018a6:	4b39      	ldr	r3, [pc, #228]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 80018a8:	685b      	ldr	r3, [r3, #4]
 80018aa:	f023 0203 	bic.w	r2, r3, #3
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	685b      	ldr	r3, [r3, #4]
 80018b2:	4936      	ldr	r1, [pc, #216]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 80018b4:	4313      	orrs	r3, r2
 80018b6:	604b      	str	r3, [r1, #4]
 80018b8:	f7ff f9da 	bl	8000c70 <HAL_GetTick>
 80018bc:	60f8      	str	r0, [r7, #12]
 80018be:	e00a      	b.n	80018d6 <HAL_RCC_ClockConfig+0x10e>
 80018c0:	f7ff f9d6 	bl	8000c70 <HAL_GetTick>
 80018c4:	4602      	mov	r2, r0
 80018c6:	68fb      	ldr	r3, [r7, #12]
 80018c8:	1ad3      	subs	r3, r2, r3
 80018ca:	f241 3288 	movw	r2, #5000	@ 0x1388
 80018ce:	4293      	cmp	r3, r2
 80018d0:	d901      	bls.n	80018d6 <HAL_RCC_ClockConfig+0x10e>
 80018d2:	2303      	movs	r3, #3
 80018d4:	e053      	b.n	800197e <HAL_RCC_ClockConfig+0x1b6>
 80018d6:	4b2d      	ldr	r3, [pc, #180]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 80018d8:	685b      	ldr	r3, [r3, #4]
 80018da:	f003 020c 	and.w	r2, r3, #12
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	685b      	ldr	r3, [r3, #4]
 80018e2:	009b      	lsls	r3, r3, #2
 80018e4:	429a      	cmp	r2, r3
 80018e6:	d1eb      	bne.n	80018c0 <HAL_RCC_ClockConfig+0xf8>
 80018e8:	4b27      	ldr	r3, [pc, #156]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	f003 0307 	and.w	r3, r3, #7
 80018f0:	683a      	ldr	r2, [r7, #0]
 80018f2:	429a      	cmp	r2, r3
 80018f4:	d210      	bcs.n	8001918 <HAL_RCC_ClockConfig+0x150>
 80018f6:	4b24      	ldr	r3, [pc, #144]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	f023 0207 	bic.w	r2, r3, #7
 80018fe:	4922      	ldr	r1, [pc, #136]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 8001900:	683b      	ldr	r3, [r7, #0]
 8001902:	4313      	orrs	r3, r2
 8001904:	600b      	str	r3, [r1, #0]
 8001906:	4b20      	ldr	r3, [pc, #128]	@ (8001988 <HAL_RCC_ClockConfig+0x1c0>)
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	f003 0307 	and.w	r3, r3, #7
 800190e:	683a      	ldr	r2, [r7, #0]
 8001910:	429a      	cmp	r2, r3
 8001912:	d001      	beq.n	8001918 <HAL_RCC_ClockConfig+0x150>
 8001914:	2301      	movs	r3, #1
 8001916:	e032      	b.n	800197e <HAL_RCC_ClockConfig+0x1b6>
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	f003 0304 	and.w	r3, r3, #4
 8001920:	2b00      	cmp	r3, #0
 8001922:	d008      	beq.n	8001936 <HAL_RCC_ClockConfig+0x16e>
 8001924:	4b19      	ldr	r3, [pc, #100]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001926:	685b      	ldr	r3, [r3, #4]
 8001928:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	68db      	ldr	r3, [r3, #12]
 8001930:	4916      	ldr	r1, [pc, #88]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001932:	4313      	orrs	r3, r2
 8001934:	604b      	str	r3, [r1, #4]
 8001936:	687b      	ldr	r3, [r7, #4]
 8001938:	681b      	ldr	r3, [r3, #0]
 800193a:	f003 0308 	and.w	r3, r3, #8
 800193e:	2b00      	cmp	r3, #0
 8001940:	d009      	beq.n	8001956 <HAL_RCC_ClockConfig+0x18e>
 8001942:	4b12      	ldr	r3, [pc, #72]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001944:	685b      	ldr	r3, [r3, #4]
 8001946:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	691b      	ldr	r3, [r3, #16]
 800194e:	00db      	lsls	r3, r3, #3
 8001950:	490e      	ldr	r1, [pc, #56]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 8001952:	4313      	orrs	r3, r2
 8001954:	604b      	str	r3, [r1, #4]
 8001956:	f000 f821 	bl	800199c <HAL_RCC_GetSysClockFreq>
 800195a:	4602      	mov	r2, r0
 800195c:	4b0b      	ldr	r3, [pc, #44]	@ (800198c <HAL_RCC_ClockConfig+0x1c4>)
 800195e:	685b      	ldr	r3, [r3, #4]
 8001960:	091b      	lsrs	r3, r3, #4
 8001962:	f003 030f 	and.w	r3, r3, #15
 8001966:	490a      	ldr	r1, [pc, #40]	@ (8001990 <HAL_RCC_ClockConfig+0x1c8>)
 8001968:	5ccb      	ldrb	r3, [r1, r3]
 800196a:	fa22 f303 	lsr.w	r3, r2, r3
 800196e:	4a09      	ldr	r2, [pc, #36]	@ (8001994 <HAL_RCC_ClockConfig+0x1cc>)
 8001970:	6013      	str	r3, [r2, #0]
 8001972:	4b09      	ldr	r3, [pc, #36]	@ (8001998 <HAL_RCC_ClockConfig+0x1d0>)
 8001974:	681b      	ldr	r3, [r3, #0]
 8001976:	4618      	mov	r0, r3
 8001978:	f7ff f938 	bl	8000bec <HAL_InitTick>
 800197c:	2300      	movs	r3, #0
 800197e:	4618      	mov	r0, r3
 8001980:	3710      	adds	r7, #16
 8001982:	46bd      	mov	sp, r7
 8001984:	bd80      	pop	{r7, pc}
 8001986:	bf00      	nop
 8001988:	40022000 	.word	0x40022000
 800198c:	40021000 	.word	0x40021000
 8001990:	08002ca0 	.word	0x08002ca0
 8001994:	20000000 	.word	0x20000000
 8001998:	20000004 	.word	0x20000004

0800199c <HAL_RCC_GetSysClockFreq>:
 800199c:	b490      	push	{r4, r7}
 800199e:	b08a      	sub	sp, #40	@ 0x28
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	4b29      	ldr	r3, [pc, #164]	@ (8001a48 <HAL_RCC_GetSysClockFreq+0xac>)
 80019a4:	1d3c      	adds	r4, r7, #4
 80019a6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80019a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80019ac:	f240 2301 	movw	r3, #513	@ 0x201
 80019b0:	803b      	strh	r3, [r7, #0]
 80019b2:	2300      	movs	r3, #0
 80019b4:	61fb      	str	r3, [r7, #28]
 80019b6:	2300      	movs	r3, #0
 80019b8:	61bb      	str	r3, [r7, #24]
 80019ba:	2300      	movs	r3, #0
 80019bc:	627b      	str	r3, [r7, #36]	@ 0x24
 80019be:	2300      	movs	r3, #0
 80019c0:	617b      	str	r3, [r7, #20]
 80019c2:	2300      	movs	r3, #0
 80019c4:	623b      	str	r3, [r7, #32]
 80019c6:	4b21      	ldr	r3, [pc, #132]	@ (8001a4c <HAL_RCC_GetSysClockFreq+0xb0>)
 80019c8:	685b      	ldr	r3, [r3, #4]
 80019ca:	61fb      	str	r3, [r7, #28]
 80019cc:	69fb      	ldr	r3, [r7, #28]
 80019ce:	f003 030c 	and.w	r3, r3, #12
 80019d2:	2b04      	cmp	r3, #4
 80019d4:	d002      	beq.n	80019dc <HAL_RCC_GetSysClockFreq+0x40>
 80019d6:	2b08      	cmp	r3, #8
 80019d8:	d003      	beq.n	80019e2 <HAL_RCC_GetSysClockFreq+0x46>
 80019da:	e02b      	b.n	8001a34 <HAL_RCC_GetSysClockFreq+0x98>
 80019dc:	4b1c      	ldr	r3, [pc, #112]	@ (8001a50 <HAL_RCC_GetSysClockFreq+0xb4>)
 80019de:	623b      	str	r3, [r7, #32]
 80019e0:	e02b      	b.n	8001a3a <HAL_RCC_GetSysClockFreq+0x9e>
 80019e2:	69fb      	ldr	r3, [r7, #28]
 80019e4:	0c9b      	lsrs	r3, r3, #18
 80019e6:	f003 030f 	and.w	r3, r3, #15
 80019ea:	3328      	adds	r3, #40	@ 0x28
 80019ec:	443b      	add	r3, r7
 80019ee:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80019f2:	617b      	str	r3, [r7, #20]
 80019f4:	69fb      	ldr	r3, [r7, #28]
 80019f6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d012      	beq.n	8001a24 <HAL_RCC_GetSysClockFreq+0x88>
 80019fe:	4b13      	ldr	r3, [pc, #76]	@ (8001a4c <HAL_RCC_GetSysClockFreq+0xb0>)
 8001a00:	685b      	ldr	r3, [r3, #4]
 8001a02:	0c5b      	lsrs	r3, r3, #17
 8001a04:	f003 0301 	and.w	r3, r3, #1
 8001a08:	3328      	adds	r3, #40	@ 0x28
 8001a0a:	443b      	add	r3, r7
 8001a0c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001a10:	61bb      	str	r3, [r7, #24]
 8001a12:	697b      	ldr	r3, [r7, #20]
 8001a14:	4a0e      	ldr	r2, [pc, #56]	@ (8001a50 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001a16:	fb03 f202 	mul.w	r2, r3, r2
 8001a1a:	69bb      	ldr	r3, [r7, #24]
 8001a1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a20:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a22:	e004      	b.n	8001a2e <HAL_RCC_GetSysClockFreq+0x92>
 8001a24:	697b      	ldr	r3, [r7, #20]
 8001a26:	4a0b      	ldr	r2, [pc, #44]	@ (8001a54 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001a28:	fb02 f303 	mul.w	r3, r2, r3
 8001a2c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a30:	623b      	str	r3, [r7, #32]
 8001a32:	e002      	b.n	8001a3a <HAL_RCC_GetSysClockFreq+0x9e>
 8001a34:	4b06      	ldr	r3, [pc, #24]	@ (8001a50 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001a36:	623b      	str	r3, [r7, #32]
 8001a38:	bf00      	nop
 8001a3a:	6a3b      	ldr	r3, [r7, #32]
 8001a3c:	4618      	mov	r0, r3
 8001a3e:	3728      	adds	r7, #40	@ 0x28
 8001a40:	46bd      	mov	sp, r7
 8001a42:	bc90      	pop	{r4, r7}
 8001a44:	4770      	bx	lr
 8001a46:	bf00      	nop
 8001a48:	08002c90 	.word	0x08002c90
 8001a4c:	40021000 	.word	0x40021000
 8001a50:	007a1200 	.word	0x007a1200
 8001a54:	003d0900 	.word	0x003d0900

08001a58 <HAL_RCC_GetHCLKFreq>:
 8001a58:	b480      	push	{r7}
 8001a5a:	af00      	add	r7, sp, #0
 8001a5c:	4b02      	ldr	r3, [pc, #8]	@ (8001a68 <HAL_RCC_GetHCLKFreq+0x10>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	4618      	mov	r0, r3
 8001a62:	46bd      	mov	sp, r7
 8001a64:	bc80      	pop	{r7}
 8001a66:	4770      	bx	lr
 8001a68:	20000000 	.word	0x20000000

08001a6c <HAL_RCC_GetPCLK1Freq>:
 8001a6c:	b580      	push	{r7, lr}
 8001a6e:	af00      	add	r7, sp, #0
 8001a70:	f7ff fff2 	bl	8001a58 <HAL_RCC_GetHCLKFreq>
 8001a74:	4602      	mov	r2, r0
 8001a76:	4b05      	ldr	r3, [pc, #20]	@ (8001a8c <HAL_RCC_GetPCLK1Freq+0x20>)
 8001a78:	685b      	ldr	r3, [r3, #4]
 8001a7a:	0a1b      	lsrs	r3, r3, #8
 8001a7c:	f003 0307 	and.w	r3, r3, #7
 8001a80:	4903      	ldr	r1, [pc, #12]	@ (8001a90 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001a82:	5ccb      	ldrb	r3, [r1, r3]
 8001a84:	fa22 f303 	lsr.w	r3, r2, r3
 8001a88:	4618      	mov	r0, r3
 8001a8a:	bd80      	pop	{r7, pc}
 8001a8c:	40021000 	.word	0x40021000
 8001a90:	08002cb0 	.word	0x08002cb0

08001a94 <HAL_RCC_GetPCLK2Freq>:
 8001a94:	b580      	push	{r7, lr}
 8001a96:	af00      	add	r7, sp, #0
 8001a98:	f7ff ffde 	bl	8001a58 <HAL_RCC_GetHCLKFreq>
 8001a9c:	4602      	mov	r2, r0
 8001a9e:	4b05      	ldr	r3, [pc, #20]	@ (8001ab4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001aa0:	685b      	ldr	r3, [r3, #4]
 8001aa2:	0adb      	lsrs	r3, r3, #11
 8001aa4:	f003 0307 	and.w	r3, r3, #7
 8001aa8:	4903      	ldr	r1, [pc, #12]	@ (8001ab8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001aaa:	5ccb      	ldrb	r3, [r1, r3]
 8001aac:	fa22 f303 	lsr.w	r3, r2, r3
 8001ab0:	4618      	mov	r0, r3
 8001ab2:	bd80      	pop	{r7, pc}
 8001ab4:	40021000 	.word	0x40021000
 8001ab8:	08002cb0 	.word	0x08002cb0

08001abc <RCC_Delay>:
 8001abc:	b480      	push	{r7}
 8001abe:	b085      	sub	sp, #20
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	6078      	str	r0, [r7, #4]
 8001ac4:	4b0a      	ldr	r3, [pc, #40]	@ (8001af0 <RCC_Delay+0x34>)
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	4a0a      	ldr	r2, [pc, #40]	@ (8001af4 <RCC_Delay+0x38>)
 8001aca:	fba2 2303 	umull	r2, r3, r2, r3
 8001ace:	0a5b      	lsrs	r3, r3, #9
 8001ad0:	687a      	ldr	r2, [r7, #4]
 8001ad2:	fb02 f303 	mul.w	r3, r2, r3
 8001ad6:	60fb      	str	r3, [r7, #12]
 8001ad8:	bf00      	nop
 8001ada:	68fb      	ldr	r3, [r7, #12]
 8001adc:	1e5a      	subs	r2, r3, #1
 8001ade:	60fa      	str	r2, [r7, #12]
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	d1f9      	bne.n	8001ad8 <RCC_Delay+0x1c>
 8001ae4:	bf00      	nop
 8001ae6:	bf00      	nop
 8001ae8:	3714      	adds	r7, #20
 8001aea:	46bd      	mov	sp, r7
 8001aec:	bc80      	pop	{r7}
 8001aee:	4770      	bx	lr
 8001af0:	20000000 	.word	0x20000000
 8001af4:	10624dd3 	.word	0x10624dd3

08001af8 <HAL_UART_Init>:
 8001af8:	b580      	push	{r7, lr}
 8001afa:	b082      	sub	sp, #8
 8001afc:	af00      	add	r7, sp, #0
 8001afe:	6078      	str	r0, [r7, #4]
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d101      	bne.n	8001b0a <HAL_UART_Init+0x12>
 8001b06:	2301      	movs	r3, #1
 8001b08:	e03f      	b.n	8001b8a <HAL_UART_Init+0x92>
 8001b0a:	687b      	ldr	r3, [r7, #4]
 8001b0c:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8001b10:	b2db      	uxtb	r3, r3
 8001b12:	2b00      	cmp	r3, #0
 8001b14:	d106      	bne.n	8001b24 <HAL_UART_Init+0x2c>
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	2200      	movs	r2, #0
 8001b1a:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001b1e:	6878      	ldr	r0, [r7, #4]
 8001b20:	f7fe feea 	bl	80008f8 <HAL_UART_MspInit>
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	2224      	movs	r2, #36	@ 0x24
 8001b28:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	68da      	ldr	r2, [r3, #12]
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001b3a:	60da      	str	r2, [r3, #12]
 8001b3c:	6878      	ldr	r0, [r7, #4]
 8001b3e:	f000 faed 	bl	800211c <UART_SetConfig>
 8001b42:	687b      	ldr	r3, [r7, #4]
 8001b44:	681b      	ldr	r3, [r3, #0]
 8001b46:	691a      	ldr	r2, [r3, #16]
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8001b50:	611a      	str	r2, [r3, #16]
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	681b      	ldr	r3, [r3, #0]
 8001b56:	695a      	ldr	r2, [r3, #20]
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8001b60:	615a      	str	r2, [r3, #20]
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	68da      	ldr	r2, [r3, #12]
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	681b      	ldr	r3, [r3, #0]
 8001b6c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001b70:	60da      	str	r2, [r3, #12]
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	2200      	movs	r2, #0
 8001b76:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	2220      	movs	r2, #32
 8001b7c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	2220      	movs	r2, #32
 8001b84:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8001b88:	2300      	movs	r3, #0
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	3708      	adds	r7, #8
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}

08001b92 <HAL_UART_Transmit_IT>:
 8001b92:	b480      	push	{r7}
 8001b94:	b085      	sub	sp, #20
 8001b96:	af00      	add	r7, sp, #0
 8001b98:	60f8      	str	r0, [r7, #12]
 8001b9a:	60b9      	str	r1, [r7, #8]
 8001b9c:	4613      	mov	r3, r2
 8001b9e:	80fb      	strh	r3, [r7, #6]
 8001ba0:	68fb      	ldr	r3, [r7, #12]
 8001ba2:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8001ba6:	b2db      	uxtb	r3, r3
 8001ba8:	2b20      	cmp	r3, #32
 8001baa:	d130      	bne.n	8001c0e <HAL_UART_Transmit_IT+0x7c>
 8001bac:	68bb      	ldr	r3, [r7, #8]
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d002      	beq.n	8001bb8 <HAL_UART_Transmit_IT+0x26>
 8001bb2:	88fb      	ldrh	r3, [r7, #6]
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d101      	bne.n	8001bbc <HAL_UART_Transmit_IT+0x2a>
 8001bb8:	2301      	movs	r3, #1
 8001bba:	e029      	b.n	8001c10 <HAL_UART_Transmit_IT+0x7e>
 8001bbc:	68fb      	ldr	r3, [r7, #12]
 8001bbe:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8001bc2:	2b01      	cmp	r3, #1
 8001bc4:	d101      	bne.n	8001bca <HAL_UART_Transmit_IT+0x38>
 8001bc6:	2302      	movs	r3, #2
 8001bc8:	e022      	b.n	8001c10 <HAL_UART_Transmit_IT+0x7e>
 8001bca:	68fb      	ldr	r3, [r7, #12]
 8001bcc:	2201      	movs	r2, #1
 8001bce:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001bd2:	68fb      	ldr	r3, [r7, #12]
 8001bd4:	68ba      	ldr	r2, [r7, #8]
 8001bd6:	621a      	str	r2, [r3, #32]
 8001bd8:	68fb      	ldr	r3, [r7, #12]
 8001bda:	88fa      	ldrh	r2, [r7, #6]
 8001bdc:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	88fa      	ldrh	r2, [r7, #6]
 8001be2:	84da      	strh	r2, [r3, #38]	@ 0x26
 8001be4:	68fb      	ldr	r3, [r7, #12]
 8001be6:	2200      	movs	r2, #0
 8001be8:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001bea:	68fb      	ldr	r3, [r7, #12]
 8001bec:	2221      	movs	r2, #33	@ 0x21
 8001bee:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8001bf2:	68fb      	ldr	r3, [r7, #12]
 8001bf4:	2200      	movs	r2, #0
 8001bf6:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001bfa:	68fb      	ldr	r3, [r7, #12]
 8001bfc:	681b      	ldr	r3, [r3, #0]
 8001bfe:	68da      	ldr	r2, [r3, #12]
 8001c00:	68fb      	ldr	r3, [r7, #12]
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001c08:	60da      	str	r2, [r3, #12]
 8001c0a:	2300      	movs	r3, #0
 8001c0c:	e000      	b.n	8001c10 <HAL_UART_Transmit_IT+0x7e>
 8001c0e:	2302      	movs	r3, #2
 8001c10:	4618      	mov	r0, r3
 8001c12:	3714      	adds	r7, #20
 8001c14:	46bd      	mov	sp, r7
 8001c16:	bc80      	pop	{r7}
 8001c18:	4770      	bx	lr

08001c1a <HAL_UART_Receive_IT>:
 8001c1a:	b480      	push	{r7}
 8001c1c:	b085      	sub	sp, #20
 8001c1e:	af00      	add	r7, sp, #0
 8001c20:	60f8      	str	r0, [r7, #12]
 8001c22:	60b9      	str	r1, [r7, #8]
 8001c24:	4613      	mov	r3, r2
 8001c26:	80fb      	strh	r3, [r7, #6]
 8001c28:	68fb      	ldr	r3, [r7, #12]
 8001c2a:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8001c2e:	b2db      	uxtb	r3, r3
 8001c30:	2b20      	cmp	r3, #32
 8001c32:	d140      	bne.n	8001cb6 <HAL_UART_Receive_IT+0x9c>
 8001c34:	68bb      	ldr	r3, [r7, #8]
 8001c36:	2b00      	cmp	r3, #0
 8001c38:	d002      	beq.n	8001c40 <HAL_UART_Receive_IT+0x26>
 8001c3a:	88fb      	ldrh	r3, [r7, #6]
 8001c3c:	2b00      	cmp	r3, #0
 8001c3e:	d101      	bne.n	8001c44 <HAL_UART_Receive_IT+0x2a>
 8001c40:	2301      	movs	r3, #1
 8001c42:	e039      	b.n	8001cb8 <HAL_UART_Receive_IT+0x9e>
 8001c44:	68fb      	ldr	r3, [r7, #12]
 8001c46:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8001c4a:	2b01      	cmp	r3, #1
 8001c4c:	d101      	bne.n	8001c52 <HAL_UART_Receive_IT+0x38>
 8001c4e:	2302      	movs	r3, #2
 8001c50:	e032      	b.n	8001cb8 <HAL_UART_Receive_IT+0x9e>
 8001c52:	68fb      	ldr	r3, [r7, #12]
 8001c54:	2201      	movs	r2, #1
 8001c56:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001c5a:	68fb      	ldr	r3, [r7, #12]
 8001c5c:	68ba      	ldr	r2, [r7, #8]
 8001c5e:	629a      	str	r2, [r3, #40]	@ 0x28
 8001c60:	68fb      	ldr	r3, [r7, #12]
 8001c62:	88fa      	ldrh	r2, [r7, #6]
 8001c64:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8001c66:	68fb      	ldr	r3, [r7, #12]
 8001c68:	88fa      	ldrh	r2, [r7, #6]
 8001c6a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8001c6c:	68fb      	ldr	r3, [r7, #12]
 8001c6e:	2200      	movs	r2, #0
 8001c70:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001c72:	68fb      	ldr	r3, [r7, #12]
 8001c74:	2222      	movs	r2, #34	@ 0x22
 8001c76:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8001c7a:	68fb      	ldr	r3, [r7, #12]
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001c82:	68fb      	ldr	r3, [r7, #12]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	68da      	ldr	r2, [r3, #12]
 8001c88:	68fb      	ldr	r3, [r7, #12]
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001c90:	60da      	str	r2, [r3, #12]
 8001c92:	68fb      	ldr	r3, [r7, #12]
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	695a      	ldr	r2, [r3, #20]
 8001c98:	68fb      	ldr	r3, [r7, #12]
 8001c9a:	681b      	ldr	r3, [r3, #0]
 8001c9c:	f042 0201 	orr.w	r2, r2, #1
 8001ca0:	615a      	str	r2, [r3, #20]
 8001ca2:	68fb      	ldr	r3, [r7, #12]
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	68da      	ldr	r2, [r3, #12]
 8001ca8:	68fb      	ldr	r3, [r7, #12]
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	f042 0220 	orr.w	r2, r2, #32
 8001cb0:	60da      	str	r2, [r3, #12]
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	e000      	b.n	8001cb8 <HAL_UART_Receive_IT+0x9e>
 8001cb6:	2302      	movs	r3, #2
 8001cb8:	4618      	mov	r0, r3
 8001cba:	3714      	adds	r7, #20
 8001cbc:	46bd      	mov	sp, r7
 8001cbe:	bc80      	pop	{r7}
 8001cc0:	4770      	bx	lr
	...

08001cc4 <HAL_UART_IRQHandler>:
 8001cc4:	b580      	push	{r7, lr}
 8001cc6:	b088      	sub	sp, #32
 8001cc8:	af00      	add	r7, sp, #0
 8001cca:	6078      	str	r0, [r7, #4]
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	681b      	ldr	r3, [r3, #0]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	61fb      	str	r3, [r7, #28]
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	68db      	ldr	r3, [r3, #12]
 8001cda:	61bb      	str	r3, [r7, #24]
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	695b      	ldr	r3, [r3, #20]
 8001ce2:	617b      	str	r3, [r7, #20]
 8001ce4:	2300      	movs	r3, #0
 8001ce6:	613b      	str	r3, [r7, #16]
 8001ce8:	2300      	movs	r3, #0
 8001cea:	60fb      	str	r3, [r7, #12]
 8001cec:	69fb      	ldr	r3, [r7, #28]
 8001cee:	f003 030f 	and.w	r3, r3, #15
 8001cf2:	613b      	str	r3, [r7, #16]
 8001cf4:	693b      	ldr	r3, [r7, #16]
 8001cf6:	2b00      	cmp	r3, #0
 8001cf8:	d10d      	bne.n	8001d16 <HAL_UART_IRQHandler+0x52>
 8001cfa:	69fb      	ldr	r3, [r7, #28]
 8001cfc:	f003 0320 	and.w	r3, r3, #32
 8001d00:	2b00      	cmp	r3, #0
 8001d02:	d008      	beq.n	8001d16 <HAL_UART_IRQHandler+0x52>
 8001d04:	69bb      	ldr	r3, [r7, #24]
 8001d06:	f003 0320 	and.w	r3, r3, #32
 8001d0a:	2b00      	cmp	r3, #0
 8001d0c:	d003      	beq.n	8001d16 <HAL_UART_IRQHandler+0x52>
 8001d0e:	6878      	ldr	r0, [r7, #4]
 8001d10:	f000 f982 	bl	8002018 <UART_Receive_IT>
 8001d14:	e0cb      	b.n	8001eae <HAL_UART_IRQHandler+0x1ea>
 8001d16:	693b      	ldr	r3, [r7, #16]
 8001d18:	2b00      	cmp	r3, #0
 8001d1a:	f000 80ab 	beq.w	8001e74 <HAL_UART_IRQHandler+0x1b0>
 8001d1e:	697b      	ldr	r3, [r7, #20]
 8001d20:	f003 0301 	and.w	r3, r3, #1
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	d105      	bne.n	8001d34 <HAL_UART_IRQHandler+0x70>
 8001d28:	69bb      	ldr	r3, [r7, #24]
 8001d2a:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	f000 80a0 	beq.w	8001e74 <HAL_UART_IRQHandler+0x1b0>
 8001d34:	69fb      	ldr	r3, [r7, #28]
 8001d36:	f003 0301 	and.w	r3, r3, #1
 8001d3a:	2b00      	cmp	r3, #0
 8001d3c:	d00a      	beq.n	8001d54 <HAL_UART_IRQHandler+0x90>
 8001d3e:	69bb      	ldr	r3, [r7, #24]
 8001d40:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001d44:	2b00      	cmp	r3, #0
 8001d46:	d005      	beq.n	8001d54 <HAL_UART_IRQHandler+0x90>
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d4c:	f043 0201 	orr.w	r2, r3, #1
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d54:	69fb      	ldr	r3, [r7, #28]
 8001d56:	f003 0304 	and.w	r3, r3, #4
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d00a      	beq.n	8001d74 <HAL_UART_IRQHandler+0xb0>
 8001d5e:	697b      	ldr	r3, [r7, #20]
 8001d60:	f003 0301 	and.w	r3, r3, #1
 8001d64:	2b00      	cmp	r3, #0
 8001d66:	d005      	beq.n	8001d74 <HAL_UART_IRQHandler+0xb0>
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d6c:	f043 0202 	orr.w	r2, r3, #2
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d74:	69fb      	ldr	r3, [r7, #28]
 8001d76:	f003 0302 	and.w	r3, r3, #2
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d00a      	beq.n	8001d94 <HAL_UART_IRQHandler+0xd0>
 8001d7e:	697b      	ldr	r3, [r7, #20]
 8001d80:	f003 0301 	and.w	r3, r3, #1
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d005      	beq.n	8001d94 <HAL_UART_IRQHandler+0xd0>
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d8c:	f043 0204 	orr.w	r2, r3, #4
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d94:	69fb      	ldr	r3, [r7, #28]
 8001d96:	f003 0308 	and.w	r3, r3, #8
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d00a      	beq.n	8001db4 <HAL_UART_IRQHandler+0xf0>
 8001d9e:	697b      	ldr	r3, [r7, #20]
 8001da0:	f003 0301 	and.w	r3, r3, #1
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d005      	beq.n	8001db4 <HAL_UART_IRQHandler+0xf0>
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001dac:	f043 0208 	orr.w	r2, r3, #8
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	d077      	beq.n	8001eac <HAL_UART_IRQHandler+0x1e8>
 8001dbc:	69fb      	ldr	r3, [r7, #28]
 8001dbe:	f003 0320 	and.w	r3, r3, #32
 8001dc2:	2b00      	cmp	r3, #0
 8001dc4:	d007      	beq.n	8001dd6 <HAL_UART_IRQHandler+0x112>
 8001dc6:	69bb      	ldr	r3, [r7, #24]
 8001dc8:	f003 0320 	and.w	r3, r3, #32
 8001dcc:	2b00      	cmp	r3, #0
 8001dce:	d002      	beq.n	8001dd6 <HAL_UART_IRQHandler+0x112>
 8001dd0:	6878      	ldr	r0, [r7, #4]
 8001dd2:	f000 f921 	bl	8002018 <UART_Receive_IT>
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	695b      	ldr	r3, [r3, #20]
 8001ddc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	bf14      	ite	ne
 8001de4:	2301      	movne	r3, #1
 8001de6:	2300      	moveq	r3, #0
 8001de8:	b2db      	uxtb	r3, r3
 8001dea:	60fb      	str	r3, [r7, #12]
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001df0:	f003 0308 	and.w	r3, r3, #8
 8001df4:	2b00      	cmp	r3, #0
 8001df6:	d102      	bne.n	8001dfe <HAL_UART_IRQHandler+0x13a>
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d031      	beq.n	8001e62 <HAL_UART_IRQHandler+0x19e>
 8001dfe:	6878      	ldr	r0, [r7, #4]
 8001e00:	f000 f86c 	bl	8001edc <UART_EndRxTransfer>
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	695b      	ldr	r3, [r3, #20]
 8001e0a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	d023      	beq.n	8001e5a <HAL_UART_IRQHandler+0x196>
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	695a      	ldr	r2, [r3, #20]
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001e20:	615a      	str	r2, [r3, #20]
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001e26:	2b00      	cmp	r3, #0
 8001e28:	d013      	beq.n	8001e52 <HAL_UART_IRQHandler+0x18e>
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001e2e:	4a21      	ldr	r2, [pc, #132]	@ (8001eb4 <HAL_UART_IRQHandler+0x1f0>)
 8001e30:	635a      	str	r2, [r3, #52]	@ 0x34
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001e36:	4618      	mov	r0, r3
 8001e38:	f7ff f832 	bl	8000ea0 <HAL_DMA_Abort_IT>
 8001e3c:	4603      	mov	r3, r0
 8001e3e:	2b00      	cmp	r3, #0
 8001e40:	d016      	beq.n	8001e70 <HAL_UART_IRQHandler+0x1ac>
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001e46:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001e48:	687a      	ldr	r2, [r7, #4]
 8001e4a:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8001e4c:	4610      	mov	r0, r2
 8001e4e:	4798      	blx	r3
 8001e50:	e00e      	b.n	8001e70 <HAL_UART_IRQHandler+0x1ac>
 8001e52:	6878      	ldr	r0, [r7, #4]
 8001e54:	f000 f839 	bl	8001eca <HAL_UART_ErrorCallback>
 8001e58:	e00a      	b.n	8001e70 <HAL_UART_IRQHandler+0x1ac>
 8001e5a:	6878      	ldr	r0, [r7, #4]
 8001e5c:	f000 f835 	bl	8001eca <HAL_UART_ErrorCallback>
 8001e60:	e006      	b.n	8001e70 <HAL_UART_IRQHandler+0x1ac>
 8001e62:	6878      	ldr	r0, [r7, #4]
 8001e64:	f000 f831 	bl	8001eca <HAL_UART_ErrorCallback>
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	2200      	movs	r2, #0
 8001e6c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001e6e:	e01d      	b.n	8001eac <HAL_UART_IRQHandler+0x1e8>
 8001e70:	bf00      	nop
 8001e72:	e01b      	b.n	8001eac <HAL_UART_IRQHandler+0x1e8>
 8001e74:	69fb      	ldr	r3, [r7, #28]
 8001e76:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001e7a:	2b00      	cmp	r3, #0
 8001e7c:	d008      	beq.n	8001e90 <HAL_UART_IRQHandler+0x1cc>
 8001e7e:	69bb      	ldr	r3, [r7, #24]
 8001e80:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001e84:	2b00      	cmp	r3, #0
 8001e86:	d003      	beq.n	8001e90 <HAL_UART_IRQHandler+0x1cc>
 8001e88:	6878      	ldr	r0, [r7, #4]
 8001e8a:	f000 f858 	bl	8001f3e <UART_Transmit_IT>
 8001e8e:	e00e      	b.n	8001eae <HAL_UART_IRQHandler+0x1ea>
 8001e90:	69fb      	ldr	r3, [r7, #28]
 8001e92:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d009      	beq.n	8001eae <HAL_UART_IRQHandler+0x1ea>
 8001e9a:	69bb      	ldr	r3, [r7, #24]
 8001e9c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001ea0:	2b00      	cmp	r3, #0
 8001ea2:	d004      	beq.n	8001eae <HAL_UART_IRQHandler+0x1ea>
 8001ea4:	6878      	ldr	r0, [r7, #4]
 8001ea6:	f000 f89f 	bl	8001fe8 <UART_EndTransmit_IT>
 8001eaa:	e000      	b.n	8001eae <HAL_UART_IRQHandler+0x1ea>
 8001eac:	bf00      	nop
 8001eae:	3720      	adds	r7, #32
 8001eb0:	46bd      	mov	sp, r7
 8001eb2:	bd80      	pop	{r7, pc}
 8001eb4:	08001f17 	.word	0x08001f17

08001eb8 <HAL_UART_TxCpltCallback>:
 8001eb8:	b480      	push	{r7}
 8001eba:	b083      	sub	sp, #12
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
 8001ec0:	bf00      	nop
 8001ec2:	370c      	adds	r7, #12
 8001ec4:	46bd      	mov	sp, r7
 8001ec6:	bc80      	pop	{r7}
 8001ec8:	4770      	bx	lr

08001eca <HAL_UART_ErrorCallback>:
 8001eca:	b480      	push	{r7}
 8001ecc:	b083      	sub	sp, #12
 8001ece:	af00      	add	r7, sp, #0
 8001ed0:	6078      	str	r0, [r7, #4]
 8001ed2:	bf00      	nop
 8001ed4:	370c      	adds	r7, #12
 8001ed6:	46bd      	mov	sp, r7
 8001ed8:	bc80      	pop	{r7}
 8001eda:	4770      	bx	lr

08001edc <UART_EndRxTransfer>:
 8001edc:	b480      	push	{r7}
 8001ede:	b083      	sub	sp, #12
 8001ee0:	af00      	add	r7, sp, #0
 8001ee2:	6078      	str	r0, [r7, #4]
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	68da      	ldr	r2, [r3, #12]
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 8001ef2:	60da      	str	r2, [r3, #12]
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	681b      	ldr	r3, [r3, #0]
 8001ef8:	695a      	ldr	r2, [r3, #20]
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	f022 0201 	bic.w	r2, r2, #1
 8001f02:	615a      	str	r2, [r3, #20]
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	2220      	movs	r2, #32
 8001f08:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8001f0c:	bf00      	nop
 8001f0e:	370c      	adds	r7, #12
 8001f10:	46bd      	mov	sp, r7
 8001f12:	bc80      	pop	{r7}
 8001f14:	4770      	bx	lr

08001f16 <UART_DMAAbortOnError>:
 8001f16:	b580      	push	{r7, lr}
 8001f18:	b084      	sub	sp, #16
 8001f1a:	af00      	add	r7, sp, #0
 8001f1c:	6078      	str	r0, [r7, #4]
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f22:	60fb      	str	r3, [r7, #12]
 8001f24:	68fb      	ldr	r3, [r7, #12]
 8001f26:	2200      	movs	r2, #0
 8001f28:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8001f2a:	68fb      	ldr	r3, [r7, #12]
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8001f30:	68f8      	ldr	r0, [r7, #12]
 8001f32:	f7ff ffca 	bl	8001eca <HAL_UART_ErrorCallback>
 8001f36:	bf00      	nop
 8001f38:	3710      	adds	r7, #16
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	bd80      	pop	{r7, pc}

08001f3e <UART_Transmit_IT>:
 8001f3e:	b480      	push	{r7}
 8001f40:	b085      	sub	sp, #20
 8001f42:	af00      	add	r7, sp, #0
 8001f44:	6078      	str	r0, [r7, #4]
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8001f4c:	b2db      	uxtb	r3, r3
 8001f4e:	2b21      	cmp	r3, #33	@ 0x21
 8001f50:	d144      	bne.n	8001fdc <UART_Transmit_IT+0x9e>
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	689b      	ldr	r3, [r3, #8]
 8001f56:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001f5a:	d11a      	bne.n	8001f92 <UART_Transmit_IT+0x54>
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	6a1b      	ldr	r3, [r3, #32]
 8001f60:	60fb      	str	r3, [r7, #12]
 8001f62:	68fb      	ldr	r3, [r7, #12]
 8001f64:	881b      	ldrh	r3, [r3, #0]
 8001f66:	461a      	mov	r2, r3
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001f70:	605a      	str	r2, [r3, #4]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	691b      	ldr	r3, [r3, #16]
 8001f76:	2b00      	cmp	r3, #0
 8001f78:	d105      	bne.n	8001f86 <UART_Transmit_IT+0x48>
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	6a1b      	ldr	r3, [r3, #32]
 8001f7e:	1c9a      	adds	r2, r3, #2
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	621a      	str	r2, [r3, #32]
 8001f84:	e00e      	b.n	8001fa4 <UART_Transmit_IT+0x66>
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	6a1b      	ldr	r3, [r3, #32]
 8001f8a:	1c5a      	adds	r2, r3, #1
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	621a      	str	r2, [r3, #32]
 8001f90:	e008      	b.n	8001fa4 <UART_Transmit_IT+0x66>
 8001f92:	687b      	ldr	r3, [r7, #4]
 8001f94:	6a1b      	ldr	r3, [r3, #32]
 8001f96:	1c59      	adds	r1, r3, #1
 8001f98:	687a      	ldr	r2, [r7, #4]
 8001f9a:	6211      	str	r1, [r2, #32]
 8001f9c:	781a      	ldrb	r2, [r3, #0]
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	605a      	str	r2, [r3, #4]
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8001fa8:	b29b      	uxth	r3, r3
 8001faa:	3b01      	subs	r3, #1
 8001fac:	b29b      	uxth	r3, r3
 8001fae:	687a      	ldr	r2, [r7, #4]
 8001fb0:	4619      	mov	r1, r3
 8001fb2:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8001fb4:	2b00      	cmp	r3, #0
 8001fb6:	d10f      	bne.n	8001fd8 <UART_Transmit_IT+0x9a>
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	68da      	ldr	r2, [r3, #12]
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8001fc6:	60da      	str	r2, [r3, #12]
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	68da      	ldr	r2, [r3, #12]
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001fd6:	60da      	str	r2, [r3, #12]
 8001fd8:	2300      	movs	r3, #0
 8001fda:	e000      	b.n	8001fde <UART_Transmit_IT+0xa0>
 8001fdc:	2302      	movs	r3, #2
 8001fde:	4618      	mov	r0, r3
 8001fe0:	3714      	adds	r7, #20
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	bc80      	pop	{r7}
 8001fe6:	4770      	bx	lr

08001fe8 <UART_EndTransmit_IT>:
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	b082      	sub	sp, #8
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	6078      	str	r0, [r7, #4]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	68da      	ldr	r2, [r3, #12]
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001ffe:	60da      	str	r2, [r3, #12]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	2220      	movs	r2, #32
 8002004:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8002008:	6878      	ldr	r0, [r7, #4]
 800200a:	f7ff ff55 	bl	8001eb8 <HAL_UART_TxCpltCallback>
 800200e:	2300      	movs	r3, #0
 8002010:	4618      	mov	r0, r3
 8002012:	3708      	adds	r7, #8
 8002014:	46bd      	mov	sp, r7
 8002016:	bd80      	pop	{r7, pc}

08002018 <UART_Receive_IT>:
 8002018:	b580      	push	{r7, lr}
 800201a:	b084      	sub	sp, #16
 800201c:	af00      	add	r7, sp, #0
 800201e:	6078      	str	r0, [r7, #4]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8002026:	b2db      	uxtb	r3, r3
 8002028:	2b22      	cmp	r3, #34	@ 0x22
 800202a:	d171      	bne.n	8002110 <UART_Receive_IT+0xf8>
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	689b      	ldr	r3, [r3, #8]
 8002030:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002034:	d123      	bne.n	800207e <UART_Receive_IT+0x66>
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800203a:	60fb      	str	r3, [r7, #12]
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	691b      	ldr	r3, [r3, #16]
 8002040:	2b00      	cmp	r3, #0
 8002042:	d10e      	bne.n	8002062 <UART_Receive_IT+0x4a>
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	685b      	ldr	r3, [r3, #4]
 800204a:	b29b      	uxth	r3, r3
 800204c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002050:	b29a      	uxth	r2, r3
 8002052:	68fb      	ldr	r3, [r7, #12]
 8002054:	801a      	strh	r2, [r3, #0]
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800205a:	1c9a      	adds	r2, r3, #2
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002060:	e029      	b.n	80020b6 <UART_Receive_IT+0x9e>
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	685b      	ldr	r3, [r3, #4]
 8002068:	b29b      	uxth	r3, r3
 800206a:	b2db      	uxtb	r3, r3
 800206c:	b29a      	uxth	r2, r3
 800206e:	68fb      	ldr	r3, [r7, #12]
 8002070:	801a      	strh	r2, [r3, #0]
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002076:	1c5a      	adds	r2, r3, #1
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	629a      	str	r2, [r3, #40]	@ 0x28
 800207c:	e01b      	b.n	80020b6 <UART_Receive_IT+0x9e>
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	691b      	ldr	r3, [r3, #16]
 8002082:	2b00      	cmp	r3, #0
 8002084:	d10a      	bne.n	800209c <UART_Receive_IT+0x84>
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	6858      	ldr	r0, [r3, #4]
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002090:	1c59      	adds	r1, r3, #1
 8002092:	687a      	ldr	r2, [r7, #4]
 8002094:	6291      	str	r1, [r2, #40]	@ 0x28
 8002096:	b2c2      	uxtb	r2, r0
 8002098:	701a      	strb	r2, [r3, #0]
 800209a:	e00c      	b.n	80020b6 <UART_Receive_IT+0x9e>
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	685b      	ldr	r3, [r3, #4]
 80020a2:	b2da      	uxtb	r2, r3
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80020a8:	1c58      	adds	r0, r3, #1
 80020aa:	6879      	ldr	r1, [r7, #4]
 80020ac:	6288      	str	r0, [r1, #40]	@ 0x28
 80020ae:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80020b2:	b2d2      	uxtb	r2, r2
 80020b4:	701a      	strb	r2, [r3, #0]
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80020ba:	b29b      	uxth	r3, r3
 80020bc:	3b01      	subs	r3, #1
 80020be:	b29b      	uxth	r3, r3
 80020c0:	687a      	ldr	r2, [r7, #4]
 80020c2:	4619      	mov	r1, r3
 80020c4:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d120      	bne.n	800210c <UART_Receive_IT+0xf4>
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	68da      	ldr	r2, [r3, #12]
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	f022 0220 	bic.w	r2, r2, #32
 80020d8:	60da      	str	r2, [r3, #12]
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	68da      	ldr	r2, [r3, #12]
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80020e8:	60da      	str	r2, [r3, #12]
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	695a      	ldr	r2, [r3, #20]
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	681b      	ldr	r3, [r3, #0]
 80020f4:	f022 0201 	bic.w	r2, r2, #1
 80020f8:	615a      	str	r2, [r3, #20]
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	2220      	movs	r2, #32
 80020fe:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8002102:	6878      	ldr	r0, [r7, #4]
 8002104:	f7fe fa2c 	bl	8000560 <HAL_UART_RxCpltCallback>
 8002108:	2300      	movs	r3, #0
 800210a:	e002      	b.n	8002112 <UART_Receive_IT+0xfa>
 800210c:	2300      	movs	r3, #0
 800210e:	e000      	b.n	8002112 <UART_Receive_IT+0xfa>
 8002110:	2302      	movs	r3, #2
 8002112:	4618      	mov	r0, r3
 8002114:	3710      	adds	r7, #16
 8002116:	46bd      	mov	sp, r7
 8002118:	bd80      	pop	{r7, pc}
	...

0800211c <UART_SetConfig>:
 800211c:	b580      	push	{r7, lr}
 800211e:	b084      	sub	sp, #16
 8002120:	af00      	add	r7, sp, #0
 8002122:	6078      	str	r0, [r7, #4]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	691b      	ldr	r3, [r3, #16]
 800212a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	68da      	ldr	r2, [r3, #12]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	430a      	orrs	r2, r1
 8002138:	611a      	str	r2, [r3, #16]
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	689a      	ldr	r2, [r3, #8]
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	691b      	ldr	r3, [r3, #16]
 8002142:	431a      	orrs	r2, r3
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	695b      	ldr	r3, [r3, #20]
 8002148:	4313      	orrs	r3, r2
 800214a:	60fb      	str	r3, [r7, #12]
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	68db      	ldr	r3, [r3, #12]
 8002152:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8002156:	f023 030c 	bic.w	r3, r3, #12
 800215a:	687a      	ldr	r2, [r7, #4]
 800215c:	6812      	ldr	r2, [r2, #0]
 800215e:	68f9      	ldr	r1, [r7, #12]
 8002160:	430b      	orrs	r3, r1
 8002162:	60d3      	str	r3, [r2, #12]
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	681b      	ldr	r3, [r3, #0]
 8002168:	695b      	ldr	r3, [r3, #20]
 800216a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	699a      	ldr	r2, [r3, #24]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	681b      	ldr	r3, [r3, #0]
 8002176:	430a      	orrs	r2, r1
 8002178:	615a      	str	r2, [r3, #20]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	4a52      	ldr	r2, [pc, #328]	@ (80022c8 <UART_SetConfig+0x1ac>)
 8002180:	4293      	cmp	r3, r2
 8002182:	d14e      	bne.n	8002222 <UART_SetConfig+0x106>
 8002184:	f7ff fc86 	bl	8001a94 <HAL_RCC_GetPCLK2Freq>
 8002188:	60b8      	str	r0, [r7, #8]
 800218a:	68ba      	ldr	r2, [r7, #8]
 800218c:	4613      	mov	r3, r2
 800218e:	009b      	lsls	r3, r3, #2
 8002190:	4413      	add	r3, r2
 8002192:	009a      	lsls	r2, r3, #2
 8002194:	441a      	add	r2, r3
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	685b      	ldr	r3, [r3, #4]
 800219a:	009b      	lsls	r3, r3, #2
 800219c:	fbb2 f3f3 	udiv	r3, r2, r3
 80021a0:	4a4a      	ldr	r2, [pc, #296]	@ (80022cc <UART_SetConfig+0x1b0>)
 80021a2:	fba2 2303 	umull	r2, r3, r2, r3
 80021a6:	095b      	lsrs	r3, r3, #5
 80021a8:	0119      	lsls	r1, r3, #4
 80021aa:	68ba      	ldr	r2, [r7, #8]
 80021ac:	4613      	mov	r3, r2
 80021ae:	009b      	lsls	r3, r3, #2
 80021b0:	4413      	add	r3, r2
 80021b2:	009a      	lsls	r2, r3, #2
 80021b4:	441a      	add	r2, r3
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	685b      	ldr	r3, [r3, #4]
 80021ba:	009b      	lsls	r3, r3, #2
 80021bc:	fbb2 f2f3 	udiv	r2, r2, r3
 80021c0:	4b42      	ldr	r3, [pc, #264]	@ (80022cc <UART_SetConfig+0x1b0>)
 80021c2:	fba3 0302 	umull	r0, r3, r3, r2
 80021c6:	095b      	lsrs	r3, r3, #5
 80021c8:	2064      	movs	r0, #100	@ 0x64
 80021ca:	fb00 f303 	mul.w	r3, r0, r3
 80021ce:	1ad3      	subs	r3, r2, r3
 80021d0:	011b      	lsls	r3, r3, #4
 80021d2:	3332      	adds	r3, #50	@ 0x32
 80021d4:	4a3d      	ldr	r2, [pc, #244]	@ (80022cc <UART_SetConfig+0x1b0>)
 80021d6:	fba2 2303 	umull	r2, r3, r2, r3
 80021da:	095b      	lsrs	r3, r3, #5
 80021dc:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80021e0:	4419      	add	r1, r3
 80021e2:	68ba      	ldr	r2, [r7, #8]
 80021e4:	4613      	mov	r3, r2
 80021e6:	009b      	lsls	r3, r3, #2
 80021e8:	4413      	add	r3, r2
 80021ea:	009a      	lsls	r2, r3, #2
 80021ec:	441a      	add	r2, r3
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	685b      	ldr	r3, [r3, #4]
 80021f2:	009b      	lsls	r3, r3, #2
 80021f4:	fbb2 f2f3 	udiv	r2, r2, r3
 80021f8:	4b34      	ldr	r3, [pc, #208]	@ (80022cc <UART_SetConfig+0x1b0>)
 80021fa:	fba3 0302 	umull	r0, r3, r3, r2
 80021fe:	095b      	lsrs	r3, r3, #5
 8002200:	2064      	movs	r0, #100	@ 0x64
 8002202:	fb00 f303 	mul.w	r3, r0, r3
 8002206:	1ad3      	subs	r3, r2, r3
 8002208:	011b      	lsls	r3, r3, #4
 800220a:	3332      	adds	r3, #50	@ 0x32
 800220c:	4a2f      	ldr	r2, [pc, #188]	@ (80022cc <UART_SetConfig+0x1b0>)
 800220e:	fba2 2303 	umull	r2, r3, r2, r3
 8002212:	095b      	lsrs	r3, r3, #5
 8002214:	f003 020f 	and.w	r2, r3, #15
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	681b      	ldr	r3, [r3, #0]
 800221c:	440a      	add	r2, r1
 800221e:	609a      	str	r2, [r3, #8]
 8002220:	e04d      	b.n	80022be <UART_SetConfig+0x1a2>
 8002222:	f7ff fc23 	bl	8001a6c <HAL_RCC_GetPCLK1Freq>
 8002226:	60b8      	str	r0, [r7, #8]
 8002228:	68ba      	ldr	r2, [r7, #8]
 800222a:	4613      	mov	r3, r2
 800222c:	009b      	lsls	r3, r3, #2
 800222e:	4413      	add	r3, r2
 8002230:	009a      	lsls	r2, r3, #2
 8002232:	441a      	add	r2, r3
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	685b      	ldr	r3, [r3, #4]
 8002238:	009b      	lsls	r3, r3, #2
 800223a:	fbb2 f3f3 	udiv	r3, r2, r3
 800223e:	4a23      	ldr	r2, [pc, #140]	@ (80022cc <UART_SetConfig+0x1b0>)
 8002240:	fba2 2303 	umull	r2, r3, r2, r3
 8002244:	095b      	lsrs	r3, r3, #5
 8002246:	0119      	lsls	r1, r3, #4
 8002248:	68ba      	ldr	r2, [r7, #8]
 800224a:	4613      	mov	r3, r2
 800224c:	009b      	lsls	r3, r3, #2
 800224e:	4413      	add	r3, r2
 8002250:	009a      	lsls	r2, r3, #2
 8002252:	441a      	add	r2, r3
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	685b      	ldr	r3, [r3, #4]
 8002258:	009b      	lsls	r3, r3, #2
 800225a:	fbb2 f2f3 	udiv	r2, r2, r3
 800225e:	4b1b      	ldr	r3, [pc, #108]	@ (80022cc <UART_SetConfig+0x1b0>)
 8002260:	fba3 0302 	umull	r0, r3, r3, r2
 8002264:	095b      	lsrs	r3, r3, #5
 8002266:	2064      	movs	r0, #100	@ 0x64
 8002268:	fb00 f303 	mul.w	r3, r0, r3
 800226c:	1ad3      	subs	r3, r2, r3
 800226e:	011b      	lsls	r3, r3, #4
 8002270:	3332      	adds	r3, #50	@ 0x32
 8002272:	4a16      	ldr	r2, [pc, #88]	@ (80022cc <UART_SetConfig+0x1b0>)
 8002274:	fba2 2303 	umull	r2, r3, r2, r3
 8002278:	095b      	lsrs	r3, r3, #5
 800227a:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800227e:	4419      	add	r1, r3
 8002280:	68ba      	ldr	r2, [r7, #8]
 8002282:	4613      	mov	r3, r2
 8002284:	009b      	lsls	r3, r3, #2
 8002286:	4413      	add	r3, r2
 8002288:	009a      	lsls	r2, r3, #2
 800228a:	441a      	add	r2, r3
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	685b      	ldr	r3, [r3, #4]
 8002290:	009b      	lsls	r3, r3, #2
 8002292:	fbb2 f2f3 	udiv	r2, r2, r3
 8002296:	4b0d      	ldr	r3, [pc, #52]	@ (80022cc <UART_SetConfig+0x1b0>)
 8002298:	fba3 0302 	umull	r0, r3, r3, r2
 800229c:	095b      	lsrs	r3, r3, #5
 800229e:	2064      	movs	r0, #100	@ 0x64
 80022a0:	fb00 f303 	mul.w	r3, r0, r3
 80022a4:	1ad3      	subs	r3, r2, r3
 80022a6:	011b      	lsls	r3, r3, #4
 80022a8:	3332      	adds	r3, #50	@ 0x32
 80022aa:	4a08      	ldr	r2, [pc, #32]	@ (80022cc <UART_SetConfig+0x1b0>)
 80022ac:	fba2 2303 	umull	r2, r3, r2, r3
 80022b0:	095b      	lsrs	r3, r3, #5
 80022b2:	f003 020f 	and.w	r2, r3, #15
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	440a      	add	r2, r1
 80022bc:	609a      	str	r2, [r3, #8]
 80022be:	bf00      	nop
 80022c0:	3710      	adds	r7, #16
 80022c2:	46bd      	mov	sp, r7
 80022c4:	bd80      	pop	{r7, pc}
 80022c6:	bf00      	nop
 80022c8:	40013800 	.word	0x40013800
 80022cc:	51eb851f 	.word	0x51eb851f

080022d0 <sniprintf>:
 80022d0:	b40c      	push	{r2, r3}
 80022d2:	b530      	push	{r4, r5, lr}
 80022d4:	4b17      	ldr	r3, [pc, #92]	@ (8002334 <sniprintf+0x64>)
 80022d6:	1e0c      	subs	r4, r1, #0
 80022d8:	681d      	ldr	r5, [r3, #0]
 80022da:	b09d      	sub	sp, #116	@ 0x74
 80022dc:	da08      	bge.n	80022f0 <sniprintf+0x20>
 80022de:	238b      	movs	r3, #139	@ 0x8b
 80022e0:	f04f 30ff 	mov.w	r0, #4294967295
 80022e4:	602b      	str	r3, [r5, #0]
 80022e6:	b01d      	add	sp, #116	@ 0x74
 80022e8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80022ec:	b002      	add	sp, #8
 80022ee:	4770      	bx	lr
 80022f0:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80022f4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80022f8:	bf0c      	ite	eq
 80022fa:	4623      	moveq	r3, r4
 80022fc:	f104 33ff 	addne.w	r3, r4, #4294967295
 8002300:	9304      	str	r3, [sp, #16]
 8002302:	9307      	str	r3, [sp, #28]
 8002304:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002308:	9002      	str	r0, [sp, #8]
 800230a:	9006      	str	r0, [sp, #24]
 800230c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8002310:	4628      	mov	r0, r5
 8002312:	ab21      	add	r3, sp, #132	@ 0x84
 8002314:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8002316:	a902      	add	r1, sp, #8
 8002318:	9301      	str	r3, [sp, #4]
 800231a:	f000 f993 	bl	8002644 <_svfiprintf_r>
 800231e:	1c43      	adds	r3, r0, #1
 8002320:	bfbc      	itt	lt
 8002322:	238b      	movlt	r3, #139	@ 0x8b
 8002324:	602b      	strlt	r3, [r5, #0]
 8002326:	2c00      	cmp	r4, #0
 8002328:	d0dd      	beq.n	80022e6 <sniprintf+0x16>
 800232a:	2200      	movs	r2, #0
 800232c:	9b02      	ldr	r3, [sp, #8]
 800232e:	701a      	strb	r2, [r3, #0]
 8002330:	e7d9      	b.n	80022e6 <sniprintf+0x16>
 8002332:	bf00      	nop
 8002334:	2000000c 	.word	0x2000000c

08002338 <memset>:
 8002338:	4603      	mov	r3, r0
 800233a:	4402      	add	r2, r0
 800233c:	4293      	cmp	r3, r2
 800233e:	d100      	bne.n	8002342 <memset+0xa>
 8002340:	4770      	bx	lr
 8002342:	f803 1b01 	strb.w	r1, [r3], #1
 8002346:	e7f9      	b.n	800233c <memset+0x4>

08002348 <__errno>:
 8002348:	4b01      	ldr	r3, [pc, #4]	@ (8002350 <__errno+0x8>)
 800234a:	6818      	ldr	r0, [r3, #0]
 800234c:	4770      	bx	lr
 800234e:	bf00      	nop
 8002350:	2000000c 	.word	0x2000000c

08002354 <__libc_init_array>:
 8002354:	b570      	push	{r4, r5, r6, lr}
 8002356:	2600      	movs	r6, #0
 8002358:	4d0c      	ldr	r5, [pc, #48]	@ (800238c <__libc_init_array+0x38>)
 800235a:	4c0d      	ldr	r4, [pc, #52]	@ (8002390 <__libc_init_array+0x3c>)
 800235c:	1b64      	subs	r4, r4, r5
 800235e:	10a4      	asrs	r4, r4, #2
 8002360:	42a6      	cmp	r6, r4
 8002362:	d109      	bne.n	8002378 <__libc_init_array+0x24>
 8002364:	f000 fc78 	bl	8002c58 <_init>
 8002368:	2600      	movs	r6, #0
 800236a:	4d0a      	ldr	r5, [pc, #40]	@ (8002394 <__libc_init_array+0x40>)
 800236c:	4c0a      	ldr	r4, [pc, #40]	@ (8002398 <__libc_init_array+0x44>)
 800236e:	1b64      	subs	r4, r4, r5
 8002370:	10a4      	asrs	r4, r4, #2
 8002372:	42a6      	cmp	r6, r4
 8002374:	d105      	bne.n	8002382 <__libc_init_array+0x2e>
 8002376:	bd70      	pop	{r4, r5, r6, pc}
 8002378:	f855 3b04 	ldr.w	r3, [r5], #4
 800237c:	4798      	blx	r3
 800237e:	3601      	adds	r6, #1
 8002380:	e7ee      	b.n	8002360 <__libc_init_array+0xc>
 8002382:	f855 3b04 	ldr.w	r3, [r5], #4
 8002386:	4798      	blx	r3
 8002388:	3601      	adds	r6, #1
 800238a:	e7f2      	b.n	8002372 <__libc_init_array+0x1e>
 800238c:	08002cf4 	.word	0x08002cf4
 8002390:	08002cf4 	.word	0x08002cf4
 8002394:	08002cf4 	.word	0x08002cf4
 8002398:	08002cf8 	.word	0x08002cf8

0800239c <__retarget_lock_acquire_recursive>:
 800239c:	4770      	bx	lr

0800239e <__retarget_lock_release_recursive>:
 800239e:	4770      	bx	lr

080023a0 <_free_r>:
 80023a0:	b538      	push	{r3, r4, r5, lr}
 80023a2:	4605      	mov	r5, r0
 80023a4:	2900      	cmp	r1, #0
 80023a6:	d040      	beq.n	800242a <_free_r+0x8a>
 80023a8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80023ac:	1f0c      	subs	r4, r1, #4
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	bfb8      	it	lt
 80023b2:	18e4      	addlt	r4, r4, r3
 80023b4:	f000 f8de 	bl	8002574 <__malloc_lock>
 80023b8:	4a1c      	ldr	r2, [pc, #112]	@ (800242c <_free_r+0x8c>)
 80023ba:	6813      	ldr	r3, [r2, #0]
 80023bc:	b933      	cbnz	r3, 80023cc <_free_r+0x2c>
 80023be:	6063      	str	r3, [r4, #4]
 80023c0:	6014      	str	r4, [r2, #0]
 80023c2:	4628      	mov	r0, r5
 80023c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80023c8:	f000 b8da 	b.w	8002580 <__malloc_unlock>
 80023cc:	42a3      	cmp	r3, r4
 80023ce:	d908      	bls.n	80023e2 <_free_r+0x42>
 80023d0:	6820      	ldr	r0, [r4, #0]
 80023d2:	1821      	adds	r1, r4, r0
 80023d4:	428b      	cmp	r3, r1
 80023d6:	bf01      	itttt	eq
 80023d8:	6819      	ldreq	r1, [r3, #0]
 80023da:	685b      	ldreq	r3, [r3, #4]
 80023dc:	1809      	addeq	r1, r1, r0
 80023de:	6021      	streq	r1, [r4, #0]
 80023e0:	e7ed      	b.n	80023be <_free_r+0x1e>
 80023e2:	461a      	mov	r2, r3
 80023e4:	685b      	ldr	r3, [r3, #4]
 80023e6:	b10b      	cbz	r3, 80023ec <_free_r+0x4c>
 80023e8:	42a3      	cmp	r3, r4
 80023ea:	d9fa      	bls.n	80023e2 <_free_r+0x42>
 80023ec:	6811      	ldr	r1, [r2, #0]
 80023ee:	1850      	adds	r0, r2, r1
 80023f0:	42a0      	cmp	r0, r4
 80023f2:	d10b      	bne.n	800240c <_free_r+0x6c>
 80023f4:	6820      	ldr	r0, [r4, #0]
 80023f6:	4401      	add	r1, r0
 80023f8:	1850      	adds	r0, r2, r1
 80023fa:	4283      	cmp	r3, r0
 80023fc:	6011      	str	r1, [r2, #0]
 80023fe:	d1e0      	bne.n	80023c2 <_free_r+0x22>
 8002400:	6818      	ldr	r0, [r3, #0]
 8002402:	685b      	ldr	r3, [r3, #4]
 8002404:	4408      	add	r0, r1
 8002406:	6010      	str	r0, [r2, #0]
 8002408:	6053      	str	r3, [r2, #4]
 800240a:	e7da      	b.n	80023c2 <_free_r+0x22>
 800240c:	d902      	bls.n	8002414 <_free_r+0x74>
 800240e:	230c      	movs	r3, #12
 8002410:	602b      	str	r3, [r5, #0]
 8002412:	e7d6      	b.n	80023c2 <_free_r+0x22>
 8002414:	6820      	ldr	r0, [r4, #0]
 8002416:	1821      	adds	r1, r4, r0
 8002418:	428b      	cmp	r3, r1
 800241a:	bf01      	itttt	eq
 800241c:	6819      	ldreq	r1, [r3, #0]
 800241e:	685b      	ldreq	r3, [r3, #4]
 8002420:	1809      	addeq	r1, r1, r0
 8002422:	6021      	streq	r1, [r4, #0]
 8002424:	6063      	str	r3, [r4, #4]
 8002426:	6054      	str	r4, [r2, #4]
 8002428:	e7cb      	b.n	80023c2 <_free_r+0x22>
 800242a:	bd38      	pop	{r3, r4, r5, pc}
 800242c:	200003e8 	.word	0x200003e8

08002430 <sbrk_aligned>:
 8002430:	b570      	push	{r4, r5, r6, lr}
 8002432:	4e0f      	ldr	r6, [pc, #60]	@ (8002470 <sbrk_aligned+0x40>)
 8002434:	460c      	mov	r4, r1
 8002436:	6831      	ldr	r1, [r6, #0]
 8002438:	4605      	mov	r5, r0
 800243a:	b911      	cbnz	r1, 8002442 <sbrk_aligned+0x12>
 800243c:	f000 fbaa 	bl	8002b94 <_sbrk_r>
 8002440:	6030      	str	r0, [r6, #0]
 8002442:	4621      	mov	r1, r4
 8002444:	4628      	mov	r0, r5
 8002446:	f000 fba5 	bl	8002b94 <_sbrk_r>
 800244a:	1c43      	adds	r3, r0, #1
 800244c:	d103      	bne.n	8002456 <sbrk_aligned+0x26>
 800244e:	f04f 34ff 	mov.w	r4, #4294967295
 8002452:	4620      	mov	r0, r4
 8002454:	bd70      	pop	{r4, r5, r6, pc}
 8002456:	1cc4      	adds	r4, r0, #3
 8002458:	f024 0403 	bic.w	r4, r4, #3
 800245c:	42a0      	cmp	r0, r4
 800245e:	d0f8      	beq.n	8002452 <sbrk_aligned+0x22>
 8002460:	1a21      	subs	r1, r4, r0
 8002462:	4628      	mov	r0, r5
 8002464:	f000 fb96 	bl	8002b94 <_sbrk_r>
 8002468:	3001      	adds	r0, #1
 800246a:	d1f2      	bne.n	8002452 <sbrk_aligned+0x22>
 800246c:	e7ef      	b.n	800244e <sbrk_aligned+0x1e>
 800246e:	bf00      	nop
 8002470:	200003e4 	.word	0x200003e4

08002474 <_malloc_r>:
 8002474:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002478:	1ccd      	adds	r5, r1, #3
 800247a:	f025 0503 	bic.w	r5, r5, #3
 800247e:	3508      	adds	r5, #8
 8002480:	2d0c      	cmp	r5, #12
 8002482:	bf38      	it	cc
 8002484:	250c      	movcc	r5, #12
 8002486:	2d00      	cmp	r5, #0
 8002488:	4606      	mov	r6, r0
 800248a:	db01      	blt.n	8002490 <_malloc_r+0x1c>
 800248c:	42a9      	cmp	r1, r5
 800248e:	d904      	bls.n	800249a <_malloc_r+0x26>
 8002490:	230c      	movs	r3, #12
 8002492:	6033      	str	r3, [r6, #0]
 8002494:	2000      	movs	r0, #0
 8002496:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800249a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002570 <_malloc_r+0xfc>
 800249e:	f000 f869 	bl	8002574 <__malloc_lock>
 80024a2:	f8d8 3000 	ldr.w	r3, [r8]
 80024a6:	461c      	mov	r4, r3
 80024a8:	bb44      	cbnz	r4, 80024fc <_malloc_r+0x88>
 80024aa:	4629      	mov	r1, r5
 80024ac:	4630      	mov	r0, r6
 80024ae:	f7ff ffbf 	bl	8002430 <sbrk_aligned>
 80024b2:	1c43      	adds	r3, r0, #1
 80024b4:	4604      	mov	r4, r0
 80024b6:	d158      	bne.n	800256a <_malloc_r+0xf6>
 80024b8:	f8d8 4000 	ldr.w	r4, [r8]
 80024bc:	4627      	mov	r7, r4
 80024be:	2f00      	cmp	r7, #0
 80024c0:	d143      	bne.n	800254a <_malloc_r+0xd6>
 80024c2:	2c00      	cmp	r4, #0
 80024c4:	d04b      	beq.n	800255e <_malloc_r+0xea>
 80024c6:	6823      	ldr	r3, [r4, #0]
 80024c8:	4639      	mov	r1, r7
 80024ca:	4630      	mov	r0, r6
 80024cc:	eb04 0903 	add.w	r9, r4, r3
 80024d0:	f000 fb60 	bl	8002b94 <_sbrk_r>
 80024d4:	4581      	cmp	r9, r0
 80024d6:	d142      	bne.n	800255e <_malloc_r+0xea>
 80024d8:	6821      	ldr	r1, [r4, #0]
 80024da:	4630      	mov	r0, r6
 80024dc:	1a6d      	subs	r5, r5, r1
 80024de:	4629      	mov	r1, r5
 80024e0:	f7ff ffa6 	bl	8002430 <sbrk_aligned>
 80024e4:	3001      	adds	r0, #1
 80024e6:	d03a      	beq.n	800255e <_malloc_r+0xea>
 80024e8:	6823      	ldr	r3, [r4, #0]
 80024ea:	442b      	add	r3, r5
 80024ec:	6023      	str	r3, [r4, #0]
 80024ee:	f8d8 3000 	ldr.w	r3, [r8]
 80024f2:	685a      	ldr	r2, [r3, #4]
 80024f4:	bb62      	cbnz	r2, 8002550 <_malloc_r+0xdc>
 80024f6:	f8c8 7000 	str.w	r7, [r8]
 80024fa:	e00f      	b.n	800251c <_malloc_r+0xa8>
 80024fc:	6822      	ldr	r2, [r4, #0]
 80024fe:	1b52      	subs	r2, r2, r5
 8002500:	d420      	bmi.n	8002544 <_malloc_r+0xd0>
 8002502:	2a0b      	cmp	r2, #11
 8002504:	d917      	bls.n	8002536 <_malloc_r+0xc2>
 8002506:	1961      	adds	r1, r4, r5
 8002508:	42a3      	cmp	r3, r4
 800250a:	6025      	str	r5, [r4, #0]
 800250c:	bf18      	it	ne
 800250e:	6059      	strne	r1, [r3, #4]
 8002510:	6863      	ldr	r3, [r4, #4]
 8002512:	bf08      	it	eq
 8002514:	f8c8 1000 	streq.w	r1, [r8]
 8002518:	5162      	str	r2, [r4, r5]
 800251a:	604b      	str	r3, [r1, #4]
 800251c:	4630      	mov	r0, r6
 800251e:	f000 f82f 	bl	8002580 <__malloc_unlock>
 8002522:	f104 000b 	add.w	r0, r4, #11
 8002526:	1d23      	adds	r3, r4, #4
 8002528:	f020 0007 	bic.w	r0, r0, #7
 800252c:	1ac2      	subs	r2, r0, r3
 800252e:	bf1c      	itt	ne
 8002530:	1a1b      	subne	r3, r3, r0
 8002532:	50a3      	strne	r3, [r4, r2]
 8002534:	e7af      	b.n	8002496 <_malloc_r+0x22>
 8002536:	6862      	ldr	r2, [r4, #4]
 8002538:	42a3      	cmp	r3, r4
 800253a:	bf0c      	ite	eq
 800253c:	f8c8 2000 	streq.w	r2, [r8]
 8002540:	605a      	strne	r2, [r3, #4]
 8002542:	e7eb      	b.n	800251c <_malloc_r+0xa8>
 8002544:	4623      	mov	r3, r4
 8002546:	6864      	ldr	r4, [r4, #4]
 8002548:	e7ae      	b.n	80024a8 <_malloc_r+0x34>
 800254a:	463c      	mov	r4, r7
 800254c:	687f      	ldr	r7, [r7, #4]
 800254e:	e7b6      	b.n	80024be <_malloc_r+0x4a>
 8002550:	461a      	mov	r2, r3
 8002552:	685b      	ldr	r3, [r3, #4]
 8002554:	42a3      	cmp	r3, r4
 8002556:	d1fb      	bne.n	8002550 <_malloc_r+0xdc>
 8002558:	2300      	movs	r3, #0
 800255a:	6053      	str	r3, [r2, #4]
 800255c:	e7de      	b.n	800251c <_malloc_r+0xa8>
 800255e:	230c      	movs	r3, #12
 8002560:	4630      	mov	r0, r6
 8002562:	6033      	str	r3, [r6, #0]
 8002564:	f000 f80c 	bl	8002580 <__malloc_unlock>
 8002568:	e794      	b.n	8002494 <_malloc_r+0x20>
 800256a:	6005      	str	r5, [r0, #0]
 800256c:	e7d6      	b.n	800251c <_malloc_r+0xa8>
 800256e:	bf00      	nop
 8002570:	200003e8 	.word	0x200003e8

08002574 <__malloc_lock>:
 8002574:	4801      	ldr	r0, [pc, #4]	@ (800257c <__malloc_lock+0x8>)
 8002576:	f7ff bf11 	b.w	800239c <__retarget_lock_acquire_recursive>
 800257a:	bf00      	nop
 800257c:	200003e0 	.word	0x200003e0

08002580 <__malloc_unlock>:
 8002580:	4801      	ldr	r0, [pc, #4]	@ (8002588 <__malloc_unlock+0x8>)
 8002582:	f7ff bf0c 	b.w	800239e <__retarget_lock_release_recursive>
 8002586:	bf00      	nop
 8002588:	200003e0 	.word	0x200003e0

0800258c <__ssputs_r>:
 800258c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002590:	461f      	mov	r7, r3
 8002592:	688e      	ldr	r6, [r1, #8]
 8002594:	4682      	mov	sl, r0
 8002596:	42be      	cmp	r6, r7
 8002598:	460c      	mov	r4, r1
 800259a:	4690      	mov	r8, r2
 800259c:	680b      	ldr	r3, [r1, #0]
 800259e:	d82d      	bhi.n	80025fc <__ssputs_r+0x70>
 80025a0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80025a4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80025a8:	d026      	beq.n	80025f8 <__ssputs_r+0x6c>
 80025aa:	6965      	ldr	r5, [r4, #20]
 80025ac:	6909      	ldr	r1, [r1, #16]
 80025ae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80025b2:	eba3 0901 	sub.w	r9, r3, r1
 80025b6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80025ba:	1c7b      	adds	r3, r7, #1
 80025bc:	444b      	add	r3, r9
 80025be:	106d      	asrs	r5, r5, #1
 80025c0:	429d      	cmp	r5, r3
 80025c2:	bf38      	it	cc
 80025c4:	461d      	movcc	r5, r3
 80025c6:	0553      	lsls	r3, r2, #21
 80025c8:	d527      	bpl.n	800261a <__ssputs_r+0x8e>
 80025ca:	4629      	mov	r1, r5
 80025cc:	f7ff ff52 	bl	8002474 <_malloc_r>
 80025d0:	4606      	mov	r6, r0
 80025d2:	b360      	cbz	r0, 800262e <__ssputs_r+0xa2>
 80025d4:	464a      	mov	r2, r9
 80025d6:	6921      	ldr	r1, [r4, #16]
 80025d8:	f000 fafa 	bl	8002bd0 <memcpy>
 80025dc:	89a3      	ldrh	r3, [r4, #12]
 80025de:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80025e2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80025e6:	81a3      	strh	r3, [r4, #12]
 80025e8:	6126      	str	r6, [r4, #16]
 80025ea:	444e      	add	r6, r9
 80025ec:	6026      	str	r6, [r4, #0]
 80025ee:	463e      	mov	r6, r7
 80025f0:	6165      	str	r5, [r4, #20]
 80025f2:	eba5 0509 	sub.w	r5, r5, r9
 80025f6:	60a5      	str	r5, [r4, #8]
 80025f8:	42be      	cmp	r6, r7
 80025fa:	d900      	bls.n	80025fe <__ssputs_r+0x72>
 80025fc:	463e      	mov	r6, r7
 80025fe:	4632      	mov	r2, r6
 8002600:	4641      	mov	r1, r8
 8002602:	6820      	ldr	r0, [r4, #0]
 8002604:	f000 faac 	bl	8002b60 <memmove>
 8002608:	2000      	movs	r0, #0
 800260a:	68a3      	ldr	r3, [r4, #8]
 800260c:	1b9b      	subs	r3, r3, r6
 800260e:	60a3      	str	r3, [r4, #8]
 8002610:	6823      	ldr	r3, [r4, #0]
 8002612:	4433      	add	r3, r6
 8002614:	6023      	str	r3, [r4, #0]
 8002616:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800261a:	462a      	mov	r2, r5
 800261c:	f000 fae6 	bl	8002bec <_realloc_r>
 8002620:	4606      	mov	r6, r0
 8002622:	2800      	cmp	r0, #0
 8002624:	d1e0      	bne.n	80025e8 <__ssputs_r+0x5c>
 8002626:	4650      	mov	r0, sl
 8002628:	6921      	ldr	r1, [r4, #16]
 800262a:	f7ff feb9 	bl	80023a0 <_free_r>
 800262e:	230c      	movs	r3, #12
 8002630:	f8ca 3000 	str.w	r3, [sl]
 8002634:	89a3      	ldrh	r3, [r4, #12]
 8002636:	f04f 30ff 	mov.w	r0, #4294967295
 800263a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800263e:	81a3      	strh	r3, [r4, #12]
 8002640:	e7e9      	b.n	8002616 <__ssputs_r+0x8a>
	...

08002644 <_svfiprintf_r>:
 8002644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002648:	4698      	mov	r8, r3
 800264a:	898b      	ldrh	r3, [r1, #12]
 800264c:	4607      	mov	r7, r0
 800264e:	061b      	lsls	r3, r3, #24
 8002650:	460d      	mov	r5, r1
 8002652:	4614      	mov	r4, r2
 8002654:	b09d      	sub	sp, #116	@ 0x74
 8002656:	d510      	bpl.n	800267a <_svfiprintf_r+0x36>
 8002658:	690b      	ldr	r3, [r1, #16]
 800265a:	b973      	cbnz	r3, 800267a <_svfiprintf_r+0x36>
 800265c:	2140      	movs	r1, #64	@ 0x40
 800265e:	f7ff ff09 	bl	8002474 <_malloc_r>
 8002662:	6028      	str	r0, [r5, #0]
 8002664:	6128      	str	r0, [r5, #16]
 8002666:	b930      	cbnz	r0, 8002676 <_svfiprintf_r+0x32>
 8002668:	230c      	movs	r3, #12
 800266a:	603b      	str	r3, [r7, #0]
 800266c:	f04f 30ff 	mov.w	r0, #4294967295
 8002670:	b01d      	add	sp, #116	@ 0x74
 8002672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002676:	2340      	movs	r3, #64	@ 0x40
 8002678:	616b      	str	r3, [r5, #20]
 800267a:	2300      	movs	r3, #0
 800267c:	9309      	str	r3, [sp, #36]	@ 0x24
 800267e:	2320      	movs	r3, #32
 8002680:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8002684:	2330      	movs	r3, #48	@ 0x30
 8002686:	f04f 0901 	mov.w	r9, #1
 800268a:	f8cd 800c 	str.w	r8, [sp, #12]
 800268e:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8002828 <_svfiprintf_r+0x1e4>
 8002692:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8002696:	4623      	mov	r3, r4
 8002698:	469a      	mov	sl, r3
 800269a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800269e:	b10a      	cbz	r2, 80026a4 <_svfiprintf_r+0x60>
 80026a0:	2a25      	cmp	r2, #37	@ 0x25
 80026a2:	d1f9      	bne.n	8002698 <_svfiprintf_r+0x54>
 80026a4:	ebba 0b04 	subs.w	fp, sl, r4
 80026a8:	d00b      	beq.n	80026c2 <_svfiprintf_r+0x7e>
 80026aa:	465b      	mov	r3, fp
 80026ac:	4622      	mov	r2, r4
 80026ae:	4629      	mov	r1, r5
 80026b0:	4638      	mov	r0, r7
 80026b2:	f7ff ff6b 	bl	800258c <__ssputs_r>
 80026b6:	3001      	adds	r0, #1
 80026b8:	f000 80a7 	beq.w	800280a <_svfiprintf_r+0x1c6>
 80026bc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80026be:	445a      	add	r2, fp
 80026c0:	9209      	str	r2, [sp, #36]	@ 0x24
 80026c2:	f89a 3000 	ldrb.w	r3, [sl]
 80026c6:	2b00      	cmp	r3, #0
 80026c8:	f000 809f 	beq.w	800280a <_svfiprintf_r+0x1c6>
 80026cc:	2300      	movs	r3, #0
 80026ce:	f04f 32ff 	mov.w	r2, #4294967295
 80026d2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80026d6:	f10a 0a01 	add.w	sl, sl, #1
 80026da:	9304      	str	r3, [sp, #16]
 80026dc:	9307      	str	r3, [sp, #28]
 80026de:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80026e2:	931a      	str	r3, [sp, #104]	@ 0x68
 80026e4:	4654      	mov	r4, sl
 80026e6:	2205      	movs	r2, #5
 80026e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80026ec:	484e      	ldr	r0, [pc, #312]	@ (8002828 <_svfiprintf_r+0x1e4>)
 80026ee:	f000 fa61 	bl	8002bb4 <memchr>
 80026f2:	9a04      	ldr	r2, [sp, #16]
 80026f4:	b9d8      	cbnz	r0, 800272e <_svfiprintf_r+0xea>
 80026f6:	06d0      	lsls	r0, r2, #27
 80026f8:	bf44      	itt	mi
 80026fa:	2320      	movmi	r3, #32
 80026fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8002700:	0711      	lsls	r1, r2, #28
 8002702:	bf44      	itt	mi
 8002704:	232b      	movmi	r3, #43	@ 0x2b
 8002706:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800270a:	f89a 3000 	ldrb.w	r3, [sl]
 800270e:	2b2a      	cmp	r3, #42	@ 0x2a
 8002710:	d015      	beq.n	800273e <_svfiprintf_r+0xfa>
 8002712:	4654      	mov	r4, sl
 8002714:	2000      	movs	r0, #0
 8002716:	f04f 0c0a 	mov.w	ip, #10
 800271a:	9a07      	ldr	r2, [sp, #28]
 800271c:	4621      	mov	r1, r4
 800271e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002722:	3b30      	subs	r3, #48	@ 0x30
 8002724:	2b09      	cmp	r3, #9
 8002726:	d94b      	bls.n	80027c0 <_svfiprintf_r+0x17c>
 8002728:	b1b0      	cbz	r0, 8002758 <_svfiprintf_r+0x114>
 800272a:	9207      	str	r2, [sp, #28]
 800272c:	e014      	b.n	8002758 <_svfiprintf_r+0x114>
 800272e:	eba0 0308 	sub.w	r3, r0, r8
 8002732:	fa09 f303 	lsl.w	r3, r9, r3
 8002736:	4313      	orrs	r3, r2
 8002738:	46a2      	mov	sl, r4
 800273a:	9304      	str	r3, [sp, #16]
 800273c:	e7d2      	b.n	80026e4 <_svfiprintf_r+0xa0>
 800273e:	9b03      	ldr	r3, [sp, #12]
 8002740:	1d19      	adds	r1, r3, #4
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	9103      	str	r1, [sp, #12]
 8002746:	2b00      	cmp	r3, #0
 8002748:	bfbb      	ittet	lt
 800274a:	425b      	neglt	r3, r3
 800274c:	f042 0202 	orrlt.w	r2, r2, #2
 8002750:	9307      	strge	r3, [sp, #28]
 8002752:	9307      	strlt	r3, [sp, #28]
 8002754:	bfb8      	it	lt
 8002756:	9204      	strlt	r2, [sp, #16]
 8002758:	7823      	ldrb	r3, [r4, #0]
 800275a:	2b2e      	cmp	r3, #46	@ 0x2e
 800275c:	d10a      	bne.n	8002774 <_svfiprintf_r+0x130>
 800275e:	7863      	ldrb	r3, [r4, #1]
 8002760:	2b2a      	cmp	r3, #42	@ 0x2a
 8002762:	d132      	bne.n	80027ca <_svfiprintf_r+0x186>
 8002764:	9b03      	ldr	r3, [sp, #12]
 8002766:	3402      	adds	r4, #2
 8002768:	1d1a      	adds	r2, r3, #4
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	9203      	str	r2, [sp, #12]
 800276e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8002772:	9305      	str	r3, [sp, #20]
 8002774:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 800282c <_svfiprintf_r+0x1e8>
 8002778:	2203      	movs	r2, #3
 800277a:	4650      	mov	r0, sl
 800277c:	7821      	ldrb	r1, [r4, #0]
 800277e:	f000 fa19 	bl	8002bb4 <memchr>
 8002782:	b138      	cbz	r0, 8002794 <_svfiprintf_r+0x150>
 8002784:	2240      	movs	r2, #64	@ 0x40
 8002786:	9b04      	ldr	r3, [sp, #16]
 8002788:	eba0 000a 	sub.w	r0, r0, sl
 800278c:	4082      	lsls	r2, r0
 800278e:	4313      	orrs	r3, r2
 8002790:	3401      	adds	r4, #1
 8002792:	9304      	str	r3, [sp, #16]
 8002794:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002798:	2206      	movs	r2, #6
 800279a:	4825      	ldr	r0, [pc, #148]	@ (8002830 <_svfiprintf_r+0x1ec>)
 800279c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80027a0:	f000 fa08 	bl	8002bb4 <memchr>
 80027a4:	2800      	cmp	r0, #0
 80027a6:	d036      	beq.n	8002816 <_svfiprintf_r+0x1d2>
 80027a8:	4b22      	ldr	r3, [pc, #136]	@ (8002834 <_svfiprintf_r+0x1f0>)
 80027aa:	bb1b      	cbnz	r3, 80027f4 <_svfiprintf_r+0x1b0>
 80027ac:	9b03      	ldr	r3, [sp, #12]
 80027ae:	3307      	adds	r3, #7
 80027b0:	f023 0307 	bic.w	r3, r3, #7
 80027b4:	3308      	adds	r3, #8
 80027b6:	9303      	str	r3, [sp, #12]
 80027b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80027ba:	4433      	add	r3, r6
 80027bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80027be:	e76a      	b.n	8002696 <_svfiprintf_r+0x52>
 80027c0:	460c      	mov	r4, r1
 80027c2:	2001      	movs	r0, #1
 80027c4:	fb0c 3202 	mla	r2, ip, r2, r3
 80027c8:	e7a8      	b.n	800271c <_svfiprintf_r+0xd8>
 80027ca:	2300      	movs	r3, #0
 80027cc:	f04f 0c0a 	mov.w	ip, #10
 80027d0:	4619      	mov	r1, r3
 80027d2:	3401      	adds	r4, #1
 80027d4:	9305      	str	r3, [sp, #20]
 80027d6:	4620      	mov	r0, r4
 80027d8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80027dc:	3a30      	subs	r2, #48	@ 0x30
 80027de:	2a09      	cmp	r2, #9
 80027e0:	d903      	bls.n	80027ea <_svfiprintf_r+0x1a6>
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d0c6      	beq.n	8002774 <_svfiprintf_r+0x130>
 80027e6:	9105      	str	r1, [sp, #20]
 80027e8:	e7c4      	b.n	8002774 <_svfiprintf_r+0x130>
 80027ea:	4604      	mov	r4, r0
 80027ec:	2301      	movs	r3, #1
 80027ee:	fb0c 2101 	mla	r1, ip, r1, r2
 80027f2:	e7f0      	b.n	80027d6 <_svfiprintf_r+0x192>
 80027f4:	ab03      	add	r3, sp, #12
 80027f6:	9300      	str	r3, [sp, #0]
 80027f8:	462a      	mov	r2, r5
 80027fa:	4638      	mov	r0, r7
 80027fc:	4b0e      	ldr	r3, [pc, #56]	@ (8002838 <_svfiprintf_r+0x1f4>)
 80027fe:	a904      	add	r1, sp, #16
 8002800:	f3af 8000 	nop.w
 8002804:	1c42      	adds	r2, r0, #1
 8002806:	4606      	mov	r6, r0
 8002808:	d1d6      	bne.n	80027b8 <_svfiprintf_r+0x174>
 800280a:	89ab      	ldrh	r3, [r5, #12]
 800280c:	065b      	lsls	r3, r3, #25
 800280e:	f53f af2d 	bmi.w	800266c <_svfiprintf_r+0x28>
 8002812:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8002814:	e72c      	b.n	8002670 <_svfiprintf_r+0x2c>
 8002816:	ab03      	add	r3, sp, #12
 8002818:	9300      	str	r3, [sp, #0]
 800281a:	462a      	mov	r2, r5
 800281c:	4638      	mov	r0, r7
 800281e:	4b06      	ldr	r3, [pc, #24]	@ (8002838 <_svfiprintf_r+0x1f4>)
 8002820:	a904      	add	r1, sp, #16
 8002822:	f000 f87d 	bl	8002920 <_printf_i>
 8002826:	e7ed      	b.n	8002804 <_svfiprintf_r+0x1c0>
 8002828:	08002cb8 	.word	0x08002cb8
 800282c:	08002cbe 	.word	0x08002cbe
 8002830:	08002cc2 	.word	0x08002cc2
 8002834:	00000000 	.word	0x00000000
 8002838:	0800258d 	.word	0x0800258d

0800283c <_printf_common>:
 800283c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002840:	4616      	mov	r6, r2
 8002842:	4698      	mov	r8, r3
 8002844:	688a      	ldr	r2, [r1, #8]
 8002846:	690b      	ldr	r3, [r1, #16]
 8002848:	4607      	mov	r7, r0
 800284a:	4293      	cmp	r3, r2
 800284c:	bfb8      	it	lt
 800284e:	4613      	movlt	r3, r2
 8002850:	6033      	str	r3, [r6, #0]
 8002852:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002856:	460c      	mov	r4, r1
 8002858:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800285c:	b10a      	cbz	r2, 8002862 <_printf_common+0x26>
 800285e:	3301      	adds	r3, #1
 8002860:	6033      	str	r3, [r6, #0]
 8002862:	6823      	ldr	r3, [r4, #0]
 8002864:	0699      	lsls	r1, r3, #26
 8002866:	bf42      	ittt	mi
 8002868:	6833      	ldrmi	r3, [r6, #0]
 800286a:	3302      	addmi	r3, #2
 800286c:	6033      	strmi	r3, [r6, #0]
 800286e:	6825      	ldr	r5, [r4, #0]
 8002870:	f015 0506 	ands.w	r5, r5, #6
 8002874:	d106      	bne.n	8002884 <_printf_common+0x48>
 8002876:	f104 0a19 	add.w	sl, r4, #25
 800287a:	68e3      	ldr	r3, [r4, #12]
 800287c:	6832      	ldr	r2, [r6, #0]
 800287e:	1a9b      	subs	r3, r3, r2
 8002880:	42ab      	cmp	r3, r5
 8002882:	dc2b      	bgt.n	80028dc <_printf_common+0xa0>
 8002884:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002888:	6822      	ldr	r2, [r4, #0]
 800288a:	3b00      	subs	r3, #0
 800288c:	bf18      	it	ne
 800288e:	2301      	movne	r3, #1
 8002890:	0692      	lsls	r2, r2, #26
 8002892:	d430      	bmi.n	80028f6 <_printf_common+0xba>
 8002894:	4641      	mov	r1, r8
 8002896:	4638      	mov	r0, r7
 8002898:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800289c:	47c8      	blx	r9
 800289e:	3001      	adds	r0, #1
 80028a0:	d023      	beq.n	80028ea <_printf_common+0xae>
 80028a2:	6823      	ldr	r3, [r4, #0]
 80028a4:	6922      	ldr	r2, [r4, #16]
 80028a6:	f003 0306 	and.w	r3, r3, #6
 80028aa:	2b04      	cmp	r3, #4
 80028ac:	bf14      	ite	ne
 80028ae:	2500      	movne	r5, #0
 80028b0:	6833      	ldreq	r3, [r6, #0]
 80028b2:	f04f 0600 	mov.w	r6, #0
 80028b6:	bf08      	it	eq
 80028b8:	68e5      	ldreq	r5, [r4, #12]
 80028ba:	f104 041a 	add.w	r4, r4, #26
 80028be:	bf08      	it	eq
 80028c0:	1aed      	subeq	r5, r5, r3
 80028c2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80028c6:	bf08      	it	eq
 80028c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80028cc:	4293      	cmp	r3, r2
 80028ce:	bfc4      	itt	gt
 80028d0:	1a9b      	subgt	r3, r3, r2
 80028d2:	18ed      	addgt	r5, r5, r3
 80028d4:	42b5      	cmp	r5, r6
 80028d6:	d11a      	bne.n	800290e <_printf_common+0xd2>
 80028d8:	2000      	movs	r0, #0
 80028da:	e008      	b.n	80028ee <_printf_common+0xb2>
 80028dc:	2301      	movs	r3, #1
 80028de:	4652      	mov	r2, sl
 80028e0:	4641      	mov	r1, r8
 80028e2:	4638      	mov	r0, r7
 80028e4:	47c8      	blx	r9
 80028e6:	3001      	adds	r0, #1
 80028e8:	d103      	bne.n	80028f2 <_printf_common+0xb6>
 80028ea:	f04f 30ff 	mov.w	r0, #4294967295
 80028ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80028f2:	3501      	adds	r5, #1
 80028f4:	e7c1      	b.n	800287a <_printf_common+0x3e>
 80028f6:	2030      	movs	r0, #48	@ 0x30
 80028f8:	18e1      	adds	r1, r4, r3
 80028fa:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80028fe:	1c5a      	adds	r2, r3, #1
 8002900:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002904:	4422      	add	r2, r4
 8002906:	3302      	adds	r3, #2
 8002908:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800290c:	e7c2      	b.n	8002894 <_printf_common+0x58>
 800290e:	2301      	movs	r3, #1
 8002910:	4622      	mov	r2, r4
 8002912:	4641      	mov	r1, r8
 8002914:	4638      	mov	r0, r7
 8002916:	47c8      	blx	r9
 8002918:	3001      	adds	r0, #1
 800291a:	d0e6      	beq.n	80028ea <_printf_common+0xae>
 800291c:	3601      	adds	r6, #1
 800291e:	e7d9      	b.n	80028d4 <_printf_common+0x98>

08002920 <_printf_i>:
 8002920:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002924:	7e0f      	ldrb	r7, [r1, #24]
 8002926:	4691      	mov	r9, r2
 8002928:	2f78      	cmp	r7, #120	@ 0x78
 800292a:	4680      	mov	r8, r0
 800292c:	460c      	mov	r4, r1
 800292e:	469a      	mov	sl, r3
 8002930:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002932:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002936:	d807      	bhi.n	8002948 <_printf_i+0x28>
 8002938:	2f62      	cmp	r7, #98	@ 0x62
 800293a:	d80a      	bhi.n	8002952 <_printf_i+0x32>
 800293c:	2f00      	cmp	r7, #0
 800293e:	f000 80d3 	beq.w	8002ae8 <_printf_i+0x1c8>
 8002942:	2f58      	cmp	r7, #88	@ 0x58
 8002944:	f000 80ba 	beq.w	8002abc <_printf_i+0x19c>
 8002948:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800294c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002950:	e03a      	b.n	80029c8 <_printf_i+0xa8>
 8002952:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002956:	2b15      	cmp	r3, #21
 8002958:	d8f6      	bhi.n	8002948 <_printf_i+0x28>
 800295a:	a101      	add	r1, pc, #4	@ (adr r1, 8002960 <_printf_i+0x40>)
 800295c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002960:	080029b9 	.word	0x080029b9
 8002964:	080029cd 	.word	0x080029cd
 8002968:	08002949 	.word	0x08002949
 800296c:	08002949 	.word	0x08002949
 8002970:	08002949 	.word	0x08002949
 8002974:	08002949 	.word	0x08002949
 8002978:	080029cd 	.word	0x080029cd
 800297c:	08002949 	.word	0x08002949
 8002980:	08002949 	.word	0x08002949
 8002984:	08002949 	.word	0x08002949
 8002988:	08002949 	.word	0x08002949
 800298c:	08002acf 	.word	0x08002acf
 8002990:	080029f7 	.word	0x080029f7
 8002994:	08002a89 	.word	0x08002a89
 8002998:	08002949 	.word	0x08002949
 800299c:	08002949 	.word	0x08002949
 80029a0:	08002af1 	.word	0x08002af1
 80029a4:	08002949 	.word	0x08002949
 80029a8:	080029f7 	.word	0x080029f7
 80029ac:	08002949 	.word	0x08002949
 80029b0:	08002949 	.word	0x08002949
 80029b4:	08002a91 	.word	0x08002a91
 80029b8:	6833      	ldr	r3, [r6, #0]
 80029ba:	1d1a      	adds	r2, r3, #4
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	6032      	str	r2, [r6, #0]
 80029c0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80029c4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80029c8:	2301      	movs	r3, #1
 80029ca:	e09e      	b.n	8002b0a <_printf_i+0x1ea>
 80029cc:	6833      	ldr	r3, [r6, #0]
 80029ce:	6820      	ldr	r0, [r4, #0]
 80029d0:	1d19      	adds	r1, r3, #4
 80029d2:	6031      	str	r1, [r6, #0]
 80029d4:	0606      	lsls	r6, r0, #24
 80029d6:	d501      	bpl.n	80029dc <_printf_i+0xbc>
 80029d8:	681d      	ldr	r5, [r3, #0]
 80029da:	e003      	b.n	80029e4 <_printf_i+0xc4>
 80029dc:	0645      	lsls	r5, r0, #25
 80029de:	d5fb      	bpl.n	80029d8 <_printf_i+0xb8>
 80029e0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80029e4:	2d00      	cmp	r5, #0
 80029e6:	da03      	bge.n	80029f0 <_printf_i+0xd0>
 80029e8:	232d      	movs	r3, #45	@ 0x2d
 80029ea:	426d      	negs	r5, r5
 80029ec:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80029f0:	230a      	movs	r3, #10
 80029f2:	4859      	ldr	r0, [pc, #356]	@ (8002b58 <_printf_i+0x238>)
 80029f4:	e011      	b.n	8002a1a <_printf_i+0xfa>
 80029f6:	6821      	ldr	r1, [r4, #0]
 80029f8:	6833      	ldr	r3, [r6, #0]
 80029fa:	0608      	lsls	r0, r1, #24
 80029fc:	f853 5b04 	ldr.w	r5, [r3], #4
 8002a00:	d402      	bmi.n	8002a08 <_printf_i+0xe8>
 8002a02:	0649      	lsls	r1, r1, #25
 8002a04:	bf48      	it	mi
 8002a06:	b2ad      	uxthmi	r5, r5
 8002a08:	2f6f      	cmp	r7, #111	@ 0x6f
 8002a0a:	6033      	str	r3, [r6, #0]
 8002a0c:	bf14      	ite	ne
 8002a0e:	230a      	movne	r3, #10
 8002a10:	2308      	moveq	r3, #8
 8002a12:	4851      	ldr	r0, [pc, #324]	@ (8002b58 <_printf_i+0x238>)
 8002a14:	2100      	movs	r1, #0
 8002a16:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002a1a:	6866      	ldr	r6, [r4, #4]
 8002a1c:	2e00      	cmp	r6, #0
 8002a1e:	bfa8      	it	ge
 8002a20:	6821      	ldrge	r1, [r4, #0]
 8002a22:	60a6      	str	r6, [r4, #8]
 8002a24:	bfa4      	itt	ge
 8002a26:	f021 0104 	bicge.w	r1, r1, #4
 8002a2a:	6021      	strge	r1, [r4, #0]
 8002a2c:	b90d      	cbnz	r5, 8002a32 <_printf_i+0x112>
 8002a2e:	2e00      	cmp	r6, #0
 8002a30:	d04b      	beq.n	8002aca <_printf_i+0x1aa>
 8002a32:	4616      	mov	r6, r2
 8002a34:	fbb5 f1f3 	udiv	r1, r5, r3
 8002a38:	fb03 5711 	mls	r7, r3, r1, r5
 8002a3c:	5dc7      	ldrb	r7, [r0, r7]
 8002a3e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002a42:	462f      	mov	r7, r5
 8002a44:	42bb      	cmp	r3, r7
 8002a46:	460d      	mov	r5, r1
 8002a48:	d9f4      	bls.n	8002a34 <_printf_i+0x114>
 8002a4a:	2b08      	cmp	r3, #8
 8002a4c:	d10b      	bne.n	8002a66 <_printf_i+0x146>
 8002a4e:	6823      	ldr	r3, [r4, #0]
 8002a50:	07df      	lsls	r7, r3, #31
 8002a52:	d508      	bpl.n	8002a66 <_printf_i+0x146>
 8002a54:	6923      	ldr	r3, [r4, #16]
 8002a56:	6861      	ldr	r1, [r4, #4]
 8002a58:	4299      	cmp	r1, r3
 8002a5a:	bfde      	ittt	le
 8002a5c:	2330      	movle	r3, #48	@ 0x30
 8002a5e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002a62:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002a66:	1b92      	subs	r2, r2, r6
 8002a68:	6122      	str	r2, [r4, #16]
 8002a6a:	464b      	mov	r3, r9
 8002a6c:	4621      	mov	r1, r4
 8002a6e:	4640      	mov	r0, r8
 8002a70:	f8cd a000 	str.w	sl, [sp]
 8002a74:	aa03      	add	r2, sp, #12
 8002a76:	f7ff fee1 	bl	800283c <_printf_common>
 8002a7a:	3001      	adds	r0, #1
 8002a7c:	d14a      	bne.n	8002b14 <_printf_i+0x1f4>
 8002a7e:	f04f 30ff 	mov.w	r0, #4294967295
 8002a82:	b004      	add	sp, #16
 8002a84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a88:	6823      	ldr	r3, [r4, #0]
 8002a8a:	f043 0320 	orr.w	r3, r3, #32
 8002a8e:	6023      	str	r3, [r4, #0]
 8002a90:	2778      	movs	r7, #120	@ 0x78
 8002a92:	4832      	ldr	r0, [pc, #200]	@ (8002b5c <_printf_i+0x23c>)
 8002a94:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002a98:	6823      	ldr	r3, [r4, #0]
 8002a9a:	6831      	ldr	r1, [r6, #0]
 8002a9c:	061f      	lsls	r7, r3, #24
 8002a9e:	f851 5b04 	ldr.w	r5, [r1], #4
 8002aa2:	d402      	bmi.n	8002aaa <_printf_i+0x18a>
 8002aa4:	065f      	lsls	r7, r3, #25
 8002aa6:	bf48      	it	mi
 8002aa8:	b2ad      	uxthmi	r5, r5
 8002aaa:	6031      	str	r1, [r6, #0]
 8002aac:	07d9      	lsls	r1, r3, #31
 8002aae:	bf44      	itt	mi
 8002ab0:	f043 0320 	orrmi.w	r3, r3, #32
 8002ab4:	6023      	strmi	r3, [r4, #0]
 8002ab6:	b11d      	cbz	r5, 8002ac0 <_printf_i+0x1a0>
 8002ab8:	2310      	movs	r3, #16
 8002aba:	e7ab      	b.n	8002a14 <_printf_i+0xf4>
 8002abc:	4826      	ldr	r0, [pc, #152]	@ (8002b58 <_printf_i+0x238>)
 8002abe:	e7e9      	b.n	8002a94 <_printf_i+0x174>
 8002ac0:	6823      	ldr	r3, [r4, #0]
 8002ac2:	f023 0320 	bic.w	r3, r3, #32
 8002ac6:	6023      	str	r3, [r4, #0]
 8002ac8:	e7f6      	b.n	8002ab8 <_printf_i+0x198>
 8002aca:	4616      	mov	r6, r2
 8002acc:	e7bd      	b.n	8002a4a <_printf_i+0x12a>
 8002ace:	6833      	ldr	r3, [r6, #0]
 8002ad0:	6825      	ldr	r5, [r4, #0]
 8002ad2:	1d18      	adds	r0, r3, #4
 8002ad4:	6961      	ldr	r1, [r4, #20]
 8002ad6:	6030      	str	r0, [r6, #0]
 8002ad8:	062e      	lsls	r6, r5, #24
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	d501      	bpl.n	8002ae2 <_printf_i+0x1c2>
 8002ade:	6019      	str	r1, [r3, #0]
 8002ae0:	e002      	b.n	8002ae8 <_printf_i+0x1c8>
 8002ae2:	0668      	lsls	r0, r5, #25
 8002ae4:	d5fb      	bpl.n	8002ade <_printf_i+0x1be>
 8002ae6:	8019      	strh	r1, [r3, #0]
 8002ae8:	2300      	movs	r3, #0
 8002aea:	4616      	mov	r6, r2
 8002aec:	6123      	str	r3, [r4, #16]
 8002aee:	e7bc      	b.n	8002a6a <_printf_i+0x14a>
 8002af0:	6833      	ldr	r3, [r6, #0]
 8002af2:	2100      	movs	r1, #0
 8002af4:	1d1a      	adds	r2, r3, #4
 8002af6:	6032      	str	r2, [r6, #0]
 8002af8:	681e      	ldr	r6, [r3, #0]
 8002afa:	6862      	ldr	r2, [r4, #4]
 8002afc:	4630      	mov	r0, r6
 8002afe:	f000 f859 	bl	8002bb4 <memchr>
 8002b02:	b108      	cbz	r0, 8002b08 <_printf_i+0x1e8>
 8002b04:	1b80      	subs	r0, r0, r6
 8002b06:	6060      	str	r0, [r4, #4]
 8002b08:	6863      	ldr	r3, [r4, #4]
 8002b0a:	6123      	str	r3, [r4, #16]
 8002b0c:	2300      	movs	r3, #0
 8002b0e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002b12:	e7aa      	b.n	8002a6a <_printf_i+0x14a>
 8002b14:	4632      	mov	r2, r6
 8002b16:	4649      	mov	r1, r9
 8002b18:	4640      	mov	r0, r8
 8002b1a:	6923      	ldr	r3, [r4, #16]
 8002b1c:	47d0      	blx	sl
 8002b1e:	3001      	adds	r0, #1
 8002b20:	d0ad      	beq.n	8002a7e <_printf_i+0x15e>
 8002b22:	6823      	ldr	r3, [r4, #0]
 8002b24:	079b      	lsls	r3, r3, #30
 8002b26:	d413      	bmi.n	8002b50 <_printf_i+0x230>
 8002b28:	68e0      	ldr	r0, [r4, #12]
 8002b2a:	9b03      	ldr	r3, [sp, #12]
 8002b2c:	4298      	cmp	r0, r3
 8002b2e:	bfb8      	it	lt
 8002b30:	4618      	movlt	r0, r3
 8002b32:	e7a6      	b.n	8002a82 <_printf_i+0x162>
 8002b34:	2301      	movs	r3, #1
 8002b36:	4632      	mov	r2, r6
 8002b38:	4649      	mov	r1, r9
 8002b3a:	4640      	mov	r0, r8
 8002b3c:	47d0      	blx	sl
 8002b3e:	3001      	adds	r0, #1
 8002b40:	d09d      	beq.n	8002a7e <_printf_i+0x15e>
 8002b42:	3501      	adds	r5, #1
 8002b44:	68e3      	ldr	r3, [r4, #12]
 8002b46:	9903      	ldr	r1, [sp, #12]
 8002b48:	1a5b      	subs	r3, r3, r1
 8002b4a:	42ab      	cmp	r3, r5
 8002b4c:	dcf2      	bgt.n	8002b34 <_printf_i+0x214>
 8002b4e:	e7eb      	b.n	8002b28 <_printf_i+0x208>
 8002b50:	2500      	movs	r5, #0
 8002b52:	f104 0619 	add.w	r6, r4, #25
 8002b56:	e7f5      	b.n	8002b44 <_printf_i+0x224>
 8002b58:	08002cc9 	.word	0x08002cc9
 8002b5c:	08002cda 	.word	0x08002cda

08002b60 <memmove>:
 8002b60:	4288      	cmp	r0, r1
 8002b62:	b510      	push	{r4, lr}
 8002b64:	eb01 0402 	add.w	r4, r1, r2
 8002b68:	d902      	bls.n	8002b70 <memmove+0x10>
 8002b6a:	4284      	cmp	r4, r0
 8002b6c:	4623      	mov	r3, r4
 8002b6e:	d807      	bhi.n	8002b80 <memmove+0x20>
 8002b70:	1e43      	subs	r3, r0, #1
 8002b72:	42a1      	cmp	r1, r4
 8002b74:	d008      	beq.n	8002b88 <memmove+0x28>
 8002b76:	f811 2b01 	ldrb.w	r2, [r1], #1
 8002b7a:	f803 2f01 	strb.w	r2, [r3, #1]!
 8002b7e:	e7f8      	b.n	8002b72 <memmove+0x12>
 8002b80:	4601      	mov	r1, r0
 8002b82:	4402      	add	r2, r0
 8002b84:	428a      	cmp	r2, r1
 8002b86:	d100      	bne.n	8002b8a <memmove+0x2a>
 8002b88:	bd10      	pop	{r4, pc}
 8002b8a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8002b8e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8002b92:	e7f7      	b.n	8002b84 <memmove+0x24>

08002b94 <_sbrk_r>:
 8002b94:	b538      	push	{r3, r4, r5, lr}
 8002b96:	2300      	movs	r3, #0
 8002b98:	4d05      	ldr	r5, [pc, #20]	@ (8002bb0 <_sbrk_r+0x1c>)
 8002b9a:	4604      	mov	r4, r0
 8002b9c:	4608      	mov	r0, r1
 8002b9e:	602b      	str	r3, [r5, #0]
 8002ba0:	f7fd ff7e 	bl	8000aa0 <_sbrk>
 8002ba4:	1c43      	adds	r3, r0, #1
 8002ba6:	d102      	bne.n	8002bae <_sbrk_r+0x1a>
 8002ba8:	682b      	ldr	r3, [r5, #0]
 8002baa:	b103      	cbz	r3, 8002bae <_sbrk_r+0x1a>
 8002bac:	6023      	str	r3, [r4, #0]
 8002bae:	bd38      	pop	{r3, r4, r5, pc}
 8002bb0:	200003dc 	.word	0x200003dc

08002bb4 <memchr>:
 8002bb4:	4603      	mov	r3, r0
 8002bb6:	b510      	push	{r4, lr}
 8002bb8:	b2c9      	uxtb	r1, r1
 8002bba:	4402      	add	r2, r0
 8002bbc:	4293      	cmp	r3, r2
 8002bbe:	4618      	mov	r0, r3
 8002bc0:	d101      	bne.n	8002bc6 <memchr+0x12>
 8002bc2:	2000      	movs	r0, #0
 8002bc4:	e003      	b.n	8002bce <memchr+0x1a>
 8002bc6:	7804      	ldrb	r4, [r0, #0]
 8002bc8:	3301      	adds	r3, #1
 8002bca:	428c      	cmp	r4, r1
 8002bcc:	d1f6      	bne.n	8002bbc <memchr+0x8>
 8002bce:	bd10      	pop	{r4, pc}

08002bd0 <memcpy>:
 8002bd0:	440a      	add	r2, r1
 8002bd2:	4291      	cmp	r1, r2
 8002bd4:	f100 33ff 	add.w	r3, r0, #4294967295
 8002bd8:	d100      	bne.n	8002bdc <memcpy+0xc>
 8002bda:	4770      	bx	lr
 8002bdc:	b510      	push	{r4, lr}
 8002bde:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002be2:	4291      	cmp	r1, r2
 8002be4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002be8:	d1f9      	bne.n	8002bde <memcpy+0xe>
 8002bea:	bd10      	pop	{r4, pc}

08002bec <_realloc_r>:
 8002bec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002bf0:	4680      	mov	r8, r0
 8002bf2:	4615      	mov	r5, r2
 8002bf4:	460c      	mov	r4, r1
 8002bf6:	b921      	cbnz	r1, 8002c02 <_realloc_r+0x16>
 8002bf8:	4611      	mov	r1, r2
 8002bfa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002bfe:	f7ff bc39 	b.w	8002474 <_malloc_r>
 8002c02:	b92a      	cbnz	r2, 8002c10 <_realloc_r+0x24>
 8002c04:	f7ff fbcc 	bl	80023a0 <_free_r>
 8002c08:	2400      	movs	r4, #0
 8002c0a:	4620      	mov	r0, r4
 8002c0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c10:	f000 f81a 	bl	8002c48 <_malloc_usable_size_r>
 8002c14:	4285      	cmp	r5, r0
 8002c16:	4606      	mov	r6, r0
 8002c18:	d802      	bhi.n	8002c20 <_realloc_r+0x34>
 8002c1a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8002c1e:	d8f4      	bhi.n	8002c0a <_realloc_r+0x1e>
 8002c20:	4629      	mov	r1, r5
 8002c22:	4640      	mov	r0, r8
 8002c24:	f7ff fc26 	bl	8002474 <_malloc_r>
 8002c28:	4607      	mov	r7, r0
 8002c2a:	2800      	cmp	r0, #0
 8002c2c:	d0ec      	beq.n	8002c08 <_realloc_r+0x1c>
 8002c2e:	42b5      	cmp	r5, r6
 8002c30:	462a      	mov	r2, r5
 8002c32:	4621      	mov	r1, r4
 8002c34:	bf28      	it	cs
 8002c36:	4632      	movcs	r2, r6
 8002c38:	f7ff ffca 	bl	8002bd0 <memcpy>
 8002c3c:	4621      	mov	r1, r4
 8002c3e:	4640      	mov	r0, r8
 8002c40:	f7ff fbae 	bl	80023a0 <_free_r>
 8002c44:	463c      	mov	r4, r7
 8002c46:	e7e0      	b.n	8002c0a <_realloc_r+0x1e>

08002c48 <_malloc_usable_size_r>:
 8002c48:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002c4c:	1f18      	subs	r0, r3, #4
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	bfbc      	itt	lt
 8002c52:	580b      	ldrlt	r3, [r1, r0]
 8002c54:	18c0      	addlt	r0, r0, r3
 8002c56:	4770      	bx	lr

08002c58 <_init>:
 8002c58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c5a:	bf00      	nop
 8002c5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c5e:	bc08      	pop	{r3}
 8002c60:	469e      	mov	lr, r3
 8002c62:	4770      	bx	lr

08002c64 <_fini>:
 8002c64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c66:	bf00      	nop
 8002c68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c6a:	bc08      	pop	{r3}
 8002c6c:	469e      	mov	lr, r3
 8002c6e:	4770      	bx	lr
