
Base_code.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002b1c  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08002c28  08002c28  00003c28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002c98  08002c98  0000405c  2**0
                  CONTENTS
  4 .ARM          00000008  08002c98  08002c98  00003c98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08002ca0  08002ca0  0000405c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002ca0  08002ca0  00003ca0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002ca4  08002ca4  00003ca4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08002ca8  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000390  2000005c  08002d04  0000405c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003ec  08002d04  000043ec  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000405c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005aef  00000000  00000000  00004085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000016c8  00000000  00000000  00009b74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000006d8  00000000  00000000  0000b240  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000521  00000000  00000000  0000b918  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000137e0  00000000  00000000  0000be39  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00007804  00000000  00000000  0001f619  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0006a2ab  00000000  00000000  00026e1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000910c8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001fc8  00000000  00000000  0009110c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000072  00000000  00000000  000930d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000005c 	.word	0x2000005c
 8000128:	00000000 	.word	0x00000000
 800012c:	08002c10 	.word	0x08002c10

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000060 	.word	0x20000060
 8000148:	08002c10 	.word	0x08002c10

0800014c <strcmp>:
 800014c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000150:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000154:	2a01      	cmp	r2, #1
 8000156:	bf28      	it	cs
 8000158:	429a      	cmpcs	r2, r3
 800015a:	d0f7      	beq.n	800014c <strcmp>
 800015c:	1ad0      	subs	r0, r2, r3
 800015e:	4770      	bx	lr

08000160 <strlen>:
 8000160:	4603      	mov	r3, r0
 8000162:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000166:	2a00      	cmp	r2, #0
 8000168:	d1fb      	bne.n	8000162 <strlen+0x2>
 800016a:	1a18      	subs	r0, r3, r0
 800016c:	3801      	subs	r0, #1
 800016e:	4770      	bx	lr

08000170 <check_send_flags>:
fifo_item_t fifo_dequeue();
void fifo_enqueue(uint8_t sender_id, uint8_t message_number);

int is_fifo_empty();

void check_send_flags() {
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
    if (a_notify_flag) {
 8000174:	4b06      	ldr	r3, [pc, #24]	@ (8000190 <check_send_flags+0x20>)
 8000176:	781b      	ldrb	r3, [r3, #0]
 8000178:	b2db      	uxtb	r3, r3
 800017a:	2b00      	cmp	r3, #0
 800017c:	d006      	beq.n	800018c <check_send_flags+0x1c>
        send_usart_message(&huart1, "notify");
 800017e:	4905      	ldr	r1, [pc, #20]	@ (8000194 <check_send_flags+0x24>)
 8000180:	4805      	ldr	r0, [pc, #20]	@ (8000198 <check_send_flags+0x28>)
 8000182:	f000 f92f 	bl	80003e4 <send_usart_message>
        a_notify_flag = 0;
 8000186:	4b02      	ldr	r3, [pc, #8]	@ (8000190 <check_send_flags+0x20>)
 8000188:	2200      	movs	r2, #0
 800018a:	701a      	strb	r2, [r3, #0]
    }
}
 800018c:	bf00      	nop
 800018e:	bd80      	pop	{r7, pc}
 8000190:	20000216 	.word	0x20000216
 8000194:	08002c28 	.word	0x08002c28
 8000198:	20000078 	.word	0x20000078

0800019c <check_USART_1_routine>:

void check_USART_1_routine() {
 800019c:	b580      	push	{r7, lr}
 800019e:	b0a2      	sub	sp, #136	@ 0x88
 80001a0:	af00      	add	r7, sp, #0
    if (check_for_new_message(usart1_rx_buffer, &usart1_rx_head, &usart1_rx_tail, &usart1_new_message_flag)) {
 80001a2:	4b1d      	ldr	r3, [pc, #116]	@ (8000218 <check_USART_1_routine+0x7c>)
 80001a4:	4a1d      	ldr	r2, [pc, #116]	@ (800021c <check_USART_1_routine+0x80>)
 80001a6:	491e      	ldr	r1, [pc, #120]	@ (8000220 <check_USART_1_routine+0x84>)
 80001a8:	481e      	ldr	r0, [pc, #120]	@ (8000224 <check_USART_1_routine+0x88>)
 80001aa:	f000 f975 	bl	8000498 <check_for_new_message>
 80001ae:	4603      	mov	r3, r0
 80001b0:	2b00      	cmp	r3, #0
 80001b2:	d02d      	beq.n	8000210 <check_USART_1_routine+0x74>
        char message[BUFFER_SIZE];
        for (int i = 0; i < BUFFER_SIZE; i++) {
 80001b4:	2300      	movs	r3, #0
 80001b6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80001ba:	e017      	b.n	80001ec <check_USART_1_routine+0x50>
            message[i] = circular_buffer_read(usart1_rx_buffer, &usart1_rx_tail);
 80001bc:	4917      	ldr	r1, [pc, #92]	@ (800021c <check_USART_1_routine+0x80>)
 80001be:	4819      	ldr	r0, [pc, #100]	@ (8000224 <check_USART_1_routine+0x88>)
 80001c0:	f000 f949 	bl	8000456 <circular_buffer_read>
 80001c4:	4603      	mov	r3, r0
 80001c6:	4619      	mov	r1, r3
 80001c8:	1d3a      	adds	r2, r7, #4
 80001ca:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80001ce:	4413      	add	r3, r2
 80001d0:	460a      	mov	r2, r1
 80001d2:	701a      	strb	r2, [r3, #0]
            if (message[i] == '\n') break;
 80001d4:	1d3a      	adds	r2, r7, #4
 80001d6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80001da:	4413      	add	r3, r2
 80001dc:	781b      	ldrb	r3, [r3, #0]
 80001de:	2b0a      	cmp	r3, #10
 80001e0:	d009      	beq.n	80001f6 <check_USART_1_routine+0x5a>
        for (int i = 0; i < BUFFER_SIZE; i++) {
 80001e2:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80001e6:	3301      	adds	r3, #1
 80001e8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80001ec:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80001f0:	2b7f      	cmp	r3, #127	@ 0x7f
 80001f2:	dde3      	ble.n	80001bc <check_USART_1_routine+0x20>
 80001f4:	e000      	b.n	80001f8 <check_USART_1_routine+0x5c>
            if (message[i] == '\n') break;
 80001f6:	bf00      	nop
        }
        if (strcmp((const char *)message, "inc") == 0) {
 80001f8:	1d3b      	adds	r3, r7, #4
 80001fa:	490b      	ldr	r1, [pc, #44]	@ (8000228 <check_USART_1_routine+0x8c>)
 80001fc:	4618      	mov	r0, r3
 80001fe:	f7ff ffa5 	bl	800014c <strcmp>
 8000202:	4603      	mov	r3, r0
 8000204:	2b00      	cmp	r3, #0
 8000206:	d103      	bne.n	8000210 <check_USART_1_routine+0x74>
            fifo_enqueue(1,MSG_INC);
 8000208:	2101      	movs	r1, #1
 800020a:	2001      	movs	r0, #1
 800020c:	f000 f86c 	bl	80002e8 <fifo_enqueue>
        }
    }
}
 8000210:	bf00      	nop
 8000212:	3788      	adds	r7, #136	@ 0x88
 8000214:	46bd      	mov	sp, r7
 8000216:	bd80      	pop	{r7, pc}
 8000218:	20000214 	.word	0x20000214
 800021c:	2000020e 	.word	0x2000020e
 8000220:	2000020c 	.word	0x2000020c
 8000224:	2000010c 	.word	0x2000010c
 8000228:	08002c30 	.word	0x08002c30

0800022c <check_USART_2_routine>:

void check_USART_2_routine() {
 800022c:	b580      	push	{r7, lr}
 800022e:	b0a2      	sub	sp, #136	@ 0x88
 8000230:	af00      	add	r7, sp, #0
    if (check_for_new_message(usart2_rx_buffer, &usart2_rx_head, &usart2_rx_tail, &usart2_new_message_flag)) {
 8000232:	4b17      	ldr	r3, [pc, #92]	@ (8000290 <check_USART_2_routine+0x64>)
 8000234:	4a17      	ldr	r2, [pc, #92]	@ (8000294 <check_USART_2_routine+0x68>)
 8000236:	4918      	ldr	r1, [pc, #96]	@ (8000298 <check_USART_2_routine+0x6c>)
 8000238:	4818      	ldr	r0, [pc, #96]	@ (800029c <check_USART_2_routine+0x70>)
 800023a:	f000 f92d 	bl	8000498 <check_for_new_message>
 800023e:	4603      	mov	r3, r0
 8000240:	2b00      	cmp	r3, #0
 8000242:	d021      	beq.n	8000288 <check_USART_2_routine+0x5c>
        char message[BUFFER_SIZE];
        for (int i = 0; i < BUFFER_SIZE; i++) {
 8000244:	2300      	movs	r3, #0
 8000246:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800024a:	e017      	b.n	800027c <check_USART_2_routine+0x50>
            message[i] = circular_buffer_read(usart2_rx_buffer, &usart2_rx_tail);
 800024c:	4911      	ldr	r1, [pc, #68]	@ (8000294 <check_USART_2_routine+0x68>)
 800024e:	4813      	ldr	r0, [pc, #76]	@ (800029c <check_USART_2_routine+0x70>)
 8000250:	f000 f901 	bl	8000456 <circular_buffer_read>
 8000254:	4603      	mov	r3, r0
 8000256:	4619      	mov	r1, r3
 8000258:	1d3a      	adds	r2, r7, #4
 800025a:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800025e:	4413      	add	r3, r2
 8000260:	460a      	mov	r2, r1
 8000262:	701a      	strb	r2, [r3, #0]
            if (message[i] == '\n') break;
 8000264:	1d3a      	adds	r2, r7, #4
 8000266:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800026a:	4413      	add	r3, r2
 800026c:	781b      	ldrb	r3, [r3, #0]
 800026e:	2b0a      	cmp	r3, #10
 8000270:	d009      	beq.n	8000286 <check_USART_2_routine+0x5a>
        for (int i = 0; i < BUFFER_SIZE; i++) {
 8000272:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8000276:	3301      	adds	r3, #1
 8000278:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800027c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8000280:	2b7f      	cmp	r3, #127	@ 0x7f
 8000282:	dde3      	ble.n	800024c <check_USART_2_routine+0x20>
        }
    }
}
 8000284:	e000      	b.n	8000288 <check_USART_2_routine+0x5c>
            if (message[i] == '\n') break;
 8000286:	bf00      	nop
}
 8000288:	bf00      	nop
 800028a:	3788      	adds	r7, #136	@ 0x88
 800028c:	46bd      	mov	sp, r7
 800028e:	bd80      	pop	{r7, pc}
 8000290:	20000215 	.word	0x20000215
 8000294:	20000212 	.word	0x20000212
 8000298:	20000210 	.word	0x20000210
 800029c:	2000018c 	.word	0x2000018c

080002a0 <check_FIFO_queue>:

void check_FIFO_queue() {
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b082      	sub	sp, #8
 80002a4:	af00      	add	r7, sp, #0
    if (msgsrv_inc_flag) return;
 80002a6:	4b0e      	ldr	r3, [pc, #56]	@ (80002e0 <check_FIFO_queue+0x40>)
 80002a8:	781b      	ldrb	r3, [r3, #0]
 80002aa:	b2db      	uxtb	r3, r3
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d112      	bne.n	80002d6 <check_FIFO_queue+0x36>

    if (!is_fifo_empty()) {
 80002b0:	f000 f870 	bl	8000394 <is_fifo_empty>
 80002b4:	4603      	mov	r3, r0
 80002b6:	2b00      	cmp	r3, #0
 80002b8:	d10e      	bne.n	80002d8 <check_FIFO_queue+0x38>
        fifo_item_t item = fifo_dequeue();
 80002ba:	f000 f841 	bl	8000340 <fifo_dequeue>
 80002be:	4603      	mov	r3, r0
 80002c0:	80bb      	strh	r3, [r7, #4]
        sender = item.sender_id;
 80002c2:	793a      	ldrb	r2, [r7, #4]
 80002c4:	4b07      	ldr	r3, [pc, #28]	@ (80002e4 <check_FIFO_queue+0x44>)
 80002c6:	701a      	strb	r2, [r3, #0]
        if (item.message_number == MSG_INC) {
 80002c8:	797b      	ldrb	r3, [r7, #5]
 80002ca:	2b01      	cmp	r3, #1
 80002cc:	d104      	bne.n	80002d8 <check_FIFO_queue+0x38>
            msgsrv_inc_flag = 1;
 80002ce:	4b04      	ldr	r3, [pc, #16]	@ (80002e0 <check_FIFO_queue+0x40>)
 80002d0:	2201      	movs	r2, #1
 80002d2:	701a      	strb	r2, [r3, #0]
 80002d4:	e000      	b.n	80002d8 <check_FIFO_queue+0x38>
    if (msgsrv_inc_flag) return;
 80002d6:	bf00      	nop
        }
    }
}
 80002d8:	3708      	adds	r7, #8
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	20000217 	.word	0x20000217
 80002e4:	20000219 	.word	0x20000219

080002e8 <fifo_enqueue>:

void fifo_enqueue(uint8_t sender_id, uint8_t message_number) {
 80002e8:	b480      	push	{r7}
 80002ea:	b083      	sub	sp, #12
 80002ec:	af00      	add	r7, sp, #0
 80002ee:	4603      	mov	r3, r0
 80002f0:	460a      	mov	r2, r1
 80002f2:	71fb      	strb	r3, [r7, #7]
 80002f4:	4613      	mov	r3, r2
 80002f6:	71bb      	strb	r3, [r7, #6]
    fifo_queue[fifo_head].sender_id = sender_id;
 80002f8:	4b0f      	ldr	r3, [pc, #60]	@ (8000338 <fifo_enqueue+0x50>)
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4619      	mov	r1, r3
 80002fe:	4a0f      	ldr	r2, [pc, #60]	@ (800033c <fifo_enqueue+0x54>)
 8000300:	79fb      	ldrb	r3, [r7, #7]
 8000302:	f802 3011 	strb.w	r3, [r2, r1, lsl #1]
    fifo_queue[fifo_head].message_number = message_number;
 8000306:	4b0c      	ldr	r3, [pc, #48]	@ (8000338 <fifo_enqueue+0x50>)
 8000308:	781b      	ldrb	r3, [r3, #0]
 800030a:	4a0c      	ldr	r2, [pc, #48]	@ (800033c <fifo_enqueue+0x54>)
 800030c:	005b      	lsls	r3, r3, #1
 800030e:	4413      	add	r3, r2
 8000310:	79ba      	ldrb	r2, [r7, #6]
 8000312:	705a      	strb	r2, [r3, #1]
    fifo_head = (fifo_head + 1) % FIFO_SIZE;
 8000314:	4b08      	ldr	r3, [pc, #32]	@ (8000338 <fifo_enqueue+0x50>)
 8000316:	781b      	ldrb	r3, [r3, #0]
 8000318:	3301      	adds	r3, #1
 800031a:	425a      	negs	r2, r3
 800031c:	f003 0307 	and.w	r3, r3, #7
 8000320:	f002 0207 	and.w	r2, r2, #7
 8000324:	bf58      	it	pl
 8000326:	4253      	negpl	r3, r2
 8000328:	b2da      	uxtb	r2, r3
 800032a:	4b03      	ldr	r3, [pc, #12]	@ (8000338 <fifo_enqueue+0x50>)
 800032c:	701a      	strb	r2, [r3, #0]
}
 800032e:	bf00      	nop
 8000330:	370c      	adds	r7, #12
 8000332:	46bd      	mov	sp, r7
 8000334:	bc80      	pop	{r7}
 8000336:	4770      	bx	lr
 8000338:	20000108 	.word	0x20000108
 800033c:	200000f8 	.word	0x200000f8

08000340 <fifo_dequeue>:

fifo_item_t fifo_dequeue() {
 8000340:	b480      	push	{r7}
 8000342:	b083      	sub	sp, #12
 8000344:	af00      	add	r7, sp, #0
    fifo_item_t item = fifo_queue[fifo_tail];
 8000346:	4b11      	ldr	r3, [pc, #68]	@ (800038c <fifo_dequeue+0x4c>)
 8000348:	781b      	ldrb	r3, [r3, #0]
 800034a:	461a      	mov	r2, r3
 800034c:	4b10      	ldr	r3, [pc, #64]	@ (8000390 <fifo_dequeue+0x50>)
 800034e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8000352:	803b      	strh	r3, [r7, #0]
    fifo_tail = (fifo_tail + 1) % FIFO_SIZE;
 8000354:	4b0d      	ldr	r3, [pc, #52]	@ (800038c <fifo_dequeue+0x4c>)
 8000356:	781b      	ldrb	r3, [r3, #0]
 8000358:	3301      	adds	r3, #1
 800035a:	425a      	negs	r2, r3
 800035c:	f003 0307 	and.w	r3, r3, #7
 8000360:	f002 0207 	and.w	r2, r2, #7
 8000364:	bf58      	it	pl
 8000366:	4253      	negpl	r3, r2
 8000368:	b2da      	uxtb	r2, r3
 800036a:	4b08      	ldr	r3, [pc, #32]	@ (800038c <fifo_dequeue+0x4c>)
 800036c:	701a      	strb	r2, [r3, #0]
    return item;
 800036e:	883b      	ldrh	r3, [r7, #0]
 8000370:	80bb      	strh	r3, [r7, #4]
 8000372:	2300      	movs	r3, #0
 8000374:	793a      	ldrb	r2, [r7, #4]
 8000376:	f362 0307 	bfi	r3, r2, #0, #8
 800037a:	797a      	ldrb	r2, [r7, #5]
 800037c:	f362 230f 	bfi	r3, r2, #8, #8
}
 8000380:	4618      	mov	r0, r3
 8000382:	370c      	adds	r7, #12
 8000384:	46bd      	mov	sp, r7
 8000386:	bc80      	pop	{r7}
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop
 800038c:	20000109 	.word	0x20000109
 8000390:	200000f8 	.word	0x200000f8

08000394 <is_fifo_empty>:

int is_fifo_empty() {
 8000394:	b480      	push	{r7}
 8000396:	af00      	add	r7, sp, #0
    return fifo_head == fifo_tail;
 8000398:	4b06      	ldr	r3, [pc, #24]	@ (80003b4 <is_fifo_empty+0x20>)
 800039a:	781a      	ldrb	r2, [r3, #0]
 800039c:	4b06      	ldr	r3, [pc, #24]	@ (80003b8 <is_fifo_empty+0x24>)
 800039e:	781b      	ldrb	r3, [r3, #0]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	bf0c      	ite	eq
 80003a4:	2301      	moveq	r3, #1
 80003a6:	2300      	movne	r3, #0
 80003a8:	b2db      	uxtb	r3, r3
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	46bd      	mov	sp, r7
 80003ae:	bc80      	pop	{r7}
 80003b0:	4770      	bx	lr
 80003b2:	bf00      	nop
 80003b4:	20000108 	.word	0x20000108
 80003b8:	20000109 	.word	0x20000109

080003bc <add_crlf>:


const char* add_crlf(const char* str) {
 80003bc:	b580      	push	{r7, lr}
 80003be:	b082      	sub	sp, #8
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
    static char buffer[BUFFER_SIZE];
    snprintf(buffer, BUFFER_SIZE, "%s\r\n", str);
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a05      	ldr	r2, [pc, #20]	@ (80003dc <add_crlf+0x20>)
 80003c8:	2180      	movs	r1, #128	@ 0x80
 80003ca:	4805      	ldr	r0, [pc, #20]	@ (80003e0 <add_crlf+0x24>)
 80003cc:	f001 ff5c 	bl	8002288 <sniprintf>
    return buffer;
 80003d0:	4b03      	ldr	r3, [pc, #12]	@ (80003e0 <add_crlf+0x24>)
}
 80003d2:	4618      	mov	r0, r3
 80003d4:	3708      	adds	r7, #8
 80003d6:	46bd      	mov	sp, r7
 80003d8:	bd80      	pop	{r7, pc}
 80003da:	bf00      	nop
 80003dc:	08002c34 	.word	0x08002c34
 80003e0:	2000021c 	.word	0x2000021c

080003e4 <send_usart_message>:

void send_usart_message(UART_HandleTypeDef* huart, const char* message) {
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b084      	sub	sp, #16
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	6078      	str	r0, [r7, #4]
 80003ec:	6039      	str	r1, [r7, #0]
    const char* msg_with_crlf = add_crlf(message);
 80003ee:	6838      	ldr	r0, [r7, #0]
 80003f0:	f7ff ffe4 	bl	80003bc <add_crlf>
 80003f4:	60f8      	str	r0, [r7, #12]
    HAL_UART_Transmit_IT(huart, (uint8_t*)msg_with_crlf, strlen(msg_with_crlf));
 80003f6:	68f8      	ldr	r0, [r7, #12]
 80003f8:	f7ff feb2 	bl	8000160 <strlen>
 80003fc:	4603      	mov	r3, r0
 80003fe:	b29b      	uxth	r3, r3
 8000400:	461a      	mov	r2, r3
 8000402:	68f9      	ldr	r1, [r7, #12]
 8000404:	6878      	ldr	r0, [r7, #4]
 8000406:	f001 fba0 	bl	8001b4a <HAL_UART_Transmit_IT>
}
 800040a:	bf00      	nop
 800040c:	3710      	adds	r7, #16
 800040e:	46bd      	mov	sp, r7
 8000410:	bd80      	pop	{r7, pc}

08000412 <circular_buffer_write>:

// Circular buffer write for receiving data
void circular_buffer_write(uint8_t* buffer, volatile uint16_t* head, uint8_t data) {
 8000412:	b480      	push	{r7}
 8000414:	b085      	sub	sp, #20
 8000416:	af00      	add	r7, sp, #0
 8000418:	60f8      	str	r0, [r7, #12]
 800041a:	60b9      	str	r1, [r7, #8]
 800041c:	4613      	mov	r3, r2
 800041e:	71fb      	strb	r3, [r7, #7]
    buffer[*head] = data;
 8000420:	68bb      	ldr	r3, [r7, #8]
 8000422:	881b      	ldrh	r3, [r3, #0]
 8000424:	b29b      	uxth	r3, r3
 8000426:	461a      	mov	r2, r3
 8000428:	68fb      	ldr	r3, [r7, #12]
 800042a:	4413      	add	r3, r2
 800042c:	79fa      	ldrb	r2, [r7, #7]
 800042e:	701a      	strb	r2, [r3, #0]
    *head = (*head + 1) % BUFFER_SIZE;
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	881b      	ldrh	r3, [r3, #0]
 8000434:	b29b      	uxth	r3, r3
 8000436:	3301      	adds	r3, #1
 8000438:	425a      	negs	r2, r3
 800043a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800043e:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8000442:	bf58      	it	pl
 8000444:	4253      	negpl	r3, r2
 8000446:	b29a      	uxth	r2, r3
 8000448:	68bb      	ldr	r3, [r7, #8]
 800044a:	801a      	strh	r2, [r3, #0]
}
 800044c:	bf00      	nop
 800044e:	3714      	adds	r7, #20
 8000450:	46bd      	mov	sp, r7
 8000452:	bc80      	pop	{r7}
 8000454:	4770      	bx	lr

08000456 <circular_buffer_read>:

uint8_t circular_buffer_read(uint8_t* buffer, volatile uint16_t* tail) {
 8000456:	b480      	push	{r7}
 8000458:	b085      	sub	sp, #20
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
 800045e:	6039      	str	r1, [r7, #0]
    uint8_t data = buffer[*tail];
 8000460:	683b      	ldr	r3, [r7, #0]
 8000462:	881b      	ldrh	r3, [r3, #0]
 8000464:	b29b      	uxth	r3, r3
 8000466:	461a      	mov	r2, r3
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4413      	add	r3, r2
 800046c:	781b      	ldrb	r3, [r3, #0]
 800046e:	73fb      	strb	r3, [r7, #15]
    *tail = (*tail + 1) % BUFFER_SIZE;
 8000470:	683b      	ldr	r3, [r7, #0]
 8000472:	881b      	ldrh	r3, [r3, #0]
 8000474:	b29b      	uxth	r3, r3
 8000476:	3301      	adds	r3, #1
 8000478:	425a      	negs	r2, r3
 800047a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800047e:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8000482:	bf58      	it	pl
 8000484:	4253      	negpl	r3, r2
 8000486:	b29a      	uxth	r2, r3
 8000488:	683b      	ldr	r3, [r7, #0]
 800048a:	801a      	strh	r2, [r3, #0]
    return data;
 800048c:	7bfb      	ldrb	r3, [r7, #15]
}
 800048e:	4618      	mov	r0, r3
 8000490:	3714      	adds	r7, #20
 8000492:	46bd      	mov	sp, r7
 8000494:	bc80      	pop	{r7}
 8000496:	4770      	bx	lr

08000498 <check_for_new_message>:

// Function to check if a complete message has been received (CRLF)
uint8_t check_for_new_message(uint8_t* buffer, volatile uint16_t* head, volatile uint16_t* tail, volatile uint8_t* new_message_flag) {
 8000498:	b480      	push	{r7}
 800049a:	b085      	sub	sp, #20
 800049c:	af00      	add	r7, sp, #0
 800049e:	60f8      	str	r0, [r7, #12]
 80004a0:	60b9      	str	r1, [r7, #8]
 80004a2:	607a      	str	r2, [r7, #4]
 80004a4:	603b      	str	r3, [r7, #0]
    if (*new_message_flag) {
 80004a6:	683b      	ldr	r3, [r7, #0]
 80004a8:	781b      	ldrb	r3, [r3, #0]
 80004aa:	b2db      	uxtb	r3, r3
 80004ac:	2b00      	cmp	r3, #0
 80004ae:	d004      	beq.n	80004ba <check_for_new_message+0x22>
        *new_message_flag = 0;
 80004b0:	683b      	ldr	r3, [r7, #0]
 80004b2:	2200      	movs	r2, #0
 80004b4:	701a      	strb	r2, [r3, #0]
        return 1;
 80004b6:	2301      	movs	r3, #1
 80004b8:	e000      	b.n	80004bc <check_for_new_message+0x24>
    }
    return 0;
 80004ba:	2300      	movs	r3, #0
}
 80004bc:	4618      	mov	r0, r3
 80004be:	3714      	adds	r7, #20
 80004c0:	46bd      	mov	sp, r7
 80004c2:	bc80      	pop	{r7}
 80004c4:	4770      	bx	lr
	...

080004c8 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef* huart) {
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b084      	sub	sp, #16
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
    uint8_t received_byte;

    if (huart->Instance == USART1) {
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	4a33      	ldr	r2, [pc, #204]	@ (80005a4 <HAL_UART_RxCpltCallback+0xdc>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d12d      	bne.n	8000536 <HAL_UART_RxCpltCallback+0x6e>
        received_byte = huart->pRxBuffPtr[0];  // Received byte from USART1
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80004de:	781b      	ldrb	r3, [r3, #0]
 80004e0:	72fb      	strb	r3, [r7, #11]
        circular_buffer_write(usart1_rx_buffer, &usart1_rx_head, received_byte);
 80004e2:	7afb      	ldrb	r3, [r7, #11]
 80004e4:	461a      	mov	r2, r3
 80004e6:	4930      	ldr	r1, [pc, #192]	@ (80005a8 <HAL_UART_RxCpltCallback+0xe0>)
 80004e8:	4830      	ldr	r0, [pc, #192]	@ (80005ac <HAL_UART_RxCpltCallback+0xe4>)
 80004ea:	f7ff ff92 	bl	8000412 <circular_buffer_write>

        // Check if last two bytes are CR (13) and LF (10)
        uint16_t prev_index = (usart1_rx_head + BUFFER_SIZE - 2) % BUFFER_SIZE;
 80004ee:	4b2e      	ldr	r3, [pc, #184]	@ (80005a8 <HAL_UART_RxCpltCallback+0xe0>)
 80004f0:	881b      	ldrh	r3, [r3, #0]
 80004f2:	b29b      	uxth	r3, r3
 80004f4:	337e      	adds	r3, #126	@ 0x7e
 80004f6:	425a      	negs	r2, r3
 80004f8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80004fc:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8000500:	bf58      	it	pl
 8000502:	4253      	negpl	r3, r2
 8000504:	81bb      	strh	r3, [r7, #12]
        if (usart1_rx_buffer[prev_index] == 13 && usart1_rx_buffer[usart1_rx_head - 1] == 10) {
 8000506:	89bb      	ldrh	r3, [r7, #12]
 8000508:	4a28      	ldr	r2, [pc, #160]	@ (80005ac <HAL_UART_RxCpltCallback+0xe4>)
 800050a:	5cd3      	ldrb	r3, [r2, r3]
 800050c:	2b0d      	cmp	r3, #13
 800050e:	d10a      	bne.n	8000526 <HAL_UART_RxCpltCallback+0x5e>
 8000510:	4b25      	ldr	r3, [pc, #148]	@ (80005a8 <HAL_UART_RxCpltCallback+0xe0>)
 8000512:	881b      	ldrh	r3, [r3, #0]
 8000514:	b29b      	uxth	r3, r3
 8000516:	3b01      	subs	r3, #1
 8000518:	4a24      	ldr	r2, [pc, #144]	@ (80005ac <HAL_UART_RxCpltCallback+0xe4>)
 800051a:	5cd3      	ldrb	r3, [r2, r3]
 800051c:	2b0a      	cmp	r3, #10
 800051e:	d102      	bne.n	8000526 <HAL_UART_RxCpltCallback+0x5e>
            usart1_new_message_flag = 1;  // Set new message flag
 8000520:	4b23      	ldr	r3, [pc, #140]	@ (80005b0 <HAL_UART_RxCpltCallback+0xe8>)
 8000522:	2201      	movs	r2, #1
 8000524:	701a      	strb	r2, [r3, #0]
        }
        // Ready to receive the next byte
        HAL_UART_Receive_IT(&huart1, &received_byte, 1);
 8000526:	f107 030b 	add.w	r3, r7, #11
 800052a:	2201      	movs	r2, #1
 800052c:	4619      	mov	r1, r3
 800052e:	4821      	ldr	r0, [pc, #132]	@ (80005b4 <HAL_UART_RxCpltCallback+0xec>)
 8000530:	f001 fb4f 	bl	8001bd2 <HAL_UART_Receive_IT>
        if (usart2_rx_buffer[prev_index] == 13 && usart2_rx_buffer[usart2_rx_head - 1] == 10) {
            usart2_new_message_flag = 1;
        }
        HAL_UART_Receive_IT(&huart2, &received_byte, 1);
    }
}
 8000534:	e031      	b.n	800059a <HAL_UART_RxCpltCallback+0xd2>
    else if (huart->Instance == USART2) {
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	4a1f      	ldr	r2, [pc, #124]	@ (80005b8 <HAL_UART_RxCpltCallback+0xf0>)
 800053c:	4293      	cmp	r3, r2
 800053e:	d12c      	bne.n	800059a <HAL_UART_RxCpltCallback+0xd2>
        received_byte = huart->pRxBuffPtr[0];
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000544:	781b      	ldrb	r3, [r3, #0]
 8000546:	72fb      	strb	r3, [r7, #11]
        circular_buffer_write(usart2_rx_buffer, &usart2_rx_head, received_byte);
 8000548:	7afb      	ldrb	r3, [r7, #11]
 800054a:	461a      	mov	r2, r3
 800054c:	491b      	ldr	r1, [pc, #108]	@ (80005bc <HAL_UART_RxCpltCallback+0xf4>)
 800054e:	481c      	ldr	r0, [pc, #112]	@ (80005c0 <HAL_UART_RxCpltCallback+0xf8>)
 8000550:	f7ff ff5f 	bl	8000412 <circular_buffer_write>
        uint16_t prev_index = (usart2_rx_head + BUFFER_SIZE - 2) % BUFFER_SIZE;
 8000554:	4b19      	ldr	r3, [pc, #100]	@ (80005bc <HAL_UART_RxCpltCallback+0xf4>)
 8000556:	881b      	ldrh	r3, [r3, #0]
 8000558:	b29b      	uxth	r3, r3
 800055a:	337e      	adds	r3, #126	@ 0x7e
 800055c:	425a      	negs	r2, r3
 800055e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8000562:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8000566:	bf58      	it	pl
 8000568:	4253      	negpl	r3, r2
 800056a:	81fb      	strh	r3, [r7, #14]
        if (usart2_rx_buffer[prev_index] == 13 && usart2_rx_buffer[usart2_rx_head - 1] == 10) {
 800056c:	89fb      	ldrh	r3, [r7, #14]
 800056e:	4a14      	ldr	r2, [pc, #80]	@ (80005c0 <HAL_UART_RxCpltCallback+0xf8>)
 8000570:	5cd3      	ldrb	r3, [r2, r3]
 8000572:	2b0d      	cmp	r3, #13
 8000574:	d10a      	bne.n	800058c <HAL_UART_RxCpltCallback+0xc4>
 8000576:	4b11      	ldr	r3, [pc, #68]	@ (80005bc <HAL_UART_RxCpltCallback+0xf4>)
 8000578:	881b      	ldrh	r3, [r3, #0]
 800057a:	b29b      	uxth	r3, r3
 800057c:	3b01      	subs	r3, #1
 800057e:	4a10      	ldr	r2, [pc, #64]	@ (80005c0 <HAL_UART_RxCpltCallback+0xf8>)
 8000580:	5cd3      	ldrb	r3, [r2, r3]
 8000582:	2b0a      	cmp	r3, #10
 8000584:	d102      	bne.n	800058c <HAL_UART_RxCpltCallback+0xc4>
            usart2_new_message_flag = 1;
 8000586:	4b0f      	ldr	r3, [pc, #60]	@ (80005c4 <HAL_UART_RxCpltCallback+0xfc>)
 8000588:	2201      	movs	r2, #1
 800058a:	701a      	strb	r2, [r3, #0]
        HAL_UART_Receive_IT(&huart2, &received_byte, 1);
 800058c:	f107 030b 	add.w	r3, r7, #11
 8000590:	2201      	movs	r2, #1
 8000592:	4619      	mov	r1, r3
 8000594:	480c      	ldr	r0, [pc, #48]	@ (80005c8 <HAL_UART_RxCpltCallback+0x100>)
 8000596:	f001 fb1c 	bl	8001bd2 <HAL_UART_Receive_IT>
}
 800059a:	bf00      	nop
 800059c:	3710      	adds	r7, #16
 800059e:	46bd      	mov	sp, r7
 80005a0:	bd80      	pop	{r7, pc}
 80005a2:	bf00      	nop
 80005a4:	40013800 	.word	0x40013800
 80005a8:	2000020c 	.word	0x2000020c
 80005ac:	2000010c 	.word	0x2000010c
 80005b0:	20000214 	.word	0x20000214
 80005b4:	20000078 	.word	0x20000078
 80005b8:	40004400 	.word	0x40004400
 80005bc:	20000210 	.word	0x20000210
 80005c0:	2000018c 	.word	0x2000018c
 80005c4:	20000215 	.word	0x20000215
 80005c8:	200000b8 	.word	0x200000b8

080005cc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005cc:	b580      	push	{r7, lr}
 80005ce:	b082      	sub	sp, #8
 80005d0:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005d2:	f000 fad1 	bl	8000b78 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005d6:	f000 f849 	bl	800066c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005da:	f000 f8d7 	bl	800078c <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80005de:	f000 f881 	bl	80006e4 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80005e2:	f000 f8a9 	bl	8000738 <MX_USART2_UART_Init>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  uint8_t temp_byte;
  HAL_UART_Receive_IT(&huart1, &temp_byte, 1);
 80005e6:	1dfb      	adds	r3, r7, #7
 80005e8:	2201      	movs	r2, #1
 80005ea:	4619      	mov	r1, r3
 80005ec:	481a      	ldr	r0, [pc, #104]	@ (8000658 <label_end+0x6>)
 80005ee:	f001 faf0 	bl	8001bd2 <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart2, &temp_byte, 1);
 80005f2:	1dfb      	adds	r3, r7, #7
 80005f4:	2201      	movs	r2, #1
 80005f6:	4619      	mov	r1, r3
 80005f8:	4818      	ldr	r0, [pc, #96]	@ (800065c <label_end+0xa>)
 80005fa:	f001 faea 	bl	8001bd2 <HAL_UART_Receive_IT>
  while (1)
  {
      check_USART_1_routine();
 80005fe:	f7ff fdcd 	bl	800019c <check_USART_1_routine>
      check_USART_2_routine();
 8000602:	f7ff fe13 	bl	800022c <check_USART_2_routine>
      check_send_flags();
 8000606:	f7ff fdb3 	bl	8000170 <check_send_flags>
      check_FIFO_queue();
 800060a:	f7ff fe49 	bl	80002a0 <check_FIFO_queue>
      asm("nop \n"
 800060e:	bf00      	nop
 8000610:	4a13      	ldr	r2, [pc, #76]	@ (8000660 <label_end+0xe>)
 8000612:	6813      	ldr	r3, [r2, #0]
 8000614:	2b01      	cmp	r3, #1
 8000616:	d000      	beq.n	800061a <msgsrv_inc>
 8000618:	e01b      	b.n	8000652 <label_end>

0800061a <msgsrv_inc>:
 800061a:	f04f 0000 	mov.w	r0, #0
 800061e:	4910      	ldr	r1, [pc, #64]	@ (8000660 <label_end+0xe>)
 8000620:	6008      	str	r0, [r1, #0]
 8000622:	4a10      	ldr	r2, [pc, #64]	@ (8000664 <label_end+0x12>)
 8000624:	6813      	ldr	r3, [r2, #0]
 8000626:	f04f 0401 	mov.w	r4, #1
 800062a:	42a3      	cmp	r3, r4
 800062c:	d004      	beq.n	8000638 <else_label1>
 800062e:	f04f 0000 	mov.w	r0, #0
 8000632:	490c      	ldr	r1, [pc, #48]	@ (8000664 <label_end+0x12>)
 8000634:	6008      	str	r0, [r1, #0]
 8000636:	e007      	b.n	8000648 <end_label1>

08000638 <else_label1>:
 8000638:	f04f 0001 	mov.w	r0, #1
 800063c:	4909      	ldr	r1, [pc, #36]	@ (8000664 <label_end+0x12>)
 800063e:	6008      	str	r0, [r1, #0]
 8000640:	f04f 0001 	mov.w	r0, #1
 8000644:	4908      	ldr	r1, [pc, #32]	@ (8000668 <label_end+0x16>)
 8000646:	6008      	str	r0, [r1, #0]

08000648 <end_label1>:
 8000648:	f04f 0001 	mov.w	r0, #1
 800064c:	4904      	ldr	r1, [pc, #16]	@ (8000660 <label_end+0xe>)
 800064e:	6008      	str	r0, [r1, #0]
 8000650:	4770      	bx	lr

08000652 <label_end>:
      check_USART_1_routine();
 8000652:	bf00      	nop
 8000654:	e7d3      	b.n	80005fe <main+0x32>
 8000656:	bf00      	nop
 8000658:	20000078 	.word	0x20000078
 800065c:	200000b8 	.word	0x200000b8
 8000660:	20000217 	.word	0x20000217
 8000664:	20000218 	.word	0x20000218
 8000668:	20000216 	.word	0x20000216

0800066c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800066c:	b580      	push	{r7, lr}
 800066e:	b090      	sub	sp, #64	@ 0x40
 8000670:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000672:	f107 0318 	add.w	r3, r7, #24
 8000676:	2228      	movs	r2, #40	@ 0x28
 8000678:	2100      	movs	r1, #0
 800067a:	4618      	mov	r0, r3
 800067c:	f001 fe38 	bl	80022f0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000680:	1d3b      	adds	r3, r7, #4
 8000682:	2200      	movs	r2, #0
 8000684:	601a      	str	r2, [r3, #0]
 8000686:	605a      	str	r2, [r3, #4]
 8000688:	609a      	str	r2, [r3, #8]
 800068a:	60da      	str	r2, [r3, #12]
 800068c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800068e:	2302      	movs	r3, #2
 8000690:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000692:	2301      	movs	r3, #1
 8000694:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000696:	2310      	movs	r3, #16
 8000698:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800069a:	2300      	movs	r3, #0
 800069c:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800069e:	f107 0318 	add.w	r3, r7, #24
 80006a2:	4618      	mov	r0, r3
 80006a4:	f000 fdea 	bl	800127c <HAL_RCC_OscConfig>
 80006a8:	4603      	mov	r3, r0
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	d001      	beq.n	80006b2 <SystemClock_Config+0x46>
  {
    Error_Handler();
 80006ae:	f000 f8c7 	bl	8000840 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006b2:	230f      	movs	r3, #15
 80006b4:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80006b6:	2300      	movs	r3, #0
 80006b8:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80006ba:	2300      	movs	r3, #0
 80006bc:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80006be:	2300      	movs	r3, #0
 80006c0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80006c2:	2300      	movs	r3, #0
 80006c4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80006c6:	1d3b      	adds	r3, r7, #4
 80006c8:	2100      	movs	r1, #0
 80006ca:	4618      	mov	r0, r3
 80006cc:	f001 f858 	bl	8001780 <HAL_RCC_ClockConfig>
 80006d0:	4603      	mov	r3, r0
 80006d2:	2b00      	cmp	r3, #0
 80006d4:	d001      	beq.n	80006da <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80006d6:	f000 f8b3 	bl	8000840 <Error_Handler>
  }
}
 80006da:	bf00      	nop
 80006dc:	3740      	adds	r7, #64	@ 0x40
 80006de:	46bd      	mov	sp, r7
 80006e0:	bd80      	pop	{r7, pc}
	...

080006e4 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80006e4:	b580      	push	{r7, lr}
 80006e6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80006e8:	4b11      	ldr	r3, [pc, #68]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 80006ea:	4a12      	ldr	r2, [pc, #72]	@ (8000734 <MX_USART1_UART_Init+0x50>)
 80006ec:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 80006ee:	4b10      	ldr	r3, [pc, #64]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 80006f0:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 80006f4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80006f6:	4b0e      	ldr	r3, [pc, #56]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 80006f8:	2200      	movs	r2, #0
 80006fa:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_2;
 80006fc:	4b0c      	ldr	r3, [pc, #48]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 80006fe:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000702:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000704:	4b0a      	ldr	r3, [pc, #40]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 8000706:	2200      	movs	r2, #0
 8000708:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800070a:	4b09      	ldr	r3, [pc, #36]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 800070c:	220c      	movs	r2, #12
 800070e:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000710:	4b07      	ldr	r3, [pc, #28]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 8000712:	2200      	movs	r2, #0
 8000714:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000716:	4b06      	ldr	r3, [pc, #24]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 8000718:	2200      	movs	r2, #0
 800071a:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800071c:	4804      	ldr	r0, [pc, #16]	@ (8000730 <MX_USART1_UART_Init+0x4c>)
 800071e:	f001 f9c7 	bl	8001ab0 <HAL_UART_Init>
 8000722:	4603      	mov	r3, r0
 8000724:	2b00      	cmp	r3, #0
 8000726:	d001      	beq.n	800072c <MX_USART1_UART_Init+0x48>
  {
    Error_Handler();
 8000728:	f000 f88a 	bl	8000840 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800072c:	bf00      	nop
 800072e:	bd80      	pop	{r7, pc}
 8000730:	20000078 	.word	0x20000078
 8000734:	40013800 	.word	0x40013800

08000738 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000738:	b580      	push	{r7, lr}
 800073a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800073c:	4b11      	ldr	r3, [pc, #68]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 800073e:	4a12      	ldr	r2, [pc, #72]	@ (8000788 <MX_USART2_UART_Init+0x50>)
 8000740:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000742:	4b10      	ldr	r3, [pc, #64]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 8000744:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8000748:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800074a:	4b0e      	ldr	r3, [pc, #56]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 800074c:	2200      	movs	r2, #0
 800074e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_2;
 8000750:	4b0c      	ldr	r3, [pc, #48]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 8000752:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000756:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000758:	4b0a      	ldr	r3, [pc, #40]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 800075a:	2200      	movs	r2, #0
 800075c:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800075e:	4b09      	ldr	r3, [pc, #36]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 8000760:	220c      	movs	r2, #12
 8000762:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000764:	4b07      	ldr	r3, [pc, #28]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 8000766:	2200      	movs	r2, #0
 8000768:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800076a:	4b06      	ldr	r3, [pc, #24]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 800076c:	2200      	movs	r2, #0
 800076e:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000770:	4804      	ldr	r0, [pc, #16]	@ (8000784 <MX_USART2_UART_Init+0x4c>)
 8000772:	f001 f99d 	bl	8001ab0 <HAL_UART_Init>
 8000776:	4603      	mov	r3, r0
 8000778:	2b00      	cmp	r3, #0
 800077a:	d001      	beq.n	8000780 <MX_USART2_UART_Init+0x48>
  {
    Error_Handler();
 800077c:	f000 f860 	bl	8000840 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000780:	bf00      	nop
 8000782:	bd80      	pop	{r7, pc}
 8000784:	200000b8 	.word	0x200000b8
 8000788:	40004400 	.word	0x40004400

0800078c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800078c:	b580      	push	{r7, lr}
 800078e:	b088      	sub	sp, #32
 8000790:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000792:	f107 0310 	add.w	r3, r7, #16
 8000796:	2200      	movs	r2, #0
 8000798:	601a      	str	r2, [r3, #0]
 800079a:	605a      	str	r2, [r3, #4]
 800079c:	609a      	str	r2, [r3, #8]
 800079e:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80007a0:	4b24      	ldr	r3, [pc, #144]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007a2:	699b      	ldr	r3, [r3, #24]
 80007a4:	4a23      	ldr	r2, [pc, #140]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007a6:	f043 0310 	orr.w	r3, r3, #16
 80007aa:	6193      	str	r3, [r2, #24]
 80007ac:	4b21      	ldr	r3, [pc, #132]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007ae:	699b      	ldr	r3, [r3, #24]
 80007b0:	f003 0310 	and.w	r3, r3, #16
 80007b4:	60fb      	str	r3, [r7, #12]
 80007b6:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007b8:	4b1e      	ldr	r3, [pc, #120]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007ba:	699b      	ldr	r3, [r3, #24]
 80007bc:	4a1d      	ldr	r2, [pc, #116]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007be:	f043 0304 	orr.w	r3, r3, #4
 80007c2:	6193      	str	r3, [r2, #24]
 80007c4:	4b1b      	ldr	r3, [pc, #108]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007c6:	699b      	ldr	r3, [r3, #24]
 80007c8:	f003 0304 	and.w	r3, r3, #4
 80007cc:	60bb      	str	r3, [r7, #8]
 80007ce:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007d0:	4b18      	ldr	r3, [pc, #96]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007d2:	699b      	ldr	r3, [r3, #24]
 80007d4:	4a17      	ldr	r2, [pc, #92]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007d6:	f043 0308 	orr.w	r3, r3, #8
 80007da:	6193      	str	r3, [r2, #24]
 80007dc:	4b15      	ldr	r3, [pc, #84]	@ (8000834 <MX_GPIO_Init+0xa8>)
 80007de:	699b      	ldr	r3, [r3, #24]
 80007e0:	f003 0308 	and.w	r3, r3, #8
 80007e4:	607b      	str	r3, [r7, #4]
 80007e6:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80007e8:	2200      	movs	r2, #0
 80007ea:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80007ee:	4812      	ldr	r0, [pc, #72]	@ (8000838 <MX_GPIO_Init+0xac>)
 80007f0:	f000 fd2c 	bl	800124c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 80007f4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80007f8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80007fa:	2301      	movs	r3, #1
 80007fc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007fe:	2300      	movs	r3, #0
 8000800:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000802:	2302      	movs	r3, #2
 8000804:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000806:	f107 0310 	add.w	r3, r7, #16
 800080a:	4619      	mov	r1, r3
 800080c:	480a      	ldr	r0, [pc, #40]	@ (8000838 <MX_GPIO_Init+0xac>)
 800080e:	f000 fb99 	bl	8000f44 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB12 */
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000812:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000816:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000818:	2300      	movs	r3, #0
 800081a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800081c:	2301      	movs	r3, #1
 800081e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000820:	f107 0310 	add.w	r3, r7, #16
 8000824:	4619      	mov	r1, r3
 8000826:	4805      	ldr	r0, [pc, #20]	@ (800083c <MX_GPIO_Init+0xb0>)
 8000828:	f000 fb8c 	bl	8000f44 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800082c:	bf00      	nop
 800082e:	3720      	adds	r7, #32
 8000830:	46bd      	mov	sp, r7
 8000832:	bd80      	pop	{r7, pc}
 8000834:	40021000 	.word	0x40021000
 8000838:	40011000 	.word	0x40011000
 800083c:	40010c00 	.word	0x40010c00

08000840 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000840:	b480      	push	{r7}
 8000842:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000844:	b672      	cpsid	i
}
 8000846:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000848:	bf00      	nop
 800084a:	e7fd      	b.n	8000848 <Error_Handler+0x8>

0800084c <HAL_MspInit>:
 800084c:	b480      	push	{r7}
 800084e:	b085      	sub	sp, #20
 8000850:	af00      	add	r7, sp, #0
 8000852:	4b15      	ldr	r3, [pc, #84]	@ (80008a8 <HAL_MspInit+0x5c>)
 8000854:	699b      	ldr	r3, [r3, #24]
 8000856:	4a14      	ldr	r2, [pc, #80]	@ (80008a8 <HAL_MspInit+0x5c>)
 8000858:	f043 0301 	orr.w	r3, r3, #1
 800085c:	6193      	str	r3, [r2, #24]
 800085e:	4b12      	ldr	r3, [pc, #72]	@ (80008a8 <HAL_MspInit+0x5c>)
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	f003 0301 	and.w	r3, r3, #1
 8000866:	60bb      	str	r3, [r7, #8]
 8000868:	68bb      	ldr	r3, [r7, #8]
 800086a:	4b0f      	ldr	r3, [pc, #60]	@ (80008a8 <HAL_MspInit+0x5c>)
 800086c:	69db      	ldr	r3, [r3, #28]
 800086e:	4a0e      	ldr	r2, [pc, #56]	@ (80008a8 <HAL_MspInit+0x5c>)
 8000870:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000874:	61d3      	str	r3, [r2, #28]
 8000876:	4b0c      	ldr	r3, [pc, #48]	@ (80008a8 <HAL_MspInit+0x5c>)
 8000878:	69db      	ldr	r3, [r3, #28]
 800087a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800087e:	607b      	str	r3, [r7, #4]
 8000880:	687b      	ldr	r3, [r7, #4]
 8000882:	4b0a      	ldr	r3, [pc, #40]	@ (80008ac <HAL_MspInit+0x60>)
 8000884:	685b      	ldr	r3, [r3, #4]
 8000886:	60fb      	str	r3, [r7, #12]
 8000888:	68fb      	ldr	r3, [r7, #12]
 800088a:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 800088e:	60fb      	str	r3, [r7, #12]
 8000890:	68fb      	ldr	r3, [r7, #12]
 8000892:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000896:	60fb      	str	r3, [r7, #12]
 8000898:	4a04      	ldr	r2, [pc, #16]	@ (80008ac <HAL_MspInit+0x60>)
 800089a:	68fb      	ldr	r3, [r7, #12]
 800089c:	6053      	str	r3, [r2, #4]
 800089e:	bf00      	nop
 80008a0:	3714      	adds	r7, #20
 80008a2:	46bd      	mov	sp, r7
 80008a4:	bc80      	pop	{r7}
 80008a6:	4770      	bx	lr
 80008a8:	40021000 	.word	0x40021000
 80008ac:	40010000 	.word	0x40010000

080008b0 <HAL_UART_MspInit>:
 80008b0:	b580      	push	{r7, lr}
 80008b2:	b08a      	sub	sp, #40	@ 0x28
 80008b4:	af00      	add	r7, sp, #0
 80008b6:	6078      	str	r0, [r7, #4]
 80008b8:	f107 0318 	add.w	r3, r7, #24
 80008bc:	2200      	movs	r2, #0
 80008be:	601a      	str	r2, [r3, #0]
 80008c0:	605a      	str	r2, [r3, #4]
 80008c2:	609a      	str	r2, [r3, #8]
 80008c4:	60da      	str	r2, [r3, #12]
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	681b      	ldr	r3, [r3, #0]
 80008ca:	4a3f      	ldr	r2, [pc, #252]	@ (80009c8 <HAL_UART_MspInit+0x118>)
 80008cc:	4293      	cmp	r3, r2
 80008ce:	d13a      	bne.n	8000946 <HAL_UART_MspInit+0x96>
 80008d0:	4b3e      	ldr	r3, [pc, #248]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 80008d2:	699b      	ldr	r3, [r3, #24]
 80008d4:	4a3d      	ldr	r2, [pc, #244]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 80008d6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80008da:	6193      	str	r3, [r2, #24]
 80008dc:	4b3b      	ldr	r3, [pc, #236]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 80008de:	699b      	ldr	r3, [r3, #24]
 80008e0:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80008e4:	617b      	str	r3, [r7, #20]
 80008e6:	697b      	ldr	r3, [r7, #20]
 80008e8:	4b38      	ldr	r3, [pc, #224]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 80008ea:	699b      	ldr	r3, [r3, #24]
 80008ec:	4a37      	ldr	r2, [pc, #220]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 80008ee:	f043 0304 	orr.w	r3, r3, #4
 80008f2:	6193      	str	r3, [r2, #24]
 80008f4:	4b35      	ldr	r3, [pc, #212]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 80008f6:	699b      	ldr	r3, [r3, #24]
 80008f8:	f003 0304 	and.w	r3, r3, #4
 80008fc:	613b      	str	r3, [r7, #16]
 80008fe:	693b      	ldr	r3, [r7, #16]
 8000900:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000904:	61bb      	str	r3, [r7, #24]
 8000906:	2302      	movs	r3, #2
 8000908:	61fb      	str	r3, [r7, #28]
 800090a:	2303      	movs	r3, #3
 800090c:	627b      	str	r3, [r7, #36]	@ 0x24
 800090e:	f107 0318 	add.w	r3, r7, #24
 8000912:	4619      	mov	r1, r3
 8000914:	482e      	ldr	r0, [pc, #184]	@ (80009d0 <HAL_UART_MspInit+0x120>)
 8000916:	f000 fb15 	bl	8000f44 <HAL_GPIO_Init>
 800091a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800091e:	61bb      	str	r3, [r7, #24]
 8000920:	2300      	movs	r3, #0
 8000922:	61fb      	str	r3, [r7, #28]
 8000924:	2300      	movs	r3, #0
 8000926:	623b      	str	r3, [r7, #32]
 8000928:	f107 0318 	add.w	r3, r7, #24
 800092c:	4619      	mov	r1, r3
 800092e:	4828      	ldr	r0, [pc, #160]	@ (80009d0 <HAL_UART_MspInit+0x120>)
 8000930:	f000 fb08 	bl	8000f44 <HAL_GPIO_Init>
 8000934:	2200      	movs	r2, #0
 8000936:	2100      	movs	r1, #0
 8000938:	2025      	movs	r0, #37	@ 0x25
 800093a:	f000 fa56 	bl	8000dea <HAL_NVIC_SetPriority>
 800093e:	2025      	movs	r0, #37	@ 0x25
 8000940:	f000 fa6f 	bl	8000e22 <HAL_NVIC_EnableIRQ>
 8000944:	e03c      	b.n	80009c0 <HAL_UART_MspInit+0x110>
 8000946:	687b      	ldr	r3, [r7, #4]
 8000948:	681b      	ldr	r3, [r3, #0]
 800094a:	4a22      	ldr	r2, [pc, #136]	@ (80009d4 <HAL_UART_MspInit+0x124>)
 800094c:	4293      	cmp	r3, r2
 800094e:	d137      	bne.n	80009c0 <HAL_UART_MspInit+0x110>
 8000950:	4b1e      	ldr	r3, [pc, #120]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 8000952:	69db      	ldr	r3, [r3, #28]
 8000954:	4a1d      	ldr	r2, [pc, #116]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 8000956:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800095a:	61d3      	str	r3, [r2, #28]
 800095c:	4b1b      	ldr	r3, [pc, #108]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 800095e:	69db      	ldr	r3, [r3, #28]
 8000960:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000964:	60fb      	str	r3, [r7, #12]
 8000966:	68fb      	ldr	r3, [r7, #12]
 8000968:	4b18      	ldr	r3, [pc, #96]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 800096a:	699b      	ldr	r3, [r3, #24]
 800096c:	4a17      	ldr	r2, [pc, #92]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 800096e:	f043 0304 	orr.w	r3, r3, #4
 8000972:	6193      	str	r3, [r2, #24]
 8000974:	4b15      	ldr	r3, [pc, #84]	@ (80009cc <HAL_UART_MspInit+0x11c>)
 8000976:	699b      	ldr	r3, [r3, #24]
 8000978:	f003 0304 	and.w	r3, r3, #4
 800097c:	60bb      	str	r3, [r7, #8]
 800097e:	68bb      	ldr	r3, [r7, #8]
 8000980:	2304      	movs	r3, #4
 8000982:	61bb      	str	r3, [r7, #24]
 8000984:	2302      	movs	r3, #2
 8000986:	61fb      	str	r3, [r7, #28]
 8000988:	2303      	movs	r3, #3
 800098a:	627b      	str	r3, [r7, #36]	@ 0x24
 800098c:	f107 0318 	add.w	r3, r7, #24
 8000990:	4619      	mov	r1, r3
 8000992:	480f      	ldr	r0, [pc, #60]	@ (80009d0 <HAL_UART_MspInit+0x120>)
 8000994:	f000 fad6 	bl	8000f44 <HAL_GPIO_Init>
 8000998:	2308      	movs	r3, #8
 800099a:	61bb      	str	r3, [r7, #24]
 800099c:	2300      	movs	r3, #0
 800099e:	61fb      	str	r3, [r7, #28]
 80009a0:	2300      	movs	r3, #0
 80009a2:	623b      	str	r3, [r7, #32]
 80009a4:	f107 0318 	add.w	r3, r7, #24
 80009a8:	4619      	mov	r1, r3
 80009aa:	4809      	ldr	r0, [pc, #36]	@ (80009d0 <HAL_UART_MspInit+0x120>)
 80009ac:	f000 faca 	bl	8000f44 <HAL_GPIO_Init>
 80009b0:	2200      	movs	r2, #0
 80009b2:	2100      	movs	r1, #0
 80009b4:	2026      	movs	r0, #38	@ 0x26
 80009b6:	f000 fa18 	bl	8000dea <HAL_NVIC_SetPriority>
 80009ba:	2026      	movs	r0, #38	@ 0x26
 80009bc:	f000 fa31 	bl	8000e22 <HAL_NVIC_EnableIRQ>
 80009c0:	bf00      	nop
 80009c2:	3728      	adds	r7, #40	@ 0x28
 80009c4:	46bd      	mov	sp, r7
 80009c6:	bd80      	pop	{r7, pc}
 80009c8:	40013800 	.word	0x40013800
 80009cc:	40021000 	.word	0x40021000
 80009d0:	40010800 	.word	0x40010800
 80009d4:	40004400 	.word	0x40004400

080009d8 <NMI_Handler>:
 80009d8:	b480      	push	{r7}
 80009da:	af00      	add	r7, sp, #0
 80009dc:	bf00      	nop
 80009de:	e7fd      	b.n	80009dc <NMI_Handler+0x4>

080009e0 <HardFault_Handler>:
 80009e0:	b480      	push	{r7}
 80009e2:	af00      	add	r7, sp, #0
 80009e4:	bf00      	nop
 80009e6:	e7fd      	b.n	80009e4 <HardFault_Handler+0x4>

080009e8 <MemManage_Handler>:
 80009e8:	b480      	push	{r7}
 80009ea:	af00      	add	r7, sp, #0
 80009ec:	bf00      	nop
 80009ee:	e7fd      	b.n	80009ec <MemManage_Handler+0x4>

080009f0 <BusFault_Handler>:
 80009f0:	b480      	push	{r7}
 80009f2:	af00      	add	r7, sp, #0
 80009f4:	bf00      	nop
 80009f6:	e7fd      	b.n	80009f4 <BusFault_Handler+0x4>

080009f8 <UsageFault_Handler>:
 80009f8:	b480      	push	{r7}
 80009fa:	af00      	add	r7, sp, #0
 80009fc:	bf00      	nop
 80009fe:	e7fd      	b.n	80009fc <UsageFault_Handler+0x4>

08000a00 <SVC_Handler>:
 8000a00:	b480      	push	{r7}
 8000a02:	af00      	add	r7, sp, #0
 8000a04:	bf00      	nop
 8000a06:	46bd      	mov	sp, r7
 8000a08:	bc80      	pop	{r7}
 8000a0a:	4770      	bx	lr

08000a0c <DebugMon_Handler>:
 8000a0c:	b480      	push	{r7}
 8000a0e:	af00      	add	r7, sp, #0
 8000a10:	bf00      	nop
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bc80      	pop	{r7}
 8000a16:	4770      	bx	lr

08000a18 <PendSV_Handler>:
 8000a18:	b480      	push	{r7}
 8000a1a:	af00      	add	r7, sp, #0
 8000a1c:	bf00      	nop
 8000a1e:	46bd      	mov	sp, r7
 8000a20:	bc80      	pop	{r7}
 8000a22:	4770      	bx	lr

08000a24 <SysTick_Handler>:
 8000a24:	b580      	push	{r7, lr}
 8000a26:	af00      	add	r7, sp, #0
 8000a28:	f000 f8ec 	bl	8000c04 <HAL_IncTick>
 8000a2c:	bf00      	nop
 8000a2e:	bd80      	pop	{r7, pc}

08000a30 <USART1_IRQHandler>:
 8000a30:	b580      	push	{r7, lr}
 8000a32:	af00      	add	r7, sp, #0
 8000a34:	4802      	ldr	r0, [pc, #8]	@ (8000a40 <USART1_IRQHandler+0x10>)
 8000a36:	f001 f921 	bl	8001c7c <HAL_UART_IRQHandler>
 8000a3a:	bf00      	nop
 8000a3c:	bd80      	pop	{r7, pc}
 8000a3e:	bf00      	nop
 8000a40:	20000078 	.word	0x20000078

08000a44 <USART2_IRQHandler>:
 8000a44:	b580      	push	{r7, lr}
 8000a46:	af00      	add	r7, sp, #0
 8000a48:	4802      	ldr	r0, [pc, #8]	@ (8000a54 <USART2_IRQHandler+0x10>)
 8000a4a:	f001 f917 	bl	8001c7c <HAL_UART_IRQHandler>
 8000a4e:	bf00      	nop
 8000a50:	bd80      	pop	{r7, pc}
 8000a52:	bf00      	nop
 8000a54:	200000b8 	.word	0x200000b8

08000a58 <_sbrk>:
 8000a58:	b580      	push	{r7, lr}
 8000a5a:	b086      	sub	sp, #24
 8000a5c:	af00      	add	r7, sp, #0
 8000a5e:	6078      	str	r0, [r7, #4]
 8000a60:	4a14      	ldr	r2, [pc, #80]	@ (8000ab4 <_sbrk+0x5c>)
 8000a62:	4b15      	ldr	r3, [pc, #84]	@ (8000ab8 <_sbrk+0x60>)
 8000a64:	1ad3      	subs	r3, r2, r3
 8000a66:	617b      	str	r3, [r7, #20]
 8000a68:	697b      	ldr	r3, [r7, #20]
 8000a6a:	613b      	str	r3, [r7, #16]
 8000a6c:	4b13      	ldr	r3, [pc, #76]	@ (8000abc <_sbrk+0x64>)
 8000a6e:	681b      	ldr	r3, [r3, #0]
 8000a70:	2b00      	cmp	r3, #0
 8000a72:	d102      	bne.n	8000a7a <_sbrk+0x22>
 8000a74:	4b11      	ldr	r3, [pc, #68]	@ (8000abc <_sbrk+0x64>)
 8000a76:	4a12      	ldr	r2, [pc, #72]	@ (8000ac0 <_sbrk+0x68>)
 8000a78:	601a      	str	r2, [r3, #0]
 8000a7a:	4b10      	ldr	r3, [pc, #64]	@ (8000abc <_sbrk+0x64>)
 8000a7c:	681a      	ldr	r2, [r3, #0]
 8000a7e:	687b      	ldr	r3, [r7, #4]
 8000a80:	4413      	add	r3, r2
 8000a82:	693a      	ldr	r2, [r7, #16]
 8000a84:	429a      	cmp	r2, r3
 8000a86:	d207      	bcs.n	8000a98 <_sbrk+0x40>
 8000a88:	f001 fc3a 	bl	8002300 <__errno>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	220c      	movs	r2, #12
 8000a90:	601a      	str	r2, [r3, #0]
 8000a92:	f04f 33ff 	mov.w	r3, #4294967295
 8000a96:	e009      	b.n	8000aac <_sbrk+0x54>
 8000a98:	4b08      	ldr	r3, [pc, #32]	@ (8000abc <_sbrk+0x64>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	60fb      	str	r3, [r7, #12]
 8000a9e:	4b07      	ldr	r3, [pc, #28]	@ (8000abc <_sbrk+0x64>)
 8000aa0:	681a      	ldr	r2, [r3, #0]
 8000aa2:	687b      	ldr	r3, [r7, #4]
 8000aa4:	4413      	add	r3, r2
 8000aa6:	4a05      	ldr	r2, [pc, #20]	@ (8000abc <_sbrk+0x64>)
 8000aa8:	6013      	str	r3, [r2, #0]
 8000aaa:	68fb      	ldr	r3, [r7, #12]
 8000aac:	4618      	mov	r0, r3
 8000aae:	3718      	adds	r7, #24
 8000ab0:	46bd      	mov	sp, r7
 8000ab2:	bd80      	pop	{r7, pc}
 8000ab4:	20005000 	.word	0x20005000
 8000ab8:	00000400 	.word	0x00000400
 8000abc:	2000029c 	.word	0x2000029c
 8000ac0:	200003f0 	.word	0x200003f0

08000ac4 <SystemInit>:
 8000ac4:	b480      	push	{r7}
 8000ac6:	af00      	add	r7, sp, #0
 8000ac8:	4b15      	ldr	r3, [pc, #84]	@ (8000b20 <SystemInit+0x5c>)
 8000aca:	681b      	ldr	r3, [r3, #0]
 8000acc:	4a14      	ldr	r2, [pc, #80]	@ (8000b20 <SystemInit+0x5c>)
 8000ace:	f043 0301 	orr.w	r3, r3, #1
 8000ad2:	6013      	str	r3, [r2, #0]
 8000ad4:	4b12      	ldr	r3, [pc, #72]	@ (8000b20 <SystemInit+0x5c>)
 8000ad6:	685a      	ldr	r2, [r3, #4]
 8000ad8:	4911      	ldr	r1, [pc, #68]	@ (8000b20 <SystemInit+0x5c>)
 8000ada:	4b12      	ldr	r3, [pc, #72]	@ (8000b24 <SystemInit+0x60>)
 8000adc:	4013      	ands	r3, r2
 8000ade:	604b      	str	r3, [r1, #4]
 8000ae0:	4b0f      	ldr	r3, [pc, #60]	@ (8000b20 <SystemInit+0x5c>)
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	4a0e      	ldr	r2, [pc, #56]	@ (8000b20 <SystemInit+0x5c>)
 8000ae6:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
 8000aea:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000aee:	6013      	str	r3, [r2, #0]
 8000af0:	4b0b      	ldr	r3, [pc, #44]	@ (8000b20 <SystemInit+0x5c>)
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	4a0a      	ldr	r2, [pc, #40]	@ (8000b20 <SystemInit+0x5c>)
 8000af6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8000afa:	6013      	str	r3, [r2, #0]
 8000afc:	4b08      	ldr	r3, [pc, #32]	@ (8000b20 <SystemInit+0x5c>)
 8000afe:	685b      	ldr	r3, [r3, #4]
 8000b00:	4a07      	ldr	r2, [pc, #28]	@ (8000b20 <SystemInit+0x5c>)
 8000b02:	f423 03fe 	bic.w	r3, r3, #8323072	@ 0x7f0000
 8000b06:	6053      	str	r3, [r2, #4]
 8000b08:	4b05      	ldr	r3, [pc, #20]	@ (8000b20 <SystemInit+0x5c>)
 8000b0a:	f44f 021f 	mov.w	r2, #10420224	@ 0x9f0000
 8000b0e:	609a      	str	r2, [r3, #8]
 8000b10:	4b05      	ldr	r3, [pc, #20]	@ (8000b28 <SystemInit+0x64>)
 8000b12:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8000b16:	609a      	str	r2, [r3, #8]
 8000b18:	bf00      	nop
 8000b1a:	46bd      	mov	sp, r7
 8000b1c:	bc80      	pop	{r7}
 8000b1e:	4770      	bx	lr
 8000b20:	40021000 	.word	0x40021000
 8000b24:	f8ff0000 	.word	0xf8ff0000
 8000b28:	e000ed00 	.word	0xe000ed00

08000b2c <Reset_Handler>:
 8000b2c:	2100      	movs	r1, #0
 8000b2e:	e003      	b.n	8000b38 <LoopCopyDataInit>

08000b30 <CopyDataInit>:
 8000b30:	4b0b      	ldr	r3, [pc, #44]	@ (8000b60 <LoopFillZerobss+0x14>)
 8000b32:	585b      	ldr	r3, [r3, r1]
 8000b34:	5043      	str	r3, [r0, r1]
 8000b36:	3104      	adds	r1, #4

08000b38 <LoopCopyDataInit>:
 8000b38:	480a      	ldr	r0, [pc, #40]	@ (8000b64 <LoopFillZerobss+0x18>)
 8000b3a:	4b0b      	ldr	r3, [pc, #44]	@ (8000b68 <LoopFillZerobss+0x1c>)
 8000b3c:	1842      	adds	r2, r0, r1
 8000b3e:	429a      	cmp	r2, r3
 8000b40:	d3f6      	bcc.n	8000b30 <CopyDataInit>
 8000b42:	4a0a      	ldr	r2, [pc, #40]	@ (8000b6c <LoopFillZerobss+0x20>)
 8000b44:	e002      	b.n	8000b4c <LoopFillZerobss>

08000b46 <FillZerobss>:
 8000b46:	2300      	movs	r3, #0
 8000b48:	f842 3b04 	str.w	r3, [r2], #4

08000b4c <LoopFillZerobss>:
 8000b4c:	4b08      	ldr	r3, [pc, #32]	@ (8000b70 <LoopFillZerobss+0x24>)
 8000b4e:	429a      	cmp	r2, r3
 8000b50:	d3f9      	bcc.n	8000b46 <FillZerobss>
 8000b52:	f7ff ffb7 	bl	8000ac4 <SystemInit>
 8000b56:	f001 fbd9 	bl	800230c <__libc_init_array>
 8000b5a:	f7ff fd37 	bl	80005cc <main>
 8000b5e:	4770      	bx	lr
 8000b60:	08002ca8 	.word	0x08002ca8
 8000b64:	20000000 	.word	0x20000000
 8000b68:	2000005c 	.word	0x2000005c
 8000b6c:	2000005c 	.word	0x2000005c
 8000b70:	200003ec 	.word	0x200003ec

08000b74 <ADC1_2_IRQHandler>:
 8000b74:	e7fe      	b.n	8000b74 <ADC1_2_IRQHandler>
	...

08000b78 <HAL_Init>:
 8000b78:	b580      	push	{r7, lr}
 8000b7a:	af00      	add	r7, sp, #0
 8000b7c:	4b08      	ldr	r3, [pc, #32]	@ (8000ba0 <HAL_Init+0x28>)
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	4a07      	ldr	r2, [pc, #28]	@ (8000ba0 <HAL_Init+0x28>)
 8000b82:	f043 0310 	orr.w	r3, r3, #16
 8000b86:	6013      	str	r3, [r2, #0]
 8000b88:	2003      	movs	r0, #3
 8000b8a:	f000 f923 	bl	8000dd4 <HAL_NVIC_SetPriorityGrouping>
 8000b8e:	200f      	movs	r0, #15
 8000b90:	f000 f808 	bl	8000ba4 <HAL_InitTick>
 8000b94:	f7ff fe5a 	bl	800084c <HAL_MspInit>
 8000b98:	2300      	movs	r3, #0
 8000b9a:	4618      	mov	r0, r3
 8000b9c:	bd80      	pop	{r7, pc}
 8000b9e:	bf00      	nop
 8000ba0:	40022000 	.word	0x40022000

08000ba4 <HAL_InitTick>:
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b082      	sub	sp, #8
 8000ba8:	af00      	add	r7, sp, #0
 8000baa:	6078      	str	r0, [r7, #4]
 8000bac:	4b12      	ldr	r3, [pc, #72]	@ (8000bf8 <HAL_InitTick+0x54>)
 8000bae:	681a      	ldr	r2, [r3, #0]
 8000bb0:	4b12      	ldr	r3, [pc, #72]	@ (8000bfc <HAL_InitTick+0x58>)
 8000bb2:	781b      	ldrb	r3, [r3, #0]
 8000bb4:	4619      	mov	r1, r3
 8000bb6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000bba:	fbb3 f3f1 	udiv	r3, r3, r1
 8000bbe:	fbb2 f3f3 	udiv	r3, r2, r3
 8000bc2:	4618      	mov	r0, r3
 8000bc4:	f000 f93b 	bl	8000e3e <HAL_SYSTICK_Config>
 8000bc8:	4603      	mov	r3, r0
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d001      	beq.n	8000bd2 <HAL_InitTick+0x2e>
 8000bce:	2301      	movs	r3, #1
 8000bd0:	e00e      	b.n	8000bf0 <HAL_InitTick+0x4c>
 8000bd2:	687b      	ldr	r3, [r7, #4]
 8000bd4:	2b0f      	cmp	r3, #15
 8000bd6:	d80a      	bhi.n	8000bee <HAL_InitTick+0x4a>
 8000bd8:	2200      	movs	r2, #0
 8000bda:	6879      	ldr	r1, [r7, #4]
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	f000 f903 	bl	8000dea <HAL_NVIC_SetPriority>
 8000be4:	4a06      	ldr	r2, [pc, #24]	@ (8000c00 <HAL_InitTick+0x5c>)
 8000be6:	687b      	ldr	r3, [r7, #4]
 8000be8:	6013      	str	r3, [r2, #0]
 8000bea:	2300      	movs	r3, #0
 8000bec:	e000      	b.n	8000bf0 <HAL_InitTick+0x4c>
 8000bee:	2301      	movs	r3, #1
 8000bf0:	4618      	mov	r0, r3
 8000bf2:	3708      	adds	r7, #8
 8000bf4:	46bd      	mov	sp, r7
 8000bf6:	bd80      	pop	{r7, pc}
 8000bf8:	20000000 	.word	0x20000000
 8000bfc:	20000008 	.word	0x20000008
 8000c00:	20000004 	.word	0x20000004

08000c04 <HAL_IncTick>:
 8000c04:	b480      	push	{r7}
 8000c06:	af00      	add	r7, sp, #0
 8000c08:	4b05      	ldr	r3, [pc, #20]	@ (8000c20 <HAL_IncTick+0x1c>)
 8000c0a:	781b      	ldrb	r3, [r3, #0]
 8000c0c:	461a      	mov	r2, r3
 8000c0e:	4b05      	ldr	r3, [pc, #20]	@ (8000c24 <HAL_IncTick+0x20>)
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	4413      	add	r3, r2
 8000c14:	4a03      	ldr	r2, [pc, #12]	@ (8000c24 <HAL_IncTick+0x20>)
 8000c16:	6013      	str	r3, [r2, #0]
 8000c18:	bf00      	nop
 8000c1a:	46bd      	mov	sp, r7
 8000c1c:	bc80      	pop	{r7}
 8000c1e:	4770      	bx	lr
 8000c20:	20000008 	.word	0x20000008
 8000c24:	200002a0 	.word	0x200002a0

08000c28 <HAL_GetTick>:
 8000c28:	b480      	push	{r7}
 8000c2a:	af00      	add	r7, sp, #0
 8000c2c:	4b02      	ldr	r3, [pc, #8]	@ (8000c38 <HAL_GetTick+0x10>)
 8000c2e:	681b      	ldr	r3, [r3, #0]
 8000c30:	4618      	mov	r0, r3
 8000c32:	46bd      	mov	sp, r7
 8000c34:	bc80      	pop	{r7}
 8000c36:	4770      	bx	lr
 8000c38:	200002a0 	.word	0x200002a0

08000c3c <__NVIC_SetPriorityGrouping>:
 8000c3c:	b480      	push	{r7}
 8000c3e:	b085      	sub	sp, #20
 8000c40:	af00      	add	r7, sp, #0
 8000c42:	6078      	str	r0, [r7, #4]
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	f003 0307 	and.w	r3, r3, #7
 8000c4a:	60fb      	str	r3, [r7, #12]
 8000c4c:	4b0c      	ldr	r3, [pc, #48]	@ (8000c80 <__NVIC_SetPriorityGrouping+0x44>)
 8000c4e:	68db      	ldr	r3, [r3, #12]
 8000c50:	60bb      	str	r3, [r7, #8]
 8000c52:	68ba      	ldr	r2, [r7, #8]
 8000c54:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000c58:	4013      	ands	r3, r2
 8000c5a:	60bb      	str	r3, [r7, #8]
 8000c5c:	68fb      	ldr	r3, [r7, #12]
 8000c5e:	021a      	lsls	r2, r3, #8
 8000c60:	68bb      	ldr	r3, [r7, #8]
 8000c62:	4313      	orrs	r3, r2
 8000c64:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000c68:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000c6c:	60bb      	str	r3, [r7, #8]
 8000c6e:	4a04      	ldr	r2, [pc, #16]	@ (8000c80 <__NVIC_SetPriorityGrouping+0x44>)
 8000c70:	68bb      	ldr	r3, [r7, #8]
 8000c72:	60d3      	str	r3, [r2, #12]
 8000c74:	bf00      	nop
 8000c76:	3714      	adds	r7, #20
 8000c78:	46bd      	mov	sp, r7
 8000c7a:	bc80      	pop	{r7}
 8000c7c:	4770      	bx	lr
 8000c7e:	bf00      	nop
 8000c80:	e000ed00 	.word	0xe000ed00

08000c84 <__NVIC_GetPriorityGrouping>:
 8000c84:	b480      	push	{r7}
 8000c86:	af00      	add	r7, sp, #0
 8000c88:	4b04      	ldr	r3, [pc, #16]	@ (8000c9c <__NVIC_GetPriorityGrouping+0x18>)
 8000c8a:	68db      	ldr	r3, [r3, #12]
 8000c8c:	0a1b      	lsrs	r3, r3, #8
 8000c8e:	f003 0307 	and.w	r3, r3, #7
 8000c92:	4618      	mov	r0, r3
 8000c94:	46bd      	mov	sp, r7
 8000c96:	bc80      	pop	{r7}
 8000c98:	4770      	bx	lr
 8000c9a:	bf00      	nop
 8000c9c:	e000ed00 	.word	0xe000ed00

08000ca0 <__NVIC_EnableIRQ>:
 8000ca0:	b480      	push	{r7}
 8000ca2:	b083      	sub	sp, #12
 8000ca4:	af00      	add	r7, sp, #0
 8000ca6:	4603      	mov	r3, r0
 8000ca8:	71fb      	strb	r3, [r7, #7]
 8000caa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	db0b      	blt.n	8000cca <__NVIC_EnableIRQ+0x2a>
 8000cb2:	79fb      	ldrb	r3, [r7, #7]
 8000cb4:	f003 021f 	and.w	r2, r3, #31
 8000cb8:	4906      	ldr	r1, [pc, #24]	@ (8000cd4 <__NVIC_EnableIRQ+0x34>)
 8000cba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000cbe:	095b      	lsrs	r3, r3, #5
 8000cc0:	2001      	movs	r0, #1
 8000cc2:	fa00 f202 	lsl.w	r2, r0, r2
 8000cc6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000cca:	bf00      	nop
 8000ccc:	370c      	adds	r7, #12
 8000cce:	46bd      	mov	sp, r7
 8000cd0:	bc80      	pop	{r7}
 8000cd2:	4770      	bx	lr
 8000cd4:	e000e100 	.word	0xe000e100

08000cd8 <__NVIC_SetPriority>:
 8000cd8:	b480      	push	{r7}
 8000cda:	b083      	sub	sp, #12
 8000cdc:	af00      	add	r7, sp, #0
 8000cde:	4603      	mov	r3, r0
 8000ce0:	6039      	str	r1, [r7, #0]
 8000ce2:	71fb      	strb	r3, [r7, #7]
 8000ce4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	db0a      	blt.n	8000d02 <__NVIC_SetPriority+0x2a>
 8000cec:	683b      	ldr	r3, [r7, #0]
 8000cee:	b2da      	uxtb	r2, r3
 8000cf0:	490c      	ldr	r1, [pc, #48]	@ (8000d24 <__NVIC_SetPriority+0x4c>)
 8000cf2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000cf6:	0112      	lsls	r2, r2, #4
 8000cf8:	b2d2      	uxtb	r2, r2
 8000cfa:	440b      	add	r3, r1
 8000cfc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8000d00:	e00a      	b.n	8000d18 <__NVIC_SetPriority+0x40>
 8000d02:	683b      	ldr	r3, [r7, #0]
 8000d04:	b2da      	uxtb	r2, r3
 8000d06:	4908      	ldr	r1, [pc, #32]	@ (8000d28 <__NVIC_SetPriority+0x50>)
 8000d08:	79fb      	ldrb	r3, [r7, #7]
 8000d0a:	f003 030f 	and.w	r3, r3, #15
 8000d0e:	3b04      	subs	r3, #4
 8000d10:	0112      	lsls	r2, r2, #4
 8000d12:	b2d2      	uxtb	r2, r2
 8000d14:	440b      	add	r3, r1
 8000d16:	761a      	strb	r2, [r3, #24]
 8000d18:	bf00      	nop
 8000d1a:	370c      	adds	r7, #12
 8000d1c:	46bd      	mov	sp, r7
 8000d1e:	bc80      	pop	{r7}
 8000d20:	4770      	bx	lr
 8000d22:	bf00      	nop
 8000d24:	e000e100 	.word	0xe000e100
 8000d28:	e000ed00 	.word	0xe000ed00

08000d2c <NVIC_EncodePriority>:
 8000d2c:	b480      	push	{r7}
 8000d2e:	b089      	sub	sp, #36	@ 0x24
 8000d30:	af00      	add	r7, sp, #0
 8000d32:	60f8      	str	r0, [r7, #12]
 8000d34:	60b9      	str	r1, [r7, #8]
 8000d36:	607a      	str	r2, [r7, #4]
 8000d38:	68fb      	ldr	r3, [r7, #12]
 8000d3a:	f003 0307 	and.w	r3, r3, #7
 8000d3e:	61fb      	str	r3, [r7, #28]
 8000d40:	69fb      	ldr	r3, [r7, #28]
 8000d42:	f1c3 0307 	rsb	r3, r3, #7
 8000d46:	2b04      	cmp	r3, #4
 8000d48:	bf28      	it	cs
 8000d4a:	2304      	movcs	r3, #4
 8000d4c:	61bb      	str	r3, [r7, #24]
 8000d4e:	69fb      	ldr	r3, [r7, #28]
 8000d50:	3304      	adds	r3, #4
 8000d52:	2b06      	cmp	r3, #6
 8000d54:	d902      	bls.n	8000d5c <NVIC_EncodePriority+0x30>
 8000d56:	69fb      	ldr	r3, [r7, #28]
 8000d58:	3b03      	subs	r3, #3
 8000d5a:	e000      	b.n	8000d5e <NVIC_EncodePriority+0x32>
 8000d5c:	2300      	movs	r3, #0
 8000d5e:	617b      	str	r3, [r7, #20]
 8000d60:	f04f 32ff 	mov.w	r2, #4294967295
 8000d64:	69bb      	ldr	r3, [r7, #24]
 8000d66:	fa02 f303 	lsl.w	r3, r2, r3
 8000d6a:	43da      	mvns	r2, r3
 8000d6c:	68bb      	ldr	r3, [r7, #8]
 8000d6e:	401a      	ands	r2, r3
 8000d70:	697b      	ldr	r3, [r7, #20]
 8000d72:	409a      	lsls	r2, r3
 8000d74:	f04f 31ff 	mov.w	r1, #4294967295
 8000d78:	697b      	ldr	r3, [r7, #20]
 8000d7a:	fa01 f303 	lsl.w	r3, r1, r3
 8000d7e:	43d9      	mvns	r1, r3
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	400b      	ands	r3, r1
 8000d84:	4313      	orrs	r3, r2
 8000d86:	4618      	mov	r0, r3
 8000d88:	3724      	adds	r7, #36	@ 0x24
 8000d8a:	46bd      	mov	sp, r7
 8000d8c:	bc80      	pop	{r7}
 8000d8e:	4770      	bx	lr

08000d90 <SysTick_Config>:
 8000d90:	b580      	push	{r7, lr}
 8000d92:	b082      	sub	sp, #8
 8000d94:	af00      	add	r7, sp, #0
 8000d96:	6078      	str	r0, [r7, #4]
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	3b01      	subs	r3, #1
 8000d9c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000da0:	d301      	bcc.n	8000da6 <SysTick_Config+0x16>
 8000da2:	2301      	movs	r3, #1
 8000da4:	e00f      	b.n	8000dc6 <SysTick_Config+0x36>
 8000da6:	4a0a      	ldr	r2, [pc, #40]	@ (8000dd0 <SysTick_Config+0x40>)
 8000da8:	687b      	ldr	r3, [r7, #4]
 8000daa:	3b01      	subs	r3, #1
 8000dac:	6053      	str	r3, [r2, #4]
 8000dae:	210f      	movs	r1, #15
 8000db0:	f04f 30ff 	mov.w	r0, #4294967295
 8000db4:	f7ff ff90 	bl	8000cd8 <__NVIC_SetPriority>
 8000db8:	4b05      	ldr	r3, [pc, #20]	@ (8000dd0 <SysTick_Config+0x40>)
 8000dba:	2200      	movs	r2, #0
 8000dbc:	609a      	str	r2, [r3, #8]
 8000dbe:	4b04      	ldr	r3, [pc, #16]	@ (8000dd0 <SysTick_Config+0x40>)
 8000dc0:	2207      	movs	r2, #7
 8000dc2:	601a      	str	r2, [r3, #0]
 8000dc4:	2300      	movs	r3, #0
 8000dc6:	4618      	mov	r0, r3
 8000dc8:	3708      	adds	r7, #8
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	bd80      	pop	{r7, pc}
 8000dce:	bf00      	nop
 8000dd0:	e000e010 	.word	0xe000e010

08000dd4 <HAL_NVIC_SetPriorityGrouping>:
 8000dd4:	b580      	push	{r7, lr}
 8000dd6:	b082      	sub	sp, #8
 8000dd8:	af00      	add	r7, sp, #0
 8000dda:	6078      	str	r0, [r7, #4]
 8000ddc:	6878      	ldr	r0, [r7, #4]
 8000dde:	f7ff ff2d 	bl	8000c3c <__NVIC_SetPriorityGrouping>
 8000de2:	bf00      	nop
 8000de4:	3708      	adds	r7, #8
 8000de6:	46bd      	mov	sp, r7
 8000de8:	bd80      	pop	{r7, pc}

08000dea <HAL_NVIC_SetPriority>:
 8000dea:	b580      	push	{r7, lr}
 8000dec:	b086      	sub	sp, #24
 8000dee:	af00      	add	r7, sp, #0
 8000df0:	4603      	mov	r3, r0
 8000df2:	60b9      	str	r1, [r7, #8]
 8000df4:	607a      	str	r2, [r7, #4]
 8000df6:	73fb      	strb	r3, [r7, #15]
 8000df8:	2300      	movs	r3, #0
 8000dfa:	617b      	str	r3, [r7, #20]
 8000dfc:	f7ff ff42 	bl	8000c84 <__NVIC_GetPriorityGrouping>
 8000e00:	6178      	str	r0, [r7, #20]
 8000e02:	687a      	ldr	r2, [r7, #4]
 8000e04:	68b9      	ldr	r1, [r7, #8]
 8000e06:	6978      	ldr	r0, [r7, #20]
 8000e08:	f7ff ff90 	bl	8000d2c <NVIC_EncodePriority>
 8000e0c:	4602      	mov	r2, r0
 8000e0e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000e12:	4611      	mov	r1, r2
 8000e14:	4618      	mov	r0, r3
 8000e16:	f7ff ff5f 	bl	8000cd8 <__NVIC_SetPriority>
 8000e1a:	bf00      	nop
 8000e1c:	3718      	adds	r7, #24
 8000e1e:	46bd      	mov	sp, r7
 8000e20:	bd80      	pop	{r7, pc}

08000e22 <HAL_NVIC_EnableIRQ>:
 8000e22:	b580      	push	{r7, lr}
 8000e24:	b082      	sub	sp, #8
 8000e26:	af00      	add	r7, sp, #0
 8000e28:	4603      	mov	r3, r0
 8000e2a:	71fb      	strb	r3, [r7, #7]
 8000e2c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e30:	4618      	mov	r0, r3
 8000e32:	f7ff ff35 	bl	8000ca0 <__NVIC_EnableIRQ>
 8000e36:	bf00      	nop
 8000e38:	3708      	adds	r7, #8
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	bd80      	pop	{r7, pc}

08000e3e <HAL_SYSTICK_Config>:
 8000e3e:	b580      	push	{r7, lr}
 8000e40:	b082      	sub	sp, #8
 8000e42:	af00      	add	r7, sp, #0
 8000e44:	6078      	str	r0, [r7, #4]
 8000e46:	6878      	ldr	r0, [r7, #4]
 8000e48:	f7ff ffa2 	bl	8000d90 <SysTick_Config>
 8000e4c:	4603      	mov	r3, r0
 8000e4e:	4618      	mov	r0, r3
 8000e50:	3708      	adds	r7, #8
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}
	...

08000e58 <HAL_DMA_Abort_IT>:
 8000e58:	b580      	push	{r7, lr}
 8000e5a:	b084      	sub	sp, #16
 8000e5c:	af00      	add	r7, sp, #0
 8000e5e:	6078      	str	r0, [r7, #4]
 8000e60:	2300      	movs	r3, #0
 8000e62:	73fb      	strb	r3, [r7, #15]
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8000e6a:	2b02      	cmp	r3, #2
 8000e6c:	d005      	beq.n	8000e7a <HAL_DMA_Abort_IT+0x22>
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	2204      	movs	r2, #4
 8000e72:	639a      	str	r2, [r3, #56]	@ 0x38
 8000e74:	2301      	movs	r3, #1
 8000e76:	73fb      	strb	r3, [r7, #15]
 8000e78:	e051      	b.n	8000f1e <HAL_DMA_Abort_IT+0xc6>
 8000e7a:	687b      	ldr	r3, [r7, #4]
 8000e7c:	681b      	ldr	r3, [r3, #0]
 8000e7e:	681a      	ldr	r2, [r3, #0]
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	f022 020e 	bic.w	r2, r2, #14
 8000e88:	601a      	str	r2, [r3, #0]
 8000e8a:	687b      	ldr	r3, [r7, #4]
 8000e8c:	681b      	ldr	r3, [r3, #0]
 8000e8e:	681a      	ldr	r2, [r3, #0]
 8000e90:	687b      	ldr	r3, [r7, #4]
 8000e92:	681b      	ldr	r3, [r3, #0]
 8000e94:	f022 0201 	bic.w	r2, r2, #1
 8000e98:	601a      	str	r2, [r3, #0]
 8000e9a:	687b      	ldr	r3, [r7, #4]
 8000e9c:	681b      	ldr	r3, [r3, #0]
 8000e9e:	4a22      	ldr	r2, [pc, #136]	@ (8000f28 <HAL_DMA_Abort_IT+0xd0>)
 8000ea0:	4293      	cmp	r3, r2
 8000ea2:	d029      	beq.n	8000ef8 <HAL_DMA_Abort_IT+0xa0>
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	4a20      	ldr	r2, [pc, #128]	@ (8000f2c <HAL_DMA_Abort_IT+0xd4>)
 8000eaa:	4293      	cmp	r3, r2
 8000eac:	d022      	beq.n	8000ef4 <HAL_DMA_Abort_IT+0x9c>
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	681b      	ldr	r3, [r3, #0]
 8000eb2:	4a1f      	ldr	r2, [pc, #124]	@ (8000f30 <HAL_DMA_Abort_IT+0xd8>)
 8000eb4:	4293      	cmp	r3, r2
 8000eb6:	d01a      	beq.n	8000eee <HAL_DMA_Abort_IT+0x96>
 8000eb8:	687b      	ldr	r3, [r7, #4]
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	4a1d      	ldr	r2, [pc, #116]	@ (8000f34 <HAL_DMA_Abort_IT+0xdc>)
 8000ebe:	4293      	cmp	r3, r2
 8000ec0:	d012      	beq.n	8000ee8 <HAL_DMA_Abort_IT+0x90>
 8000ec2:	687b      	ldr	r3, [r7, #4]
 8000ec4:	681b      	ldr	r3, [r3, #0]
 8000ec6:	4a1c      	ldr	r2, [pc, #112]	@ (8000f38 <HAL_DMA_Abort_IT+0xe0>)
 8000ec8:	4293      	cmp	r3, r2
 8000eca:	d00a      	beq.n	8000ee2 <HAL_DMA_Abort_IT+0x8a>
 8000ecc:	687b      	ldr	r3, [r7, #4]
 8000ece:	681b      	ldr	r3, [r3, #0]
 8000ed0:	4a1a      	ldr	r2, [pc, #104]	@ (8000f3c <HAL_DMA_Abort_IT+0xe4>)
 8000ed2:	4293      	cmp	r3, r2
 8000ed4:	d102      	bne.n	8000edc <HAL_DMA_Abort_IT+0x84>
 8000ed6:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8000eda:	e00e      	b.n	8000efa <HAL_DMA_Abort_IT+0xa2>
 8000edc:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8000ee0:	e00b      	b.n	8000efa <HAL_DMA_Abort_IT+0xa2>
 8000ee2:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000ee6:	e008      	b.n	8000efa <HAL_DMA_Abort_IT+0xa2>
 8000ee8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000eec:	e005      	b.n	8000efa <HAL_DMA_Abort_IT+0xa2>
 8000eee:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000ef2:	e002      	b.n	8000efa <HAL_DMA_Abort_IT+0xa2>
 8000ef4:	2310      	movs	r3, #16
 8000ef6:	e000      	b.n	8000efa <HAL_DMA_Abort_IT+0xa2>
 8000ef8:	2301      	movs	r3, #1
 8000efa:	4a11      	ldr	r2, [pc, #68]	@ (8000f40 <HAL_DMA_Abort_IT+0xe8>)
 8000efc:	6053      	str	r3, [r2, #4]
 8000efe:	687b      	ldr	r3, [r7, #4]
 8000f00:	2201      	movs	r2, #1
 8000f02:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8000f06:	687b      	ldr	r3, [r7, #4]
 8000f08:	2200      	movs	r2, #0
 8000f0a:	f883 2020 	strb.w	r2, [r3, #32]
 8000f0e:	687b      	ldr	r3, [r7, #4]
 8000f10:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000f12:	2b00      	cmp	r3, #0
 8000f14:	d003      	beq.n	8000f1e <HAL_DMA_Abort_IT+0xc6>
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000f1a:	6878      	ldr	r0, [r7, #4]
 8000f1c:	4798      	blx	r3
 8000f1e:	7bfb      	ldrb	r3, [r7, #15]
 8000f20:	4618      	mov	r0, r3
 8000f22:	3710      	adds	r7, #16
 8000f24:	46bd      	mov	sp, r7
 8000f26:	bd80      	pop	{r7, pc}
 8000f28:	40020008 	.word	0x40020008
 8000f2c:	4002001c 	.word	0x4002001c
 8000f30:	40020030 	.word	0x40020030
 8000f34:	40020044 	.word	0x40020044
 8000f38:	40020058 	.word	0x40020058
 8000f3c:	4002006c 	.word	0x4002006c
 8000f40:	40020000 	.word	0x40020000

08000f44 <HAL_GPIO_Init>:
 8000f44:	b480      	push	{r7}
 8000f46:	b08b      	sub	sp, #44	@ 0x2c
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	6078      	str	r0, [r7, #4]
 8000f4c:	6039      	str	r1, [r7, #0]
 8000f4e:	2300      	movs	r3, #0
 8000f50:	627b      	str	r3, [r7, #36]	@ 0x24
 8000f52:	2300      	movs	r3, #0
 8000f54:	623b      	str	r3, [r7, #32]
 8000f56:	e169      	b.n	800122c <HAL_GPIO_Init+0x2e8>
 8000f58:	2201      	movs	r2, #1
 8000f5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000f5c:	fa02 f303 	lsl.w	r3, r2, r3
 8000f60:	61fb      	str	r3, [r7, #28]
 8000f62:	683b      	ldr	r3, [r7, #0]
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	69fa      	ldr	r2, [r7, #28]
 8000f68:	4013      	ands	r3, r2
 8000f6a:	61bb      	str	r3, [r7, #24]
 8000f6c:	69ba      	ldr	r2, [r7, #24]
 8000f6e:	69fb      	ldr	r3, [r7, #28]
 8000f70:	429a      	cmp	r2, r3
 8000f72:	f040 8158 	bne.w	8001226 <HAL_GPIO_Init+0x2e2>
 8000f76:	683b      	ldr	r3, [r7, #0]
 8000f78:	685b      	ldr	r3, [r3, #4]
 8000f7a:	4a9a      	ldr	r2, [pc, #616]	@ (80011e4 <HAL_GPIO_Init+0x2a0>)
 8000f7c:	4293      	cmp	r3, r2
 8000f7e:	d05e      	beq.n	800103e <HAL_GPIO_Init+0xfa>
 8000f80:	4a98      	ldr	r2, [pc, #608]	@ (80011e4 <HAL_GPIO_Init+0x2a0>)
 8000f82:	4293      	cmp	r3, r2
 8000f84:	d875      	bhi.n	8001072 <HAL_GPIO_Init+0x12e>
 8000f86:	4a98      	ldr	r2, [pc, #608]	@ (80011e8 <HAL_GPIO_Init+0x2a4>)
 8000f88:	4293      	cmp	r3, r2
 8000f8a:	d058      	beq.n	800103e <HAL_GPIO_Init+0xfa>
 8000f8c:	4a96      	ldr	r2, [pc, #600]	@ (80011e8 <HAL_GPIO_Init+0x2a4>)
 8000f8e:	4293      	cmp	r3, r2
 8000f90:	d86f      	bhi.n	8001072 <HAL_GPIO_Init+0x12e>
 8000f92:	4a96      	ldr	r2, [pc, #600]	@ (80011ec <HAL_GPIO_Init+0x2a8>)
 8000f94:	4293      	cmp	r3, r2
 8000f96:	d052      	beq.n	800103e <HAL_GPIO_Init+0xfa>
 8000f98:	4a94      	ldr	r2, [pc, #592]	@ (80011ec <HAL_GPIO_Init+0x2a8>)
 8000f9a:	4293      	cmp	r3, r2
 8000f9c:	d869      	bhi.n	8001072 <HAL_GPIO_Init+0x12e>
 8000f9e:	4a94      	ldr	r2, [pc, #592]	@ (80011f0 <HAL_GPIO_Init+0x2ac>)
 8000fa0:	4293      	cmp	r3, r2
 8000fa2:	d04c      	beq.n	800103e <HAL_GPIO_Init+0xfa>
 8000fa4:	4a92      	ldr	r2, [pc, #584]	@ (80011f0 <HAL_GPIO_Init+0x2ac>)
 8000fa6:	4293      	cmp	r3, r2
 8000fa8:	d863      	bhi.n	8001072 <HAL_GPIO_Init+0x12e>
 8000faa:	4a92      	ldr	r2, [pc, #584]	@ (80011f4 <HAL_GPIO_Init+0x2b0>)
 8000fac:	4293      	cmp	r3, r2
 8000fae:	d046      	beq.n	800103e <HAL_GPIO_Init+0xfa>
 8000fb0:	4a90      	ldr	r2, [pc, #576]	@ (80011f4 <HAL_GPIO_Init+0x2b0>)
 8000fb2:	4293      	cmp	r3, r2
 8000fb4:	d85d      	bhi.n	8001072 <HAL_GPIO_Init+0x12e>
 8000fb6:	2b12      	cmp	r3, #18
 8000fb8:	d82a      	bhi.n	8001010 <HAL_GPIO_Init+0xcc>
 8000fba:	2b12      	cmp	r3, #18
 8000fbc:	d859      	bhi.n	8001072 <HAL_GPIO_Init+0x12e>
 8000fbe:	a201      	add	r2, pc, #4	@ (adr r2, 8000fc4 <HAL_GPIO_Init+0x80>)
 8000fc0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000fc4:	0800103f 	.word	0x0800103f
 8000fc8:	08001019 	.word	0x08001019
 8000fcc:	0800102b 	.word	0x0800102b
 8000fd0:	0800106d 	.word	0x0800106d
 8000fd4:	08001073 	.word	0x08001073
 8000fd8:	08001073 	.word	0x08001073
 8000fdc:	08001073 	.word	0x08001073
 8000fe0:	08001073 	.word	0x08001073
 8000fe4:	08001073 	.word	0x08001073
 8000fe8:	08001073 	.word	0x08001073
 8000fec:	08001073 	.word	0x08001073
 8000ff0:	08001073 	.word	0x08001073
 8000ff4:	08001073 	.word	0x08001073
 8000ff8:	08001073 	.word	0x08001073
 8000ffc:	08001073 	.word	0x08001073
 8001000:	08001073 	.word	0x08001073
 8001004:	08001073 	.word	0x08001073
 8001008:	08001021 	.word	0x08001021
 800100c:	08001035 	.word	0x08001035
 8001010:	4a79      	ldr	r2, [pc, #484]	@ (80011f8 <HAL_GPIO_Init+0x2b4>)
 8001012:	4293      	cmp	r3, r2
 8001014:	d013      	beq.n	800103e <HAL_GPIO_Init+0xfa>
 8001016:	e02c      	b.n	8001072 <HAL_GPIO_Init+0x12e>
 8001018:	683b      	ldr	r3, [r7, #0]
 800101a:	68db      	ldr	r3, [r3, #12]
 800101c:	623b      	str	r3, [r7, #32]
 800101e:	e029      	b.n	8001074 <HAL_GPIO_Init+0x130>
 8001020:	683b      	ldr	r3, [r7, #0]
 8001022:	68db      	ldr	r3, [r3, #12]
 8001024:	3304      	adds	r3, #4
 8001026:	623b      	str	r3, [r7, #32]
 8001028:	e024      	b.n	8001074 <HAL_GPIO_Init+0x130>
 800102a:	683b      	ldr	r3, [r7, #0]
 800102c:	68db      	ldr	r3, [r3, #12]
 800102e:	3308      	adds	r3, #8
 8001030:	623b      	str	r3, [r7, #32]
 8001032:	e01f      	b.n	8001074 <HAL_GPIO_Init+0x130>
 8001034:	683b      	ldr	r3, [r7, #0]
 8001036:	68db      	ldr	r3, [r3, #12]
 8001038:	330c      	adds	r3, #12
 800103a:	623b      	str	r3, [r7, #32]
 800103c:	e01a      	b.n	8001074 <HAL_GPIO_Init+0x130>
 800103e:	683b      	ldr	r3, [r7, #0]
 8001040:	689b      	ldr	r3, [r3, #8]
 8001042:	2b00      	cmp	r3, #0
 8001044:	d102      	bne.n	800104c <HAL_GPIO_Init+0x108>
 8001046:	2304      	movs	r3, #4
 8001048:	623b      	str	r3, [r7, #32]
 800104a:	e013      	b.n	8001074 <HAL_GPIO_Init+0x130>
 800104c:	683b      	ldr	r3, [r7, #0]
 800104e:	689b      	ldr	r3, [r3, #8]
 8001050:	2b01      	cmp	r3, #1
 8001052:	d105      	bne.n	8001060 <HAL_GPIO_Init+0x11c>
 8001054:	2308      	movs	r3, #8
 8001056:	623b      	str	r3, [r7, #32]
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	69fa      	ldr	r2, [r7, #28]
 800105c:	611a      	str	r2, [r3, #16]
 800105e:	e009      	b.n	8001074 <HAL_GPIO_Init+0x130>
 8001060:	2308      	movs	r3, #8
 8001062:	623b      	str	r3, [r7, #32]
 8001064:	687b      	ldr	r3, [r7, #4]
 8001066:	69fa      	ldr	r2, [r7, #28]
 8001068:	615a      	str	r2, [r3, #20]
 800106a:	e003      	b.n	8001074 <HAL_GPIO_Init+0x130>
 800106c:	2300      	movs	r3, #0
 800106e:	623b      	str	r3, [r7, #32]
 8001070:	e000      	b.n	8001074 <HAL_GPIO_Init+0x130>
 8001072:	bf00      	nop
 8001074:	69bb      	ldr	r3, [r7, #24]
 8001076:	2bff      	cmp	r3, #255	@ 0xff
 8001078:	d801      	bhi.n	800107e <HAL_GPIO_Init+0x13a>
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	e001      	b.n	8001082 <HAL_GPIO_Init+0x13e>
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	3304      	adds	r3, #4
 8001082:	617b      	str	r3, [r7, #20]
 8001084:	69bb      	ldr	r3, [r7, #24]
 8001086:	2bff      	cmp	r3, #255	@ 0xff
 8001088:	d802      	bhi.n	8001090 <HAL_GPIO_Init+0x14c>
 800108a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800108c:	009b      	lsls	r3, r3, #2
 800108e:	e002      	b.n	8001096 <HAL_GPIO_Init+0x152>
 8001090:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001092:	3b08      	subs	r3, #8
 8001094:	009b      	lsls	r3, r3, #2
 8001096:	613b      	str	r3, [r7, #16]
 8001098:	697b      	ldr	r3, [r7, #20]
 800109a:	681a      	ldr	r2, [r3, #0]
 800109c:	210f      	movs	r1, #15
 800109e:	693b      	ldr	r3, [r7, #16]
 80010a0:	fa01 f303 	lsl.w	r3, r1, r3
 80010a4:	43db      	mvns	r3, r3
 80010a6:	401a      	ands	r2, r3
 80010a8:	6a39      	ldr	r1, [r7, #32]
 80010aa:	693b      	ldr	r3, [r7, #16]
 80010ac:	fa01 f303 	lsl.w	r3, r1, r3
 80010b0:	431a      	orrs	r2, r3
 80010b2:	697b      	ldr	r3, [r7, #20]
 80010b4:	601a      	str	r2, [r3, #0]
 80010b6:	683b      	ldr	r3, [r7, #0]
 80010b8:	685b      	ldr	r3, [r3, #4]
 80010ba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80010be:	2b00      	cmp	r3, #0
 80010c0:	f000 80b1 	beq.w	8001226 <HAL_GPIO_Init+0x2e2>
 80010c4:	4b4d      	ldr	r3, [pc, #308]	@ (80011fc <HAL_GPIO_Init+0x2b8>)
 80010c6:	699b      	ldr	r3, [r3, #24]
 80010c8:	4a4c      	ldr	r2, [pc, #304]	@ (80011fc <HAL_GPIO_Init+0x2b8>)
 80010ca:	f043 0301 	orr.w	r3, r3, #1
 80010ce:	6193      	str	r3, [r2, #24]
 80010d0:	4b4a      	ldr	r3, [pc, #296]	@ (80011fc <HAL_GPIO_Init+0x2b8>)
 80010d2:	699b      	ldr	r3, [r3, #24]
 80010d4:	f003 0301 	and.w	r3, r3, #1
 80010d8:	60bb      	str	r3, [r7, #8]
 80010da:	68bb      	ldr	r3, [r7, #8]
 80010dc:	4a48      	ldr	r2, [pc, #288]	@ (8001200 <HAL_GPIO_Init+0x2bc>)
 80010de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80010e0:	089b      	lsrs	r3, r3, #2
 80010e2:	3302      	adds	r3, #2
 80010e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80010e8:	60fb      	str	r3, [r7, #12]
 80010ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80010ec:	f003 0303 	and.w	r3, r3, #3
 80010f0:	009b      	lsls	r3, r3, #2
 80010f2:	220f      	movs	r2, #15
 80010f4:	fa02 f303 	lsl.w	r3, r2, r3
 80010f8:	43db      	mvns	r3, r3
 80010fa:	68fa      	ldr	r2, [r7, #12]
 80010fc:	4013      	ands	r3, r2
 80010fe:	60fb      	str	r3, [r7, #12]
 8001100:	687b      	ldr	r3, [r7, #4]
 8001102:	4a40      	ldr	r2, [pc, #256]	@ (8001204 <HAL_GPIO_Init+0x2c0>)
 8001104:	4293      	cmp	r3, r2
 8001106:	d013      	beq.n	8001130 <HAL_GPIO_Init+0x1ec>
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	4a3f      	ldr	r2, [pc, #252]	@ (8001208 <HAL_GPIO_Init+0x2c4>)
 800110c:	4293      	cmp	r3, r2
 800110e:	d00d      	beq.n	800112c <HAL_GPIO_Init+0x1e8>
 8001110:	687b      	ldr	r3, [r7, #4]
 8001112:	4a3e      	ldr	r2, [pc, #248]	@ (800120c <HAL_GPIO_Init+0x2c8>)
 8001114:	4293      	cmp	r3, r2
 8001116:	d007      	beq.n	8001128 <HAL_GPIO_Init+0x1e4>
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	4a3d      	ldr	r2, [pc, #244]	@ (8001210 <HAL_GPIO_Init+0x2cc>)
 800111c:	4293      	cmp	r3, r2
 800111e:	d101      	bne.n	8001124 <HAL_GPIO_Init+0x1e0>
 8001120:	2303      	movs	r3, #3
 8001122:	e006      	b.n	8001132 <HAL_GPIO_Init+0x1ee>
 8001124:	2304      	movs	r3, #4
 8001126:	e004      	b.n	8001132 <HAL_GPIO_Init+0x1ee>
 8001128:	2302      	movs	r3, #2
 800112a:	e002      	b.n	8001132 <HAL_GPIO_Init+0x1ee>
 800112c:	2301      	movs	r3, #1
 800112e:	e000      	b.n	8001132 <HAL_GPIO_Init+0x1ee>
 8001130:	2300      	movs	r3, #0
 8001132:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001134:	f002 0203 	and.w	r2, r2, #3
 8001138:	0092      	lsls	r2, r2, #2
 800113a:	4093      	lsls	r3, r2
 800113c:	68fa      	ldr	r2, [r7, #12]
 800113e:	4313      	orrs	r3, r2
 8001140:	60fb      	str	r3, [r7, #12]
 8001142:	492f      	ldr	r1, [pc, #188]	@ (8001200 <HAL_GPIO_Init+0x2bc>)
 8001144:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001146:	089b      	lsrs	r3, r3, #2
 8001148:	3302      	adds	r3, #2
 800114a:	68fa      	ldr	r2, [r7, #12]
 800114c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001150:	683b      	ldr	r3, [r7, #0]
 8001152:	685b      	ldr	r3, [r3, #4]
 8001154:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001158:	2b00      	cmp	r3, #0
 800115a:	d006      	beq.n	800116a <HAL_GPIO_Init+0x226>
 800115c:	4b2d      	ldr	r3, [pc, #180]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 800115e:	681a      	ldr	r2, [r3, #0]
 8001160:	492c      	ldr	r1, [pc, #176]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 8001162:	69bb      	ldr	r3, [r7, #24]
 8001164:	4313      	orrs	r3, r2
 8001166:	600b      	str	r3, [r1, #0]
 8001168:	e006      	b.n	8001178 <HAL_GPIO_Init+0x234>
 800116a:	4b2a      	ldr	r3, [pc, #168]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 800116c:	681a      	ldr	r2, [r3, #0]
 800116e:	69bb      	ldr	r3, [r7, #24]
 8001170:	43db      	mvns	r3, r3
 8001172:	4928      	ldr	r1, [pc, #160]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 8001174:	4013      	ands	r3, r2
 8001176:	600b      	str	r3, [r1, #0]
 8001178:	683b      	ldr	r3, [r7, #0]
 800117a:	685b      	ldr	r3, [r3, #4]
 800117c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001180:	2b00      	cmp	r3, #0
 8001182:	d006      	beq.n	8001192 <HAL_GPIO_Init+0x24e>
 8001184:	4b23      	ldr	r3, [pc, #140]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 8001186:	685a      	ldr	r2, [r3, #4]
 8001188:	4922      	ldr	r1, [pc, #136]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 800118a:	69bb      	ldr	r3, [r7, #24]
 800118c:	4313      	orrs	r3, r2
 800118e:	604b      	str	r3, [r1, #4]
 8001190:	e006      	b.n	80011a0 <HAL_GPIO_Init+0x25c>
 8001192:	4b20      	ldr	r3, [pc, #128]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 8001194:	685a      	ldr	r2, [r3, #4]
 8001196:	69bb      	ldr	r3, [r7, #24]
 8001198:	43db      	mvns	r3, r3
 800119a:	491e      	ldr	r1, [pc, #120]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 800119c:	4013      	ands	r3, r2
 800119e:	604b      	str	r3, [r1, #4]
 80011a0:	683b      	ldr	r3, [r7, #0]
 80011a2:	685b      	ldr	r3, [r3, #4]
 80011a4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d006      	beq.n	80011ba <HAL_GPIO_Init+0x276>
 80011ac:	4b19      	ldr	r3, [pc, #100]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 80011ae:	689a      	ldr	r2, [r3, #8]
 80011b0:	4918      	ldr	r1, [pc, #96]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 80011b2:	69bb      	ldr	r3, [r7, #24]
 80011b4:	4313      	orrs	r3, r2
 80011b6:	608b      	str	r3, [r1, #8]
 80011b8:	e006      	b.n	80011c8 <HAL_GPIO_Init+0x284>
 80011ba:	4b16      	ldr	r3, [pc, #88]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 80011bc:	689a      	ldr	r2, [r3, #8]
 80011be:	69bb      	ldr	r3, [r7, #24]
 80011c0:	43db      	mvns	r3, r3
 80011c2:	4914      	ldr	r1, [pc, #80]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 80011c4:	4013      	ands	r3, r2
 80011c6:	608b      	str	r3, [r1, #8]
 80011c8:	683b      	ldr	r3, [r7, #0]
 80011ca:	685b      	ldr	r3, [r3, #4]
 80011cc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d021      	beq.n	8001218 <HAL_GPIO_Init+0x2d4>
 80011d4:	4b0f      	ldr	r3, [pc, #60]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 80011d6:	68da      	ldr	r2, [r3, #12]
 80011d8:	490e      	ldr	r1, [pc, #56]	@ (8001214 <HAL_GPIO_Init+0x2d0>)
 80011da:	69bb      	ldr	r3, [r7, #24]
 80011dc:	4313      	orrs	r3, r2
 80011de:	60cb      	str	r3, [r1, #12]
 80011e0:	e021      	b.n	8001226 <HAL_GPIO_Init+0x2e2>
 80011e2:	bf00      	nop
 80011e4:	10320000 	.word	0x10320000
 80011e8:	10310000 	.word	0x10310000
 80011ec:	10220000 	.word	0x10220000
 80011f0:	10210000 	.word	0x10210000
 80011f4:	10120000 	.word	0x10120000
 80011f8:	10110000 	.word	0x10110000
 80011fc:	40021000 	.word	0x40021000
 8001200:	40010000 	.word	0x40010000
 8001204:	40010800 	.word	0x40010800
 8001208:	40010c00 	.word	0x40010c00
 800120c:	40011000 	.word	0x40011000
 8001210:	40011400 	.word	0x40011400
 8001214:	40010400 	.word	0x40010400
 8001218:	4b0b      	ldr	r3, [pc, #44]	@ (8001248 <HAL_GPIO_Init+0x304>)
 800121a:	68da      	ldr	r2, [r3, #12]
 800121c:	69bb      	ldr	r3, [r7, #24]
 800121e:	43db      	mvns	r3, r3
 8001220:	4909      	ldr	r1, [pc, #36]	@ (8001248 <HAL_GPIO_Init+0x304>)
 8001222:	4013      	ands	r3, r2
 8001224:	60cb      	str	r3, [r1, #12]
 8001226:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001228:	3301      	adds	r3, #1
 800122a:	627b      	str	r3, [r7, #36]	@ 0x24
 800122c:	683b      	ldr	r3, [r7, #0]
 800122e:	681a      	ldr	r2, [r3, #0]
 8001230:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001232:	fa22 f303 	lsr.w	r3, r2, r3
 8001236:	2b00      	cmp	r3, #0
 8001238:	f47f ae8e 	bne.w	8000f58 <HAL_GPIO_Init+0x14>
 800123c:	bf00      	nop
 800123e:	bf00      	nop
 8001240:	372c      	adds	r7, #44	@ 0x2c
 8001242:	46bd      	mov	sp, r7
 8001244:	bc80      	pop	{r7}
 8001246:	4770      	bx	lr
 8001248:	40010400 	.word	0x40010400

0800124c <HAL_GPIO_WritePin>:
 800124c:	b480      	push	{r7}
 800124e:	b083      	sub	sp, #12
 8001250:	af00      	add	r7, sp, #0
 8001252:	6078      	str	r0, [r7, #4]
 8001254:	460b      	mov	r3, r1
 8001256:	807b      	strh	r3, [r7, #2]
 8001258:	4613      	mov	r3, r2
 800125a:	707b      	strb	r3, [r7, #1]
 800125c:	787b      	ldrb	r3, [r7, #1]
 800125e:	2b00      	cmp	r3, #0
 8001260:	d003      	beq.n	800126a <HAL_GPIO_WritePin+0x1e>
 8001262:	887a      	ldrh	r2, [r7, #2]
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	611a      	str	r2, [r3, #16]
 8001268:	e003      	b.n	8001272 <HAL_GPIO_WritePin+0x26>
 800126a:	887b      	ldrh	r3, [r7, #2]
 800126c:	041a      	lsls	r2, r3, #16
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	611a      	str	r2, [r3, #16]
 8001272:	bf00      	nop
 8001274:	370c      	adds	r7, #12
 8001276:	46bd      	mov	sp, r7
 8001278:	bc80      	pop	{r7}
 800127a:	4770      	bx	lr

0800127c <HAL_RCC_OscConfig>:
 800127c:	b580      	push	{r7, lr}
 800127e:	b086      	sub	sp, #24
 8001280:	af00      	add	r7, sp, #0
 8001282:	6078      	str	r0, [r7, #4]
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	2b00      	cmp	r3, #0
 8001288:	d101      	bne.n	800128e <HAL_RCC_OscConfig+0x12>
 800128a:	2301      	movs	r3, #1
 800128c:	e272      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 800128e:	687b      	ldr	r3, [r7, #4]
 8001290:	681b      	ldr	r3, [r3, #0]
 8001292:	f003 0301 	and.w	r3, r3, #1
 8001296:	2b00      	cmp	r3, #0
 8001298:	f000 8087 	beq.w	80013aa <HAL_RCC_OscConfig+0x12e>
 800129c:	4b92      	ldr	r3, [pc, #584]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800129e:	685b      	ldr	r3, [r3, #4]
 80012a0:	f003 030c 	and.w	r3, r3, #12
 80012a4:	2b04      	cmp	r3, #4
 80012a6:	d00c      	beq.n	80012c2 <HAL_RCC_OscConfig+0x46>
 80012a8:	4b8f      	ldr	r3, [pc, #572]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80012aa:	685b      	ldr	r3, [r3, #4]
 80012ac:	f003 030c 	and.w	r3, r3, #12
 80012b0:	2b08      	cmp	r3, #8
 80012b2:	d112      	bne.n	80012da <HAL_RCC_OscConfig+0x5e>
 80012b4:	4b8c      	ldr	r3, [pc, #560]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80012b6:	685b      	ldr	r3, [r3, #4]
 80012b8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80012bc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80012c0:	d10b      	bne.n	80012da <HAL_RCC_OscConfig+0x5e>
 80012c2:	4b89      	ldr	r3, [pc, #548]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80012ca:	2b00      	cmp	r3, #0
 80012cc:	d06c      	beq.n	80013a8 <HAL_RCC_OscConfig+0x12c>
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	685b      	ldr	r3, [r3, #4]
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d168      	bne.n	80013a8 <HAL_RCC_OscConfig+0x12c>
 80012d6:	2301      	movs	r3, #1
 80012d8:	e24c      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	685b      	ldr	r3, [r3, #4]
 80012de:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80012e2:	d106      	bne.n	80012f2 <HAL_RCC_OscConfig+0x76>
 80012e4:	4b80      	ldr	r3, [pc, #512]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	4a7f      	ldr	r2, [pc, #508]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80012ea:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80012ee:	6013      	str	r3, [r2, #0]
 80012f0:	e02e      	b.n	8001350 <HAL_RCC_OscConfig+0xd4>
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	685b      	ldr	r3, [r3, #4]
 80012f6:	2b00      	cmp	r3, #0
 80012f8:	d10c      	bne.n	8001314 <HAL_RCC_OscConfig+0x98>
 80012fa:	4b7b      	ldr	r3, [pc, #492]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80012fc:	681b      	ldr	r3, [r3, #0]
 80012fe:	4a7a      	ldr	r2, [pc, #488]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001300:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001304:	6013      	str	r3, [r2, #0]
 8001306:	4b78      	ldr	r3, [pc, #480]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001308:	681b      	ldr	r3, [r3, #0]
 800130a:	4a77      	ldr	r2, [pc, #476]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800130c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001310:	6013      	str	r3, [r2, #0]
 8001312:	e01d      	b.n	8001350 <HAL_RCC_OscConfig+0xd4>
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	685b      	ldr	r3, [r3, #4]
 8001318:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800131c:	d10c      	bne.n	8001338 <HAL_RCC_OscConfig+0xbc>
 800131e:	4b72      	ldr	r3, [pc, #456]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001320:	681b      	ldr	r3, [r3, #0]
 8001322:	4a71      	ldr	r2, [pc, #452]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001324:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001328:	6013      	str	r3, [r2, #0]
 800132a:	4b6f      	ldr	r3, [pc, #444]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	4a6e      	ldr	r2, [pc, #440]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001330:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001334:	6013      	str	r3, [r2, #0]
 8001336:	e00b      	b.n	8001350 <HAL_RCC_OscConfig+0xd4>
 8001338:	4b6b      	ldr	r3, [pc, #428]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	4a6a      	ldr	r2, [pc, #424]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800133e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001342:	6013      	str	r3, [r2, #0]
 8001344:	4b68      	ldr	r3, [pc, #416]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001346:	681b      	ldr	r3, [r3, #0]
 8001348:	4a67      	ldr	r2, [pc, #412]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800134a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800134e:	6013      	str	r3, [r2, #0]
 8001350:	687b      	ldr	r3, [r7, #4]
 8001352:	685b      	ldr	r3, [r3, #4]
 8001354:	2b00      	cmp	r3, #0
 8001356:	d013      	beq.n	8001380 <HAL_RCC_OscConfig+0x104>
 8001358:	f7ff fc66 	bl	8000c28 <HAL_GetTick>
 800135c:	6138      	str	r0, [r7, #16]
 800135e:	e008      	b.n	8001372 <HAL_RCC_OscConfig+0xf6>
 8001360:	f7ff fc62 	bl	8000c28 <HAL_GetTick>
 8001364:	4602      	mov	r2, r0
 8001366:	693b      	ldr	r3, [r7, #16]
 8001368:	1ad3      	subs	r3, r2, r3
 800136a:	2b64      	cmp	r3, #100	@ 0x64
 800136c:	d901      	bls.n	8001372 <HAL_RCC_OscConfig+0xf6>
 800136e:	2303      	movs	r3, #3
 8001370:	e200      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001372:	4b5d      	ldr	r3, [pc, #372]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001374:	681b      	ldr	r3, [r3, #0]
 8001376:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800137a:	2b00      	cmp	r3, #0
 800137c:	d0f0      	beq.n	8001360 <HAL_RCC_OscConfig+0xe4>
 800137e:	e014      	b.n	80013aa <HAL_RCC_OscConfig+0x12e>
 8001380:	f7ff fc52 	bl	8000c28 <HAL_GetTick>
 8001384:	6138      	str	r0, [r7, #16]
 8001386:	e008      	b.n	800139a <HAL_RCC_OscConfig+0x11e>
 8001388:	f7ff fc4e 	bl	8000c28 <HAL_GetTick>
 800138c:	4602      	mov	r2, r0
 800138e:	693b      	ldr	r3, [r7, #16]
 8001390:	1ad3      	subs	r3, r2, r3
 8001392:	2b64      	cmp	r3, #100	@ 0x64
 8001394:	d901      	bls.n	800139a <HAL_RCC_OscConfig+0x11e>
 8001396:	2303      	movs	r3, #3
 8001398:	e1ec      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 800139a:	4b53      	ldr	r3, [pc, #332]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80013a2:	2b00      	cmp	r3, #0
 80013a4:	d1f0      	bne.n	8001388 <HAL_RCC_OscConfig+0x10c>
 80013a6:	e000      	b.n	80013aa <HAL_RCC_OscConfig+0x12e>
 80013a8:	bf00      	nop
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	681b      	ldr	r3, [r3, #0]
 80013ae:	f003 0302 	and.w	r3, r3, #2
 80013b2:	2b00      	cmp	r3, #0
 80013b4:	d063      	beq.n	800147e <HAL_RCC_OscConfig+0x202>
 80013b6:	4b4c      	ldr	r3, [pc, #304]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80013b8:	685b      	ldr	r3, [r3, #4]
 80013ba:	f003 030c 	and.w	r3, r3, #12
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d00b      	beq.n	80013da <HAL_RCC_OscConfig+0x15e>
 80013c2:	4b49      	ldr	r3, [pc, #292]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80013c4:	685b      	ldr	r3, [r3, #4]
 80013c6:	f003 030c 	and.w	r3, r3, #12
 80013ca:	2b08      	cmp	r3, #8
 80013cc:	d11c      	bne.n	8001408 <HAL_RCC_OscConfig+0x18c>
 80013ce:	4b46      	ldr	r3, [pc, #280]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80013d0:	685b      	ldr	r3, [r3, #4]
 80013d2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	d116      	bne.n	8001408 <HAL_RCC_OscConfig+0x18c>
 80013da:	4b43      	ldr	r3, [pc, #268]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80013dc:	681b      	ldr	r3, [r3, #0]
 80013de:	f003 0302 	and.w	r3, r3, #2
 80013e2:	2b00      	cmp	r3, #0
 80013e4:	d005      	beq.n	80013f2 <HAL_RCC_OscConfig+0x176>
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	691b      	ldr	r3, [r3, #16]
 80013ea:	2b01      	cmp	r3, #1
 80013ec:	d001      	beq.n	80013f2 <HAL_RCC_OscConfig+0x176>
 80013ee:	2301      	movs	r3, #1
 80013f0:	e1c0      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 80013f2:	4b3d      	ldr	r3, [pc, #244]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	695b      	ldr	r3, [r3, #20]
 80013fe:	00db      	lsls	r3, r3, #3
 8001400:	4939      	ldr	r1, [pc, #228]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001402:	4313      	orrs	r3, r2
 8001404:	600b      	str	r3, [r1, #0]
 8001406:	e03a      	b.n	800147e <HAL_RCC_OscConfig+0x202>
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	691b      	ldr	r3, [r3, #16]
 800140c:	2b00      	cmp	r3, #0
 800140e:	d020      	beq.n	8001452 <HAL_RCC_OscConfig+0x1d6>
 8001410:	4b36      	ldr	r3, [pc, #216]	@ (80014ec <HAL_RCC_OscConfig+0x270>)
 8001412:	2201      	movs	r2, #1
 8001414:	601a      	str	r2, [r3, #0]
 8001416:	f7ff fc07 	bl	8000c28 <HAL_GetTick>
 800141a:	6138      	str	r0, [r7, #16]
 800141c:	e008      	b.n	8001430 <HAL_RCC_OscConfig+0x1b4>
 800141e:	f7ff fc03 	bl	8000c28 <HAL_GetTick>
 8001422:	4602      	mov	r2, r0
 8001424:	693b      	ldr	r3, [r7, #16]
 8001426:	1ad3      	subs	r3, r2, r3
 8001428:	2b02      	cmp	r3, #2
 800142a:	d901      	bls.n	8001430 <HAL_RCC_OscConfig+0x1b4>
 800142c:	2303      	movs	r3, #3
 800142e:	e1a1      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001430:	4b2d      	ldr	r3, [pc, #180]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001432:	681b      	ldr	r3, [r3, #0]
 8001434:	f003 0302 	and.w	r3, r3, #2
 8001438:	2b00      	cmp	r3, #0
 800143a:	d0f0      	beq.n	800141e <HAL_RCC_OscConfig+0x1a2>
 800143c:	4b2a      	ldr	r3, [pc, #168]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800143e:	681b      	ldr	r3, [r3, #0]
 8001440:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	695b      	ldr	r3, [r3, #20]
 8001448:	00db      	lsls	r3, r3, #3
 800144a:	4927      	ldr	r1, [pc, #156]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 800144c:	4313      	orrs	r3, r2
 800144e:	600b      	str	r3, [r1, #0]
 8001450:	e015      	b.n	800147e <HAL_RCC_OscConfig+0x202>
 8001452:	4b26      	ldr	r3, [pc, #152]	@ (80014ec <HAL_RCC_OscConfig+0x270>)
 8001454:	2200      	movs	r2, #0
 8001456:	601a      	str	r2, [r3, #0]
 8001458:	f7ff fbe6 	bl	8000c28 <HAL_GetTick>
 800145c:	6138      	str	r0, [r7, #16]
 800145e:	e008      	b.n	8001472 <HAL_RCC_OscConfig+0x1f6>
 8001460:	f7ff fbe2 	bl	8000c28 <HAL_GetTick>
 8001464:	4602      	mov	r2, r0
 8001466:	693b      	ldr	r3, [r7, #16]
 8001468:	1ad3      	subs	r3, r2, r3
 800146a:	2b02      	cmp	r3, #2
 800146c:	d901      	bls.n	8001472 <HAL_RCC_OscConfig+0x1f6>
 800146e:	2303      	movs	r3, #3
 8001470:	e180      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001472:	4b1d      	ldr	r3, [pc, #116]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 8001474:	681b      	ldr	r3, [r3, #0]
 8001476:	f003 0302 	and.w	r3, r3, #2
 800147a:	2b00      	cmp	r3, #0
 800147c:	d1f0      	bne.n	8001460 <HAL_RCC_OscConfig+0x1e4>
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	681b      	ldr	r3, [r3, #0]
 8001482:	f003 0308 	and.w	r3, r3, #8
 8001486:	2b00      	cmp	r3, #0
 8001488:	d03a      	beq.n	8001500 <HAL_RCC_OscConfig+0x284>
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	699b      	ldr	r3, [r3, #24]
 800148e:	2b00      	cmp	r3, #0
 8001490:	d019      	beq.n	80014c6 <HAL_RCC_OscConfig+0x24a>
 8001492:	4b17      	ldr	r3, [pc, #92]	@ (80014f0 <HAL_RCC_OscConfig+0x274>)
 8001494:	2201      	movs	r2, #1
 8001496:	601a      	str	r2, [r3, #0]
 8001498:	f7ff fbc6 	bl	8000c28 <HAL_GetTick>
 800149c:	6138      	str	r0, [r7, #16]
 800149e:	e008      	b.n	80014b2 <HAL_RCC_OscConfig+0x236>
 80014a0:	f7ff fbc2 	bl	8000c28 <HAL_GetTick>
 80014a4:	4602      	mov	r2, r0
 80014a6:	693b      	ldr	r3, [r7, #16]
 80014a8:	1ad3      	subs	r3, r2, r3
 80014aa:	2b02      	cmp	r3, #2
 80014ac:	d901      	bls.n	80014b2 <HAL_RCC_OscConfig+0x236>
 80014ae:	2303      	movs	r3, #3
 80014b0:	e160      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 80014b2:	4b0d      	ldr	r3, [pc, #52]	@ (80014e8 <HAL_RCC_OscConfig+0x26c>)
 80014b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80014b6:	f003 0302 	and.w	r3, r3, #2
 80014ba:	2b00      	cmp	r3, #0
 80014bc:	d0f0      	beq.n	80014a0 <HAL_RCC_OscConfig+0x224>
 80014be:	2001      	movs	r0, #1
 80014c0:	f000 fad8 	bl	8001a74 <RCC_Delay>
 80014c4:	e01c      	b.n	8001500 <HAL_RCC_OscConfig+0x284>
 80014c6:	4b0a      	ldr	r3, [pc, #40]	@ (80014f0 <HAL_RCC_OscConfig+0x274>)
 80014c8:	2200      	movs	r2, #0
 80014ca:	601a      	str	r2, [r3, #0]
 80014cc:	f7ff fbac 	bl	8000c28 <HAL_GetTick>
 80014d0:	6138      	str	r0, [r7, #16]
 80014d2:	e00f      	b.n	80014f4 <HAL_RCC_OscConfig+0x278>
 80014d4:	f7ff fba8 	bl	8000c28 <HAL_GetTick>
 80014d8:	4602      	mov	r2, r0
 80014da:	693b      	ldr	r3, [r7, #16]
 80014dc:	1ad3      	subs	r3, r2, r3
 80014de:	2b02      	cmp	r3, #2
 80014e0:	d908      	bls.n	80014f4 <HAL_RCC_OscConfig+0x278>
 80014e2:	2303      	movs	r3, #3
 80014e4:	e146      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 80014e6:	bf00      	nop
 80014e8:	40021000 	.word	0x40021000
 80014ec:	42420000 	.word	0x42420000
 80014f0:	42420480 	.word	0x42420480
 80014f4:	4b92      	ldr	r3, [pc, #584]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80014f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80014f8:	f003 0302 	and.w	r3, r3, #2
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d1e9      	bne.n	80014d4 <HAL_RCC_OscConfig+0x258>
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	f003 0304 	and.w	r3, r3, #4
 8001508:	2b00      	cmp	r3, #0
 800150a:	f000 80a6 	beq.w	800165a <HAL_RCC_OscConfig+0x3de>
 800150e:	2300      	movs	r3, #0
 8001510:	75fb      	strb	r3, [r7, #23]
 8001512:	4b8b      	ldr	r3, [pc, #556]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001514:	69db      	ldr	r3, [r3, #28]
 8001516:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800151a:	2b00      	cmp	r3, #0
 800151c:	d10d      	bne.n	800153a <HAL_RCC_OscConfig+0x2be>
 800151e:	4b88      	ldr	r3, [pc, #544]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001520:	69db      	ldr	r3, [r3, #28]
 8001522:	4a87      	ldr	r2, [pc, #540]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001524:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001528:	61d3      	str	r3, [r2, #28]
 800152a:	4b85      	ldr	r3, [pc, #532]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 800152c:	69db      	ldr	r3, [r3, #28]
 800152e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001532:	60bb      	str	r3, [r7, #8]
 8001534:	68bb      	ldr	r3, [r7, #8]
 8001536:	2301      	movs	r3, #1
 8001538:	75fb      	strb	r3, [r7, #23]
 800153a:	4b82      	ldr	r3, [pc, #520]	@ (8001744 <HAL_RCC_OscConfig+0x4c8>)
 800153c:	681b      	ldr	r3, [r3, #0]
 800153e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001542:	2b00      	cmp	r3, #0
 8001544:	d118      	bne.n	8001578 <HAL_RCC_OscConfig+0x2fc>
 8001546:	4b7f      	ldr	r3, [pc, #508]	@ (8001744 <HAL_RCC_OscConfig+0x4c8>)
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	4a7e      	ldr	r2, [pc, #504]	@ (8001744 <HAL_RCC_OscConfig+0x4c8>)
 800154c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001550:	6013      	str	r3, [r2, #0]
 8001552:	f7ff fb69 	bl	8000c28 <HAL_GetTick>
 8001556:	6138      	str	r0, [r7, #16]
 8001558:	e008      	b.n	800156c <HAL_RCC_OscConfig+0x2f0>
 800155a:	f7ff fb65 	bl	8000c28 <HAL_GetTick>
 800155e:	4602      	mov	r2, r0
 8001560:	693b      	ldr	r3, [r7, #16]
 8001562:	1ad3      	subs	r3, r2, r3
 8001564:	2b64      	cmp	r3, #100	@ 0x64
 8001566:	d901      	bls.n	800156c <HAL_RCC_OscConfig+0x2f0>
 8001568:	2303      	movs	r3, #3
 800156a:	e103      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 800156c:	4b75      	ldr	r3, [pc, #468]	@ (8001744 <HAL_RCC_OscConfig+0x4c8>)
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001574:	2b00      	cmp	r3, #0
 8001576:	d0f0      	beq.n	800155a <HAL_RCC_OscConfig+0x2de>
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	68db      	ldr	r3, [r3, #12]
 800157c:	2b01      	cmp	r3, #1
 800157e:	d106      	bne.n	800158e <HAL_RCC_OscConfig+0x312>
 8001580:	4b6f      	ldr	r3, [pc, #444]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001582:	6a1b      	ldr	r3, [r3, #32]
 8001584:	4a6e      	ldr	r2, [pc, #440]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001586:	f043 0301 	orr.w	r3, r3, #1
 800158a:	6213      	str	r3, [r2, #32]
 800158c:	e02d      	b.n	80015ea <HAL_RCC_OscConfig+0x36e>
 800158e:	687b      	ldr	r3, [r7, #4]
 8001590:	68db      	ldr	r3, [r3, #12]
 8001592:	2b00      	cmp	r3, #0
 8001594:	d10c      	bne.n	80015b0 <HAL_RCC_OscConfig+0x334>
 8001596:	4b6a      	ldr	r3, [pc, #424]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001598:	6a1b      	ldr	r3, [r3, #32]
 800159a:	4a69      	ldr	r2, [pc, #420]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 800159c:	f023 0301 	bic.w	r3, r3, #1
 80015a0:	6213      	str	r3, [r2, #32]
 80015a2:	4b67      	ldr	r3, [pc, #412]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015a4:	6a1b      	ldr	r3, [r3, #32]
 80015a6:	4a66      	ldr	r2, [pc, #408]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015a8:	f023 0304 	bic.w	r3, r3, #4
 80015ac:	6213      	str	r3, [r2, #32]
 80015ae:	e01c      	b.n	80015ea <HAL_RCC_OscConfig+0x36e>
 80015b0:	687b      	ldr	r3, [r7, #4]
 80015b2:	68db      	ldr	r3, [r3, #12]
 80015b4:	2b05      	cmp	r3, #5
 80015b6:	d10c      	bne.n	80015d2 <HAL_RCC_OscConfig+0x356>
 80015b8:	4b61      	ldr	r3, [pc, #388]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015ba:	6a1b      	ldr	r3, [r3, #32]
 80015bc:	4a60      	ldr	r2, [pc, #384]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015be:	f043 0304 	orr.w	r3, r3, #4
 80015c2:	6213      	str	r3, [r2, #32]
 80015c4:	4b5e      	ldr	r3, [pc, #376]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015c6:	6a1b      	ldr	r3, [r3, #32]
 80015c8:	4a5d      	ldr	r2, [pc, #372]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015ca:	f043 0301 	orr.w	r3, r3, #1
 80015ce:	6213      	str	r3, [r2, #32]
 80015d0:	e00b      	b.n	80015ea <HAL_RCC_OscConfig+0x36e>
 80015d2:	4b5b      	ldr	r3, [pc, #364]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015d4:	6a1b      	ldr	r3, [r3, #32]
 80015d6:	4a5a      	ldr	r2, [pc, #360]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015d8:	f023 0301 	bic.w	r3, r3, #1
 80015dc:	6213      	str	r3, [r2, #32]
 80015de:	4b58      	ldr	r3, [pc, #352]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015e0:	6a1b      	ldr	r3, [r3, #32]
 80015e2:	4a57      	ldr	r2, [pc, #348]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80015e4:	f023 0304 	bic.w	r3, r3, #4
 80015e8:	6213      	str	r3, [r2, #32]
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	68db      	ldr	r3, [r3, #12]
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d015      	beq.n	800161e <HAL_RCC_OscConfig+0x3a2>
 80015f2:	f7ff fb19 	bl	8000c28 <HAL_GetTick>
 80015f6:	6138      	str	r0, [r7, #16]
 80015f8:	e00a      	b.n	8001610 <HAL_RCC_OscConfig+0x394>
 80015fa:	f7ff fb15 	bl	8000c28 <HAL_GetTick>
 80015fe:	4602      	mov	r2, r0
 8001600:	693b      	ldr	r3, [r7, #16]
 8001602:	1ad3      	subs	r3, r2, r3
 8001604:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001608:	4293      	cmp	r3, r2
 800160a:	d901      	bls.n	8001610 <HAL_RCC_OscConfig+0x394>
 800160c:	2303      	movs	r3, #3
 800160e:	e0b1      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001610:	4b4b      	ldr	r3, [pc, #300]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001612:	6a1b      	ldr	r3, [r3, #32]
 8001614:	f003 0302 	and.w	r3, r3, #2
 8001618:	2b00      	cmp	r3, #0
 800161a:	d0ee      	beq.n	80015fa <HAL_RCC_OscConfig+0x37e>
 800161c:	e014      	b.n	8001648 <HAL_RCC_OscConfig+0x3cc>
 800161e:	f7ff fb03 	bl	8000c28 <HAL_GetTick>
 8001622:	6138      	str	r0, [r7, #16]
 8001624:	e00a      	b.n	800163c <HAL_RCC_OscConfig+0x3c0>
 8001626:	f7ff faff 	bl	8000c28 <HAL_GetTick>
 800162a:	4602      	mov	r2, r0
 800162c:	693b      	ldr	r3, [r7, #16]
 800162e:	1ad3      	subs	r3, r2, r3
 8001630:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001634:	4293      	cmp	r3, r2
 8001636:	d901      	bls.n	800163c <HAL_RCC_OscConfig+0x3c0>
 8001638:	2303      	movs	r3, #3
 800163a:	e09b      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 800163c:	4b40      	ldr	r3, [pc, #256]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 800163e:	6a1b      	ldr	r3, [r3, #32]
 8001640:	f003 0302 	and.w	r3, r3, #2
 8001644:	2b00      	cmp	r3, #0
 8001646:	d1ee      	bne.n	8001626 <HAL_RCC_OscConfig+0x3aa>
 8001648:	7dfb      	ldrb	r3, [r7, #23]
 800164a:	2b01      	cmp	r3, #1
 800164c:	d105      	bne.n	800165a <HAL_RCC_OscConfig+0x3de>
 800164e:	4b3c      	ldr	r3, [pc, #240]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001650:	69db      	ldr	r3, [r3, #28]
 8001652:	4a3b      	ldr	r2, [pc, #236]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001654:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8001658:	61d3      	str	r3, [r2, #28]
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	69db      	ldr	r3, [r3, #28]
 800165e:	2b00      	cmp	r3, #0
 8001660:	f000 8087 	beq.w	8001772 <HAL_RCC_OscConfig+0x4f6>
 8001664:	4b36      	ldr	r3, [pc, #216]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001666:	685b      	ldr	r3, [r3, #4]
 8001668:	f003 030c 	and.w	r3, r3, #12
 800166c:	2b08      	cmp	r3, #8
 800166e:	d061      	beq.n	8001734 <HAL_RCC_OscConfig+0x4b8>
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	69db      	ldr	r3, [r3, #28]
 8001674:	2b02      	cmp	r3, #2
 8001676:	d146      	bne.n	8001706 <HAL_RCC_OscConfig+0x48a>
 8001678:	4b33      	ldr	r3, [pc, #204]	@ (8001748 <HAL_RCC_OscConfig+0x4cc>)
 800167a:	2200      	movs	r2, #0
 800167c:	601a      	str	r2, [r3, #0]
 800167e:	f7ff fad3 	bl	8000c28 <HAL_GetTick>
 8001682:	6138      	str	r0, [r7, #16]
 8001684:	e008      	b.n	8001698 <HAL_RCC_OscConfig+0x41c>
 8001686:	f7ff facf 	bl	8000c28 <HAL_GetTick>
 800168a:	4602      	mov	r2, r0
 800168c:	693b      	ldr	r3, [r7, #16]
 800168e:	1ad3      	subs	r3, r2, r3
 8001690:	2b02      	cmp	r3, #2
 8001692:	d901      	bls.n	8001698 <HAL_RCC_OscConfig+0x41c>
 8001694:	2303      	movs	r3, #3
 8001696:	e06d      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001698:	4b29      	ldr	r3, [pc, #164]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d1f0      	bne.n	8001686 <HAL_RCC_OscConfig+0x40a>
 80016a4:	687b      	ldr	r3, [r7, #4]
 80016a6:	6a1b      	ldr	r3, [r3, #32]
 80016a8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80016ac:	d108      	bne.n	80016c0 <HAL_RCC_OscConfig+0x444>
 80016ae:	4b24      	ldr	r3, [pc, #144]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80016b0:	685b      	ldr	r3, [r3, #4]
 80016b2:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80016b6:	687b      	ldr	r3, [r7, #4]
 80016b8:	689b      	ldr	r3, [r3, #8]
 80016ba:	4921      	ldr	r1, [pc, #132]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80016bc:	4313      	orrs	r3, r2
 80016be:	604b      	str	r3, [r1, #4]
 80016c0:	4b1f      	ldr	r3, [pc, #124]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80016c2:	685b      	ldr	r3, [r3, #4]
 80016c4:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	6a19      	ldr	r1, [r3, #32]
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80016d0:	430b      	orrs	r3, r1
 80016d2:	491b      	ldr	r1, [pc, #108]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80016d4:	4313      	orrs	r3, r2
 80016d6:	604b      	str	r3, [r1, #4]
 80016d8:	4b1b      	ldr	r3, [pc, #108]	@ (8001748 <HAL_RCC_OscConfig+0x4cc>)
 80016da:	2201      	movs	r2, #1
 80016dc:	601a      	str	r2, [r3, #0]
 80016de:	f7ff faa3 	bl	8000c28 <HAL_GetTick>
 80016e2:	6138      	str	r0, [r7, #16]
 80016e4:	e008      	b.n	80016f8 <HAL_RCC_OscConfig+0x47c>
 80016e6:	f7ff fa9f 	bl	8000c28 <HAL_GetTick>
 80016ea:	4602      	mov	r2, r0
 80016ec:	693b      	ldr	r3, [r7, #16]
 80016ee:	1ad3      	subs	r3, r2, r3
 80016f0:	2b02      	cmp	r3, #2
 80016f2:	d901      	bls.n	80016f8 <HAL_RCC_OscConfig+0x47c>
 80016f4:	2303      	movs	r3, #3
 80016f6:	e03d      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 80016f8:	4b11      	ldr	r3, [pc, #68]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001700:	2b00      	cmp	r3, #0
 8001702:	d0f0      	beq.n	80016e6 <HAL_RCC_OscConfig+0x46a>
 8001704:	e035      	b.n	8001772 <HAL_RCC_OscConfig+0x4f6>
 8001706:	4b10      	ldr	r3, [pc, #64]	@ (8001748 <HAL_RCC_OscConfig+0x4cc>)
 8001708:	2200      	movs	r2, #0
 800170a:	601a      	str	r2, [r3, #0]
 800170c:	f7ff fa8c 	bl	8000c28 <HAL_GetTick>
 8001710:	6138      	str	r0, [r7, #16]
 8001712:	e008      	b.n	8001726 <HAL_RCC_OscConfig+0x4aa>
 8001714:	f7ff fa88 	bl	8000c28 <HAL_GetTick>
 8001718:	4602      	mov	r2, r0
 800171a:	693b      	ldr	r3, [r7, #16]
 800171c:	1ad3      	subs	r3, r2, r3
 800171e:	2b02      	cmp	r3, #2
 8001720:	d901      	bls.n	8001726 <HAL_RCC_OscConfig+0x4aa>
 8001722:	2303      	movs	r3, #3
 8001724:	e026      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001726:	4b06      	ldr	r3, [pc, #24]	@ (8001740 <HAL_RCC_OscConfig+0x4c4>)
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800172e:	2b00      	cmp	r3, #0
 8001730:	d1f0      	bne.n	8001714 <HAL_RCC_OscConfig+0x498>
 8001732:	e01e      	b.n	8001772 <HAL_RCC_OscConfig+0x4f6>
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	69db      	ldr	r3, [r3, #28]
 8001738:	2b01      	cmp	r3, #1
 800173a:	d107      	bne.n	800174c <HAL_RCC_OscConfig+0x4d0>
 800173c:	2301      	movs	r3, #1
 800173e:	e019      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001740:	40021000 	.word	0x40021000
 8001744:	40007000 	.word	0x40007000
 8001748:	42420060 	.word	0x42420060
 800174c:	4b0b      	ldr	r3, [pc, #44]	@ (800177c <HAL_RCC_OscConfig+0x500>)
 800174e:	685b      	ldr	r3, [r3, #4]
 8001750:	60fb      	str	r3, [r7, #12]
 8001752:	68fb      	ldr	r3, [r7, #12]
 8001754:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	6a1b      	ldr	r3, [r3, #32]
 800175c:	429a      	cmp	r2, r3
 800175e:	d106      	bne.n	800176e <HAL_RCC_OscConfig+0x4f2>
 8001760:	68fb      	ldr	r3, [r7, #12]
 8001762:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800176a:	429a      	cmp	r2, r3
 800176c:	d001      	beq.n	8001772 <HAL_RCC_OscConfig+0x4f6>
 800176e:	2301      	movs	r3, #1
 8001770:	e000      	b.n	8001774 <HAL_RCC_OscConfig+0x4f8>
 8001772:	2300      	movs	r3, #0
 8001774:	4618      	mov	r0, r3
 8001776:	3718      	adds	r7, #24
 8001778:	46bd      	mov	sp, r7
 800177a:	bd80      	pop	{r7, pc}
 800177c:	40021000 	.word	0x40021000

08001780 <HAL_RCC_ClockConfig>:
 8001780:	b580      	push	{r7, lr}
 8001782:	b084      	sub	sp, #16
 8001784:	af00      	add	r7, sp, #0
 8001786:	6078      	str	r0, [r7, #4]
 8001788:	6039      	str	r1, [r7, #0]
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	2b00      	cmp	r3, #0
 800178e:	d101      	bne.n	8001794 <HAL_RCC_ClockConfig+0x14>
 8001790:	2301      	movs	r3, #1
 8001792:	e0d0      	b.n	8001936 <HAL_RCC_ClockConfig+0x1b6>
 8001794:	4b6a      	ldr	r3, [pc, #424]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	f003 0307 	and.w	r3, r3, #7
 800179c:	683a      	ldr	r2, [r7, #0]
 800179e:	429a      	cmp	r2, r3
 80017a0:	d910      	bls.n	80017c4 <HAL_RCC_ClockConfig+0x44>
 80017a2:	4b67      	ldr	r3, [pc, #412]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	f023 0207 	bic.w	r2, r3, #7
 80017aa:	4965      	ldr	r1, [pc, #404]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 80017ac:	683b      	ldr	r3, [r7, #0]
 80017ae:	4313      	orrs	r3, r2
 80017b0:	600b      	str	r3, [r1, #0]
 80017b2:	4b63      	ldr	r3, [pc, #396]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	f003 0307 	and.w	r3, r3, #7
 80017ba:	683a      	ldr	r2, [r7, #0]
 80017bc:	429a      	cmp	r2, r3
 80017be:	d001      	beq.n	80017c4 <HAL_RCC_ClockConfig+0x44>
 80017c0:	2301      	movs	r3, #1
 80017c2:	e0b8      	b.n	8001936 <HAL_RCC_ClockConfig+0x1b6>
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	f003 0302 	and.w	r3, r3, #2
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	d020      	beq.n	8001812 <HAL_RCC_ClockConfig+0x92>
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	f003 0304 	and.w	r3, r3, #4
 80017d8:	2b00      	cmp	r3, #0
 80017da:	d005      	beq.n	80017e8 <HAL_RCC_ClockConfig+0x68>
 80017dc:	4b59      	ldr	r3, [pc, #356]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 80017de:	685b      	ldr	r3, [r3, #4]
 80017e0:	4a58      	ldr	r2, [pc, #352]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 80017e2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80017e6:	6053      	str	r3, [r2, #4]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	f003 0308 	and.w	r3, r3, #8
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d005      	beq.n	8001800 <HAL_RCC_ClockConfig+0x80>
 80017f4:	4b53      	ldr	r3, [pc, #332]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 80017f6:	685b      	ldr	r3, [r3, #4]
 80017f8:	4a52      	ldr	r2, [pc, #328]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 80017fa:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80017fe:	6053      	str	r3, [r2, #4]
 8001800:	4b50      	ldr	r3, [pc, #320]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 8001802:	685b      	ldr	r3, [r3, #4]
 8001804:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	689b      	ldr	r3, [r3, #8]
 800180c:	494d      	ldr	r1, [pc, #308]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 800180e:	4313      	orrs	r3, r2
 8001810:	604b      	str	r3, [r1, #4]
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	f003 0301 	and.w	r3, r3, #1
 800181a:	2b00      	cmp	r3, #0
 800181c:	d040      	beq.n	80018a0 <HAL_RCC_ClockConfig+0x120>
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	685b      	ldr	r3, [r3, #4]
 8001822:	2b01      	cmp	r3, #1
 8001824:	d107      	bne.n	8001836 <HAL_RCC_ClockConfig+0xb6>
 8001826:	4b47      	ldr	r3, [pc, #284]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 8001828:	681b      	ldr	r3, [r3, #0]
 800182a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800182e:	2b00      	cmp	r3, #0
 8001830:	d115      	bne.n	800185e <HAL_RCC_ClockConfig+0xde>
 8001832:	2301      	movs	r3, #1
 8001834:	e07f      	b.n	8001936 <HAL_RCC_ClockConfig+0x1b6>
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	685b      	ldr	r3, [r3, #4]
 800183a:	2b02      	cmp	r3, #2
 800183c:	d107      	bne.n	800184e <HAL_RCC_ClockConfig+0xce>
 800183e:	4b41      	ldr	r3, [pc, #260]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001846:	2b00      	cmp	r3, #0
 8001848:	d109      	bne.n	800185e <HAL_RCC_ClockConfig+0xde>
 800184a:	2301      	movs	r3, #1
 800184c:	e073      	b.n	8001936 <HAL_RCC_ClockConfig+0x1b6>
 800184e:	4b3d      	ldr	r3, [pc, #244]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	f003 0302 	and.w	r3, r3, #2
 8001856:	2b00      	cmp	r3, #0
 8001858:	d101      	bne.n	800185e <HAL_RCC_ClockConfig+0xde>
 800185a:	2301      	movs	r3, #1
 800185c:	e06b      	b.n	8001936 <HAL_RCC_ClockConfig+0x1b6>
 800185e:	4b39      	ldr	r3, [pc, #228]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 8001860:	685b      	ldr	r3, [r3, #4]
 8001862:	f023 0203 	bic.w	r2, r3, #3
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	685b      	ldr	r3, [r3, #4]
 800186a:	4936      	ldr	r1, [pc, #216]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 800186c:	4313      	orrs	r3, r2
 800186e:	604b      	str	r3, [r1, #4]
 8001870:	f7ff f9da 	bl	8000c28 <HAL_GetTick>
 8001874:	60f8      	str	r0, [r7, #12]
 8001876:	e00a      	b.n	800188e <HAL_RCC_ClockConfig+0x10e>
 8001878:	f7ff f9d6 	bl	8000c28 <HAL_GetTick>
 800187c:	4602      	mov	r2, r0
 800187e:	68fb      	ldr	r3, [r7, #12]
 8001880:	1ad3      	subs	r3, r2, r3
 8001882:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001886:	4293      	cmp	r3, r2
 8001888:	d901      	bls.n	800188e <HAL_RCC_ClockConfig+0x10e>
 800188a:	2303      	movs	r3, #3
 800188c:	e053      	b.n	8001936 <HAL_RCC_ClockConfig+0x1b6>
 800188e:	4b2d      	ldr	r3, [pc, #180]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 8001890:	685b      	ldr	r3, [r3, #4]
 8001892:	f003 020c 	and.w	r2, r3, #12
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	685b      	ldr	r3, [r3, #4]
 800189a:	009b      	lsls	r3, r3, #2
 800189c:	429a      	cmp	r2, r3
 800189e:	d1eb      	bne.n	8001878 <HAL_RCC_ClockConfig+0xf8>
 80018a0:	4b27      	ldr	r3, [pc, #156]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 80018a2:	681b      	ldr	r3, [r3, #0]
 80018a4:	f003 0307 	and.w	r3, r3, #7
 80018a8:	683a      	ldr	r2, [r7, #0]
 80018aa:	429a      	cmp	r2, r3
 80018ac:	d210      	bcs.n	80018d0 <HAL_RCC_ClockConfig+0x150>
 80018ae:	4b24      	ldr	r3, [pc, #144]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	f023 0207 	bic.w	r2, r3, #7
 80018b6:	4922      	ldr	r1, [pc, #136]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 80018b8:	683b      	ldr	r3, [r7, #0]
 80018ba:	4313      	orrs	r3, r2
 80018bc:	600b      	str	r3, [r1, #0]
 80018be:	4b20      	ldr	r3, [pc, #128]	@ (8001940 <HAL_RCC_ClockConfig+0x1c0>)
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	f003 0307 	and.w	r3, r3, #7
 80018c6:	683a      	ldr	r2, [r7, #0]
 80018c8:	429a      	cmp	r2, r3
 80018ca:	d001      	beq.n	80018d0 <HAL_RCC_ClockConfig+0x150>
 80018cc:	2301      	movs	r3, #1
 80018ce:	e032      	b.n	8001936 <HAL_RCC_ClockConfig+0x1b6>
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	f003 0304 	and.w	r3, r3, #4
 80018d8:	2b00      	cmp	r3, #0
 80018da:	d008      	beq.n	80018ee <HAL_RCC_ClockConfig+0x16e>
 80018dc:	4b19      	ldr	r3, [pc, #100]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 80018de:	685b      	ldr	r3, [r3, #4]
 80018e0:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	68db      	ldr	r3, [r3, #12]
 80018e8:	4916      	ldr	r1, [pc, #88]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 80018ea:	4313      	orrs	r3, r2
 80018ec:	604b      	str	r3, [r1, #4]
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	f003 0308 	and.w	r3, r3, #8
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d009      	beq.n	800190e <HAL_RCC_ClockConfig+0x18e>
 80018fa:	4b12      	ldr	r3, [pc, #72]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 80018fc:	685b      	ldr	r3, [r3, #4]
 80018fe:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	691b      	ldr	r3, [r3, #16]
 8001906:	00db      	lsls	r3, r3, #3
 8001908:	490e      	ldr	r1, [pc, #56]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 800190a:	4313      	orrs	r3, r2
 800190c:	604b      	str	r3, [r1, #4]
 800190e:	f000 f821 	bl	8001954 <HAL_RCC_GetSysClockFreq>
 8001912:	4602      	mov	r2, r0
 8001914:	4b0b      	ldr	r3, [pc, #44]	@ (8001944 <HAL_RCC_ClockConfig+0x1c4>)
 8001916:	685b      	ldr	r3, [r3, #4]
 8001918:	091b      	lsrs	r3, r3, #4
 800191a:	f003 030f 	and.w	r3, r3, #15
 800191e:	490a      	ldr	r1, [pc, #40]	@ (8001948 <HAL_RCC_ClockConfig+0x1c8>)
 8001920:	5ccb      	ldrb	r3, [r1, r3]
 8001922:	fa22 f303 	lsr.w	r3, r2, r3
 8001926:	4a09      	ldr	r2, [pc, #36]	@ (800194c <HAL_RCC_ClockConfig+0x1cc>)
 8001928:	6013      	str	r3, [r2, #0]
 800192a:	4b09      	ldr	r3, [pc, #36]	@ (8001950 <HAL_RCC_ClockConfig+0x1d0>)
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	4618      	mov	r0, r3
 8001930:	f7ff f938 	bl	8000ba4 <HAL_InitTick>
 8001934:	2300      	movs	r3, #0
 8001936:	4618      	mov	r0, r3
 8001938:	3710      	adds	r7, #16
 800193a:	46bd      	mov	sp, r7
 800193c:	bd80      	pop	{r7, pc}
 800193e:	bf00      	nop
 8001940:	40022000 	.word	0x40022000
 8001944:	40021000 	.word	0x40021000
 8001948:	08002c4c 	.word	0x08002c4c
 800194c:	20000000 	.word	0x20000000
 8001950:	20000004 	.word	0x20000004

08001954 <HAL_RCC_GetSysClockFreq>:
 8001954:	b490      	push	{r4, r7}
 8001956:	b08a      	sub	sp, #40	@ 0x28
 8001958:	af00      	add	r7, sp, #0
 800195a:	4b29      	ldr	r3, [pc, #164]	@ (8001a00 <HAL_RCC_GetSysClockFreq+0xac>)
 800195c:	1d3c      	adds	r4, r7, #4
 800195e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001960:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001964:	f240 2301 	movw	r3, #513	@ 0x201
 8001968:	803b      	strh	r3, [r7, #0]
 800196a:	2300      	movs	r3, #0
 800196c:	61fb      	str	r3, [r7, #28]
 800196e:	2300      	movs	r3, #0
 8001970:	61bb      	str	r3, [r7, #24]
 8001972:	2300      	movs	r3, #0
 8001974:	627b      	str	r3, [r7, #36]	@ 0x24
 8001976:	2300      	movs	r3, #0
 8001978:	617b      	str	r3, [r7, #20]
 800197a:	2300      	movs	r3, #0
 800197c:	623b      	str	r3, [r7, #32]
 800197e:	4b21      	ldr	r3, [pc, #132]	@ (8001a04 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001980:	685b      	ldr	r3, [r3, #4]
 8001982:	61fb      	str	r3, [r7, #28]
 8001984:	69fb      	ldr	r3, [r7, #28]
 8001986:	f003 030c 	and.w	r3, r3, #12
 800198a:	2b04      	cmp	r3, #4
 800198c:	d002      	beq.n	8001994 <HAL_RCC_GetSysClockFreq+0x40>
 800198e:	2b08      	cmp	r3, #8
 8001990:	d003      	beq.n	800199a <HAL_RCC_GetSysClockFreq+0x46>
 8001992:	e02b      	b.n	80019ec <HAL_RCC_GetSysClockFreq+0x98>
 8001994:	4b1c      	ldr	r3, [pc, #112]	@ (8001a08 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001996:	623b      	str	r3, [r7, #32]
 8001998:	e02b      	b.n	80019f2 <HAL_RCC_GetSysClockFreq+0x9e>
 800199a:	69fb      	ldr	r3, [r7, #28]
 800199c:	0c9b      	lsrs	r3, r3, #18
 800199e:	f003 030f 	and.w	r3, r3, #15
 80019a2:	3328      	adds	r3, #40	@ 0x28
 80019a4:	443b      	add	r3, r7
 80019a6:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80019aa:	617b      	str	r3, [r7, #20]
 80019ac:	69fb      	ldr	r3, [r7, #28]
 80019ae:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80019b2:	2b00      	cmp	r3, #0
 80019b4:	d012      	beq.n	80019dc <HAL_RCC_GetSysClockFreq+0x88>
 80019b6:	4b13      	ldr	r3, [pc, #76]	@ (8001a04 <HAL_RCC_GetSysClockFreq+0xb0>)
 80019b8:	685b      	ldr	r3, [r3, #4]
 80019ba:	0c5b      	lsrs	r3, r3, #17
 80019bc:	f003 0301 	and.w	r3, r3, #1
 80019c0:	3328      	adds	r3, #40	@ 0x28
 80019c2:	443b      	add	r3, r7
 80019c4:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80019c8:	61bb      	str	r3, [r7, #24]
 80019ca:	697b      	ldr	r3, [r7, #20]
 80019cc:	4a0e      	ldr	r2, [pc, #56]	@ (8001a08 <HAL_RCC_GetSysClockFreq+0xb4>)
 80019ce:	fb03 f202 	mul.w	r2, r3, r2
 80019d2:	69bb      	ldr	r3, [r7, #24]
 80019d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80019d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80019da:	e004      	b.n	80019e6 <HAL_RCC_GetSysClockFreq+0x92>
 80019dc:	697b      	ldr	r3, [r7, #20]
 80019de:	4a0b      	ldr	r2, [pc, #44]	@ (8001a0c <HAL_RCC_GetSysClockFreq+0xb8>)
 80019e0:	fb02 f303 	mul.w	r3, r2, r3
 80019e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80019e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80019e8:	623b      	str	r3, [r7, #32]
 80019ea:	e002      	b.n	80019f2 <HAL_RCC_GetSysClockFreq+0x9e>
 80019ec:	4b06      	ldr	r3, [pc, #24]	@ (8001a08 <HAL_RCC_GetSysClockFreq+0xb4>)
 80019ee:	623b      	str	r3, [r7, #32]
 80019f0:	bf00      	nop
 80019f2:	6a3b      	ldr	r3, [r7, #32]
 80019f4:	4618      	mov	r0, r3
 80019f6:	3728      	adds	r7, #40	@ 0x28
 80019f8:	46bd      	mov	sp, r7
 80019fa:	bc90      	pop	{r4, r7}
 80019fc:	4770      	bx	lr
 80019fe:	bf00      	nop
 8001a00:	08002c3c 	.word	0x08002c3c
 8001a04:	40021000 	.word	0x40021000
 8001a08:	007a1200 	.word	0x007a1200
 8001a0c:	003d0900 	.word	0x003d0900

08001a10 <HAL_RCC_GetHCLKFreq>:
 8001a10:	b480      	push	{r7}
 8001a12:	af00      	add	r7, sp, #0
 8001a14:	4b02      	ldr	r3, [pc, #8]	@ (8001a20 <HAL_RCC_GetHCLKFreq+0x10>)
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	4618      	mov	r0, r3
 8001a1a:	46bd      	mov	sp, r7
 8001a1c:	bc80      	pop	{r7}
 8001a1e:	4770      	bx	lr
 8001a20:	20000000 	.word	0x20000000

08001a24 <HAL_RCC_GetPCLK1Freq>:
 8001a24:	b580      	push	{r7, lr}
 8001a26:	af00      	add	r7, sp, #0
 8001a28:	f7ff fff2 	bl	8001a10 <HAL_RCC_GetHCLKFreq>
 8001a2c:	4602      	mov	r2, r0
 8001a2e:	4b05      	ldr	r3, [pc, #20]	@ (8001a44 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001a30:	685b      	ldr	r3, [r3, #4]
 8001a32:	0a1b      	lsrs	r3, r3, #8
 8001a34:	f003 0307 	and.w	r3, r3, #7
 8001a38:	4903      	ldr	r1, [pc, #12]	@ (8001a48 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001a3a:	5ccb      	ldrb	r3, [r1, r3]
 8001a3c:	fa22 f303 	lsr.w	r3, r2, r3
 8001a40:	4618      	mov	r0, r3
 8001a42:	bd80      	pop	{r7, pc}
 8001a44:	40021000 	.word	0x40021000
 8001a48:	08002c5c 	.word	0x08002c5c

08001a4c <HAL_RCC_GetPCLK2Freq>:
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	af00      	add	r7, sp, #0
 8001a50:	f7ff ffde 	bl	8001a10 <HAL_RCC_GetHCLKFreq>
 8001a54:	4602      	mov	r2, r0
 8001a56:	4b05      	ldr	r3, [pc, #20]	@ (8001a6c <HAL_RCC_GetPCLK2Freq+0x20>)
 8001a58:	685b      	ldr	r3, [r3, #4]
 8001a5a:	0adb      	lsrs	r3, r3, #11
 8001a5c:	f003 0307 	and.w	r3, r3, #7
 8001a60:	4903      	ldr	r1, [pc, #12]	@ (8001a70 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001a62:	5ccb      	ldrb	r3, [r1, r3]
 8001a64:	fa22 f303 	lsr.w	r3, r2, r3
 8001a68:	4618      	mov	r0, r3
 8001a6a:	bd80      	pop	{r7, pc}
 8001a6c:	40021000 	.word	0x40021000
 8001a70:	08002c5c 	.word	0x08002c5c

08001a74 <RCC_Delay>:
 8001a74:	b480      	push	{r7}
 8001a76:	b085      	sub	sp, #20
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	6078      	str	r0, [r7, #4]
 8001a7c:	4b0a      	ldr	r3, [pc, #40]	@ (8001aa8 <RCC_Delay+0x34>)
 8001a7e:	681b      	ldr	r3, [r3, #0]
 8001a80:	4a0a      	ldr	r2, [pc, #40]	@ (8001aac <RCC_Delay+0x38>)
 8001a82:	fba2 2303 	umull	r2, r3, r2, r3
 8001a86:	0a5b      	lsrs	r3, r3, #9
 8001a88:	687a      	ldr	r2, [r7, #4]
 8001a8a:	fb02 f303 	mul.w	r3, r2, r3
 8001a8e:	60fb      	str	r3, [r7, #12]
 8001a90:	bf00      	nop
 8001a92:	68fb      	ldr	r3, [r7, #12]
 8001a94:	1e5a      	subs	r2, r3, #1
 8001a96:	60fa      	str	r2, [r7, #12]
 8001a98:	2b00      	cmp	r3, #0
 8001a9a:	d1f9      	bne.n	8001a90 <RCC_Delay+0x1c>
 8001a9c:	bf00      	nop
 8001a9e:	bf00      	nop
 8001aa0:	3714      	adds	r7, #20
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	bc80      	pop	{r7}
 8001aa6:	4770      	bx	lr
 8001aa8:	20000000 	.word	0x20000000
 8001aac:	10624dd3 	.word	0x10624dd3

08001ab0 <HAL_UART_Init>:
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b082      	sub	sp, #8
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	6078      	str	r0, [r7, #4]
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	2b00      	cmp	r3, #0
 8001abc:	d101      	bne.n	8001ac2 <HAL_UART_Init+0x12>
 8001abe:	2301      	movs	r3, #1
 8001ac0:	e03f      	b.n	8001b42 <HAL_UART_Init+0x92>
 8001ac2:	687b      	ldr	r3, [r7, #4]
 8001ac4:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8001ac8:	b2db      	uxtb	r3, r3
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d106      	bne.n	8001adc <HAL_UART_Init+0x2c>
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001ad6:	6878      	ldr	r0, [r7, #4]
 8001ad8:	f7fe feea 	bl	80008b0 <HAL_UART_MspInit>
 8001adc:	687b      	ldr	r3, [r7, #4]
 8001ade:	2224      	movs	r2, #36	@ 0x24
 8001ae0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8001ae4:	687b      	ldr	r3, [r7, #4]
 8001ae6:	681b      	ldr	r3, [r3, #0]
 8001ae8:	68da      	ldr	r2, [r3, #12]
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001af2:	60da      	str	r2, [r3, #12]
 8001af4:	6878      	ldr	r0, [r7, #4]
 8001af6:	f000 faed 	bl	80020d4 <UART_SetConfig>
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	691a      	ldr	r2, [r3, #16]
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8001b08:	611a      	str	r2, [r3, #16]
 8001b0a:	687b      	ldr	r3, [r7, #4]
 8001b0c:	681b      	ldr	r3, [r3, #0]
 8001b0e:	695a      	ldr	r2, [r3, #20]
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	681b      	ldr	r3, [r3, #0]
 8001b14:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8001b18:	615a      	str	r2, [r3, #20]
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	68da      	ldr	r2, [r3, #12]
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	681b      	ldr	r3, [r3, #0]
 8001b24:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001b28:	60da      	str	r2, [r3, #12]
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	2220      	movs	r2, #32
 8001b34:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	2220      	movs	r2, #32
 8001b3c:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8001b40:	2300      	movs	r3, #0
 8001b42:	4618      	mov	r0, r3
 8001b44:	3708      	adds	r7, #8
 8001b46:	46bd      	mov	sp, r7
 8001b48:	bd80      	pop	{r7, pc}

08001b4a <HAL_UART_Transmit_IT>:
 8001b4a:	b480      	push	{r7}
 8001b4c:	b085      	sub	sp, #20
 8001b4e:	af00      	add	r7, sp, #0
 8001b50:	60f8      	str	r0, [r7, #12]
 8001b52:	60b9      	str	r1, [r7, #8]
 8001b54:	4613      	mov	r3, r2
 8001b56:	80fb      	strh	r3, [r7, #6]
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8001b5e:	b2db      	uxtb	r3, r3
 8001b60:	2b20      	cmp	r3, #32
 8001b62:	d130      	bne.n	8001bc6 <HAL_UART_Transmit_IT+0x7c>
 8001b64:	68bb      	ldr	r3, [r7, #8]
 8001b66:	2b00      	cmp	r3, #0
 8001b68:	d002      	beq.n	8001b70 <HAL_UART_Transmit_IT+0x26>
 8001b6a:	88fb      	ldrh	r3, [r7, #6]
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d101      	bne.n	8001b74 <HAL_UART_Transmit_IT+0x2a>
 8001b70:	2301      	movs	r3, #1
 8001b72:	e029      	b.n	8001bc8 <HAL_UART_Transmit_IT+0x7e>
 8001b74:	68fb      	ldr	r3, [r7, #12]
 8001b76:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8001b7a:	2b01      	cmp	r3, #1
 8001b7c:	d101      	bne.n	8001b82 <HAL_UART_Transmit_IT+0x38>
 8001b7e:	2302      	movs	r3, #2
 8001b80:	e022      	b.n	8001bc8 <HAL_UART_Transmit_IT+0x7e>
 8001b82:	68fb      	ldr	r3, [r7, #12]
 8001b84:	2201      	movs	r2, #1
 8001b86:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001b8a:	68fb      	ldr	r3, [r7, #12]
 8001b8c:	68ba      	ldr	r2, [r7, #8]
 8001b8e:	621a      	str	r2, [r3, #32]
 8001b90:	68fb      	ldr	r3, [r7, #12]
 8001b92:	88fa      	ldrh	r2, [r7, #6]
 8001b94:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001b96:	68fb      	ldr	r3, [r7, #12]
 8001b98:	88fa      	ldrh	r2, [r7, #6]
 8001b9a:	84da      	strh	r2, [r3, #38]	@ 0x26
 8001b9c:	68fb      	ldr	r3, [r7, #12]
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001ba2:	68fb      	ldr	r3, [r7, #12]
 8001ba4:	2221      	movs	r2, #33	@ 0x21
 8001ba6:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8001baa:	68fb      	ldr	r3, [r7, #12]
 8001bac:	2200      	movs	r2, #0
 8001bae:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001bb2:	68fb      	ldr	r3, [r7, #12]
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	68da      	ldr	r2, [r3, #12]
 8001bb8:	68fb      	ldr	r3, [r7, #12]
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001bc0:	60da      	str	r2, [r3, #12]
 8001bc2:	2300      	movs	r3, #0
 8001bc4:	e000      	b.n	8001bc8 <HAL_UART_Transmit_IT+0x7e>
 8001bc6:	2302      	movs	r3, #2
 8001bc8:	4618      	mov	r0, r3
 8001bca:	3714      	adds	r7, #20
 8001bcc:	46bd      	mov	sp, r7
 8001bce:	bc80      	pop	{r7}
 8001bd0:	4770      	bx	lr

08001bd2 <HAL_UART_Receive_IT>:
 8001bd2:	b480      	push	{r7}
 8001bd4:	b085      	sub	sp, #20
 8001bd6:	af00      	add	r7, sp, #0
 8001bd8:	60f8      	str	r0, [r7, #12]
 8001bda:	60b9      	str	r1, [r7, #8]
 8001bdc:	4613      	mov	r3, r2
 8001bde:	80fb      	strh	r3, [r7, #6]
 8001be0:	68fb      	ldr	r3, [r7, #12]
 8001be2:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8001be6:	b2db      	uxtb	r3, r3
 8001be8:	2b20      	cmp	r3, #32
 8001bea:	d140      	bne.n	8001c6e <HAL_UART_Receive_IT+0x9c>
 8001bec:	68bb      	ldr	r3, [r7, #8]
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d002      	beq.n	8001bf8 <HAL_UART_Receive_IT+0x26>
 8001bf2:	88fb      	ldrh	r3, [r7, #6]
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	d101      	bne.n	8001bfc <HAL_UART_Receive_IT+0x2a>
 8001bf8:	2301      	movs	r3, #1
 8001bfa:	e039      	b.n	8001c70 <HAL_UART_Receive_IT+0x9e>
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8001c02:	2b01      	cmp	r3, #1
 8001c04:	d101      	bne.n	8001c0a <HAL_UART_Receive_IT+0x38>
 8001c06:	2302      	movs	r3, #2
 8001c08:	e032      	b.n	8001c70 <HAL_UART_Receive_IT+0x9e>
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	2201      	movs	r2, #1
 8001c0e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	68ba      	ldr	r2, [r7, #8]
 8001c16:	629a      	str	r2, [r3, #40]	@ 0x28
 8001c18:	68fb      	ldr	r3, [r7, #12]
 8001c1a:	88fa      	ldrh	r2, [r7, #6]
 8001c1c:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8001c1e:	68fb      	ldr	r3, [r7, #12]
 8001c20:	88fa      	ldrh	r2, [r7, #6]
 8001c22:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8001c24:	68fb      	ldr	r3, [r7, #12]
 8001c26:	2200      	movs	r2, #0
 8001c28:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001c2a:	68fb      	ldr	r3, [r7, #12]
 8001c2c:	2222      	movs	r2, #34	@ 0x22
 8001c2e:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8001c32:	68fb      	ldr	r3, [r7, #12]
 8001c34:	2200      	movs	r2, #0
 8001c36:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8001c3a:	68fb      	ldr	r3, [r7, #12]
 8001c3c:	681b      	ldr	r3, [r3, #0]
 8001c3e:	68da      	ldr	r2, [r3, #12]
 8001c40:	68fb      	ldr	r3, [r7, #12]
 8001c42:	681b      	ldr	r3, [r3, #0]
 8001c44:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001c48:	60da      	str	r2, [r3, #12]
 8001c4a:	68fb      	ldr	r3, [r7, #12]
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	695a      	ldr	r2, [r3, #20]
 8001c50:	68fb      	ldr	r3, [r7, #12]
 8001c52:	681b      	ldr	r3, [r3, #0]
 8001c54:	f042 0201 	orr.w	r2, r2, #1
 8001c58:	615a      	str	r2, [r3, #20]
 8001c5a:	68fb      	ldr	r3, [r7, #12]
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	68da      	ldr	r2, [r3, #12]
 8001c60:	68fb      	ldr	r3, [r7, #12]
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	f042 0220 	orr.w	r2, r2, #32
 8001c68:	60da      	str	r2, [r3, #12]
 8001c6a:	2300      	movs	r3, #0
 8001c6c:	e000      	b.n	8001c70 <HAL_UART_Receive_IT+0x9e>
 8001c6e:	2302      	movs	r3, #2
 8001c70:	4618      	mov	r0, r3
 8001c72:	3714      	adds	r7, #20
 8001c74:	46bd      	mov	sp, r7
 8001c76:	bc80      	pop	{r7}
 8001c78:	4770      	bx	lr
	...

08001c7c <HAL_UART_IRQHandler>:
 8001c7c:	b580      	push	{r7, lr}
 8001c7e:	b088      	sub	sp, #32
 8001c80:	af00      	add	r7, sp, #0
 8001c82:	6078      	str	r0, [r7, #4]
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	61fb      	str	r3, [r7, #28]
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	68db      	ldr	r3, [r3, #12]
 8001c92:	61bb      	str	r3, [r7, #24]
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	681b      	ldr	r3, [r3, #0]
 8001c98:	695b      	ldr	r3, [r3, #20]
 8001c9a:	617b      	str	r3, [r7, #20]
 8001c9c:	2300      	movs	r3, #0
 8001c9e:	613b      	str	r3, [r7, #16]
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	60fb      	str	r3, [r7, #12]
 8001ca4:	69fb      	ldr	r3, [r7, #28]
 8001ca6:	f003 030f 	and.w	r3, r3, #15
 8001caa:	613b      	str	r3, [r7, #16]
 8001cac:	693b      	ldr	r3, [r7, #16]
 8001cae:	2b00      	cmp	r3, #0
 8001cb0:	d10d      	bne.n	8001cce <HAL_UART_IRQHandler+0x52>
 8001cb2:	69fb      	ldr	r3, [r7, #28]
 8001cb4:	f003 0320 	and.w	r3, r3, #32
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d008      	beq.n	8001cce <HAL_UART_IRQHandler+0x52>
 8001cbc:	69bb      	ldr	r3, [r7, #24]
 8001cbe:	f003 0320 	and.w	r3, r3, #32
 8001cc2:	2b00      	cmp	r3, #0
 8001cc4:	d003      	beq.n	8001cce <HAL_UART_IRQHandler+0x52>
 8001cc6:	6878      	ldr	r0, [r7, #4]
 8001cc8:	f000 f982 	bl	8001fd0 <UART_Receive_IT>
 8001ccc:	e0cb      	b.n	8001e66 <HAL_UART_IRQHandler+0x1ea>
 8001cce:	693b      	ldr	r3, [r7, #16]
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	f000 80ab 	beq.w	8001e2c <HAL_UART_IRQHandler+0x1b0>
 8001cd6:	697b      	ldr	r3, [r7, #20]
 8001cd8:	f003 0301 	and.w	r3, r3, #1
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d105      	bne.n	8001cec <HAL_UART_IRQHandler+0x70>
 8001ce0:	69bb      	ldr	r3, [r7, #24]
 8001ce2:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	f000 80a0 	beq.w	8001e2c <HAL_UART_IRQHandler+0x1b0>
 8001cec:	69fb      	ldr	r3, [r7, #28]
 8001cee:	f003 0301 	and.w	r3, r3, #1
 8001cf2:	2b00      	cmp	r3, #0
 8001cf4:	d00a      	beq.n	8001d0c <HAL_UART_IRQHandler+0x90>
 8001cf6:	69bb      	ldr	r3, [r7, #24]
 8001cf8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001cfc:	2b00      	cmp	r3, #0
 8001cfe:	d005      	beq.n	8001d0c <HAL_UART_IRQHandler+0x90>
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d04:	f043 0201 	orr.w	r2, r3, #1
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d0c:	69fb      	ldr	r3, [r7, #28]
 8001d0e:	f003 0304 	and.w	r3, r3, #4
 8001d12:	2b00      	cmp	r3, #0
 8001d14:	d00a      	beq.n	8001d2c <HAL_UART_IRQHandler+0xb0>
 8001d16:	697b      	ldr	r3, [r7, #20]
 8001d18:	f003 0301 	and.w	r3, r3, #1
 8001d1c:	2b00      	cmp	r3, #0
 8001d1e:	d005      	beq.n	8001d2c <HAL_UART_IRQHandler+0xb0>
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d24:	f043 0202 	orr.w	r2, r3, #2
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d2c:	69fb      	ldr	r3, [r7, #28]
 8001d2e:	f003 0302 	and.w	r3, r3, #2
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d00a      	beq.n	8001d4c <HAL_UART_IRQHandler+0xd0>
 8001d36:	697b      	ldr	r3, [r7, #20]
 8001d38:	f003 0301 	and.w	r3, r3, #1
 8001d3c:	2b00      	cmp	r3, #0
 8001d3e:	d005      	beq.n	8001d4c <HAL_UART_IRQHandler+0xd0>
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d44:	f043 0204 	orr.w	r2, r3, #4
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d4c:	69fb      	ldr	r3, [r7, #28]
 8001d4e:	f003 0308 	and.w	r3, r3, #8
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d00a      	beq.n	8001d6c <HAL_UART_IRQHandler+0xf0>
 8001d56:	697b      	ldr	r3, [r7, #20]
 8001d58:	f003 0301 	and.w	r3, r3, #1
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d005      	beq.n	8001d6c <HAL_UART_IRQHandler+0xf0>
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d64:	f043 0208 	orr.w	r2, r3, #8
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001d70:	2b00      	cmp	r3, #0
 8001d72:	d077      	beq.n	8001e64 <HAL_UART_IRQHandler+0x1e8>
 8001d74:	69fb      	ldr	r3, [r7, #28]
 8001d76:	f003 0320 	and.w	r3, r3, #32
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d007      	beq.n	8001d8e <HAL_UART_IRQHandler+0x112>
 8001d7e:	69bb      	ldr	r3, [r7, #24]
 8001d80:	f003 0320 	and.w	r3, r3, #32
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d002      	beq.n	8001d8e <HAL_UART_IRQHandler+0x112>
 8001d88:	6878      	ldr	r0, [r7, #4]
 8001d8a:	f000 f921 	bl	8001fd0 <UART_Receive_IT>
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	695b      	ldr	r3, [r3, #20]
 8001d94:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	bf14      	ite	ne
 8001d9c:	2301      	movne	r3, #1
 8001d9e:	2300      	moveq	r3, #0
 8001da0:	b2db      	uxtb	r3, r3
 8001da2:	60fb      	str	r3, [r7, #12]
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001da8:	f003 0308 	and.w	r3, r3, #8
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d102      	bne.n	8001db6 <HAL_UART_IRQHandler+0x13a>
 8001db0:	68fb      	ldr	r3, [r7, #12]
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d031      	beq.n	8001e1a <HAL_UART_IRQHandler+0x19e>
 8001db6:	6878      	ldr	r0, [r7, #4]
 8001db8:	f000 f86c 	bl	8001e94 <UART_EndRxTransfer>
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	681b      	ldr	r3, [r3, #0]
 8001dc0:	695b      	ldr	r3, [r3, #20]
 8001dc2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	d023      	beq.n	8001e12 <HAL_UART_IRQHandler+0x196>
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	695a      	ldr	r2, [r3, #20]
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	681b      	ldr	r3, [r3, #0]
 8001dd4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001dd8:	615a      	str	r2, [r3, #20]
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001dde:	2b00      	cmp	r3, #0
 8001de0:	d013      	beq.n	8001e0a <HAL_UART_IRQHandler+0x18e>
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001de6:	4a21      	ldr	r2, [pc, #132]	@ (8001e6c <HAL_UART_IRQHandler+0x1f0>)
 8001de8:	635a      	str	r2, [r3, #52]	@ 0x34
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001dee:	4618      	mov	r0, r3
 8001df0:	f7ff f832 	bl	8000e58 <HAL_DMA_Abort_IT>
 8001df4:	4603      	mov	r3, r0
 8001df6:	2b00      	cmp	r3, #0
 8001df8:	d016      	beq.n	8001e28 <HAL_UART_IRQHandler+0x1ac>
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001dfe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001e00:	687a      	ldr	r2, [r7, #4]
 8001e02:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8001e04:	4610      	mov	r0, r2
 8001e06:	4798      	blx	r3
 8001e08:	e00e      	b.n	8001e28 <HAL_UART_IRQHandler+0x1ac>
 8001e0a:	6878      	ldr	r0, [r7, #4]
 8001e0c:	f000 f839 	bl	8001e82 <HAL_UART_ErrorCallback>
 8001e10:	e00a      	b.n	8001e28 <HAL_UART_IRQHandler+0x1ac>
 8001e12:	6878      	ldr	r0, [r7, #4]
 8001e14:	f000 f835 	bl	8001e82 <HAL_UART_ErrorCallback>
 8001e18:	e006      	b.n	8001e28 <HAL_UART_IRQHandler+0x1ac>
 8001e1a:	6878      	ldr	r0, [r7, #4]
 8001e1c:	f000 f831 	bl	8001e82 <HAL_UART_ErrorCallback>
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	2200      	movs	r2, #0
 8001e24:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001e26:	e01d      	b.n	8001e64 <HAL_UART_IRQHandler+0x1e8>
 8001e28:	bf00      	nop
 8001e2a:	e01b      	b.n	8001e64 <HAL_UART_IRQHandler+0x1e8>
 8001e2c:	69fb      	ldr	r3, [r7, #28]
 8001e2e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001e32:	2b00      	cmp	r3, #0
 8001e34:	d008      	beq.n	8001e48 <HAL_UART_IRQHandler+0x1cc>
 8001e36:	69bb      	ldr	r3, [r7, #24]
 8001e38:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d003      	beq.n	8001e48 <HAL_UART_IRQHandler+0x1cc>
 8001e40:	6878      	ldr	r0, [r7, #4]
 8001e42:	f000 f858 	bl	8001ef6 <UART_Transmit_IT>
 8001e46:	e00e      	b.n	8001e66 <HAL_UART_IRQHandler+0x1ea>
 8001e48:	69fb      	ldr	r3, [r7, #28]
 8001e4a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001e4e:	2b00      	cmp	r3, #0
 8001e50:	d009      	beq.n	8001e66 <HAL_UART_IRQHandler+0x1ea>
 8001e52:	69bb      	ldr	r3, [r7, #24]
 8001e54:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d004      	beq.n	8001e66 <HAL_UART_IRQHandler+0x1ea>
 8001e5c:	6878      	ldr	r0, [r7, #4]
 8001e5e:	f000 f89f 	bl	8001fa0 <UART_EndTransmit_IT>
 8001e62:	e000      	b.n	8001e66 <HAL_UART_IRQHandler+0x1ea>
 8001e64:	bf00      	nop
 8001e66:	3720      	adds	r7, #32
 8001e68:	46bd      	mov	sp, r7
 8001e6a:	bd80      	pop	{r7, pc}
 8001e6c:	08001ecf 	.word	0x08001ecf

08001e70 <HAL_UART_TxCpltCallback>:
 8001e70:	b480      	push	{r7}
 8001e72:	b083      	sub	sp, #12
 8001e74:	af00      	add	r7, sp, #0
 8001e76:	6078      	str	r0, [r7, #4]
 8001e78:	bf00      	nop
 8001e7a:	370c      	adds	r7, #12
 8001e7c:	46bd      	mov	sp, r7
 8001e7e:	bc80      	pop	{r7}
 8001e80:	4770      	bx	lr

08001e82 <HAL_UART_ErrorCallback>:
 8001e82:	b480      	push	{r7}
 8001e84:	b083      	sub	sp, #12
 8001e86:	af00      	add	r7, sp, #0
 8001e88:	6078      	str	r0, [r7, #4]
 8001e8a:	bf00      	nop
 8001e8c:	370c      	adds	r7, #12
 8001e8e:	46bd      	mov	sp, r7
 8001e90:	bc80      	pop	{r7}
 8001e92:	4770      	bx	lr

08001e94 <UART_EndRxTransfer>:
 8001e94:	b480      	push	{r7}
 8001e96:	b083      	sub	sp, #12
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	6078      	str	r0, [r7, #4]
 8001e9c:	687b      	ldr	r3, [r7, #4]
 8001e9e:	681b      	ldr	r3, [r3, #0]
 8001ea0:	68da      	ldr	r2, [r3, #12]
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
 8001eaa:	60da      	str	r2, [r3, #12]
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	695a      	ldr	r2, [r3, #20]
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	f022 0201 	bic.w	r2, r2, #1
 8001eba:	615a      	str	r2, [r3, #20]
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	2220      	movs	r2, #32
 8001ec0:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 8001ec4:	bf00      	nop
 8001ec6:	370c      	adds	r7, #12
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	bc80      	pop	{r7}
 8001ecc:	4770      	bx	lr

08001ece <UART_DMAAbortOnError>:
 8001ece:	b580      	push	{r7, lr}
 8001ed0:	b084      	sub	sp, #16
 8001ed2:	af00      	add	r7, sp, #0
 8001ed4:	6078      	str	r0, [r7, #4]
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001eda:	60fb      	str	r3, [r7, #12]
 8001edc:	68fb      	ldr	r3, [r7, #12]
 8001ede:	2200      	movs	r2, #0
 8001ee0:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8001ee2:	68fb      	ldr	r3, [r7, #12]
 8001ee4:	2200      	movs	r2, #0
 8001ee6:	84da      	strh	r2, [r3, #38]	@ 0x26
 8001ee8:	68f8      	ldr	r0, [r7, #12]
 8001eea:	f7ff ffca 	bl	8001e82 <HAL_UART_ErrorCallback>
 8001eee:	bf00      	nop
 8001ef0:	3710      	adds	r7, #16
 8001ef2:	46bd      	mov	sp, r7
 8001ef4:	bd80      	pop	{r7, pc}

08001ef6 <UART_Transmit_IT>:
 8001ef6:	b480      	push	{r7}
 8001ef8:	b085      	sub	sp, #20
 8001efa:	af00      	add	r7, sp, #0
 8001efc:	6078      	str	r0, [r7, #4]
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8001f04:	b2db      	uxtb	r3, r3
 8001f06:	2b21      	cmp	r3, #33	@ 0x21
 8001f08:	d144      	bne.n	8001f94 <UART_Transmit_IT+0x9e>
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	689b      	ldr	r3, [r3, #8]
 8001f0e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001f12:	d11a      	bne.n	8001f4a <UART_Transmit_IT+0x54>
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	6a1b      	ldr	r3, [r3, #32]
 8001f18:	60fb      	str	r3, [r7, #12]
 8001f1a:	68fb      	ldr	r3, [r7, #12]
 8001f1c:	881b      	ldrh	r3, [r3, #0]
 8001f1e:	461a      	mov	r2, r3
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001f28:	605a      	str	r2, [r3, #4]
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	691b      	ldr	r3, [r3, #16]
 8001f2e:	2b00      	cmp	r3, #0
 8001f30:	d105      	bne.n	8001f3e <UART_Transmit_IT+0x48>
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	6a1b      	ldr	r3, [r3, #32]
 8001f36:	1c9a      	adds	r2, r3, #2
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	621a      	str	r2, [r3, #32]
 8001f3c:	e00e      	b.n	8001f5c <UART_Transmit_IT+0x66>
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	6a1b      	ldr	r3, [r3, #32]
 8001f42:	1c5a      	adds	r2, r3, #1
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	621a      	str	r2, [r3, #32]
 8001f48:	e008      	b.n	8001f5c <UART_Transmit_IT+0x66>
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	6a1b      	ldr	r3, [r3, #32]
 8001f4e:	1c59      	adds	r1, r3, #1
 8001f50:	687a      	ldr	r2, [r7, #4]
 8001f52:	6211      	str	r1, [r2, #32]
 8001f54:	781a      	ldrb	r2, [r3, #0]
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	605a      	str	r2, [r3, #4]
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8001f60:	b29b      	uxth	r3, r3
 8001f62:	3b01      	subs	r3, #1
 8001f64:	b29b      	uxth	r3, r3
 8001f66:	687a      	ldr	r2, [r7, #4]
 8001f68:	4619      	mov	r1, r3
 8001f6a:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	d10f      	bne.n	8001f90 <UART_Transmit_IT+0x9a>
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	68da      	ldr	r2, [r3, #12]
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8001f7e:	60da      	str	r2, [r3, #12]
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	68da      	ldr	r2, [r3, #12]
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001f8e:	60da      	str	r2, [r3, #12]
 8001f90:	2300      	movs	r3, #0
 8001f92:	e000      	b.n	8001f96 <UART_Transmit_IT+0xa0>
 8001f94:	2302      	movs	r3, #2
 8001f96:	4618      	mov	r0, r3
 8001f98:	3714      	adds	r7, #20
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	bc80      	pop	{r7}
 8001f9e:	4770      	bx	lr

08001fa0 <UART_EndTransmit_IT>:
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	b082      	sub	sp, #8
 8001fa4:	af00      	add	r7, sp, #0
 8001fa6:	6078      	str	r0, [r7, #4]
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	68da      	ldr	r2, [r3, #12]
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001fb6:	60da      	str	r2, [r3, #12]
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	2220      	movs	r2, #32
 8001fbc:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8001fc0:	6878      	ldr	r0, [r7, #4]
 8001fc2:	f7ff ff55 	bl	8001e70 <HAL_UART_TxCpltCallback>
 8001fc6:	2300      	movs	r3, #0
 8001fc8:	4618      	mov	r0, r3
 8001fca:	3708      	adds	r7, #8
 8001fcc:	46bd      	mov	sp, r7
 8001fce:	bd80      	pop	{r7, pc}

08001fd0 <UART_Receive_IT>:
 8001fd0:	b580      	push	{r7, lr}
 8001fd2:	b084      	sub	sp, #16
 8001fd4:	af00      	add	r7, sp, #0
 8001fd6:	6078      	str	r0, [r7, #4]
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	f893 303a 	ldrb.w	r3, [r3, #58]	@ 0x3a
 8001fde:	b2db      	uxtb	r3, r3
 8001fe0:	2b22      	cmp	r3, #34	@ 0x22
 8001fe2:	d171      	bne.n	80020c8 <UART_Receive_IT+0xf8>
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	689b      	ldr	r3, [r3, #8]
 8001fe8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001fec:	d123      	bne.n	8002036 <UART_Receive_IT+0x66>
 8001fee:	687b      	ldr	r3, [r7, #4]
 8001ff0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001ff2:	60fb      	str	r3, [r7, #12]
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	691b      	ldr	r3, [r3, #16]
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d10e      	bne.n	800201a <UART_Receive_IT+0x4a>
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	685b      	ldr	r3, [r3, #4]
 8002002:	b29b      	uxth	r3, r3
 8002004:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002008:	b29a      	uxth	r2, r3
 800200a:	68fb      	ldr	r3, [r7, #12]
 800200c:	801a      	strh	r2, [r3, #0]
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002012:	1c9a      	adds	r2, r3, #2
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	629a      	str	r2, [r3, #40]	@ 0x28
 8002018:	e029      	b.n	800206e <UART_Receive_IT+0x9e>
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	685b      	ldr	r3, [r3, #4]
 8002020:	b29b      	uxth	r3, r3
 8002022:	b2db      	uxtb	r3, r3
 8002024:	b29a      	uxth	r2, r3
 8002026:	68fb      	ldr	r3, [r7, #12]
 8002028:	801a      	strh	r2, [r3, #0]
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800202e:	1c5a      	adds	r2, r3, #1
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	629a      	str	r2, [r3, #40]	@ 0x28
 8002034:	e01b      	b.n	800206e <UART_Receive_IT+0x9e>
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	691b      	ldr	r3, [r3, #16]
 800203a:	2b00      	cmp	r3, #0
 800203c:	d10a      	bne.n	8002054 <UART_Receive_IT+0x84>
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	6858      	ldr	r0, [r3, #4]
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002048:	1c59      	adds	r1, r3, #1
 800204a:	687a      	ldr	r2, [r7, #4]
 800204c:	6291      	str	r1, [r2, #40]	@ 0x28
 800204e:	b2c2      	uxtb	r2, r0
 8002050:	701a      	strb	r2, [r3, #0]
 8002052:	e00c      	b.n	800206e <UART_Receive_IT+0x9e>
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	685b      	ldr	r3, [r3, #4]
 800205a:	b2da      	uxtb	r2, r3
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002060:	1c58      	adds	r0, r3, #1
 8002062:	6879      	ldr	r1, [r7, #4]
 8002064:	6288      	str	r0, [r1, #40]	@ 0x28
 8002066:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800206a:	b2d2      	uxtb	r2, r2
 800206c:	701a      	strb	r2, [r3, #0]
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8002072:	b29b      	uxth	r3, r3
 8002074:	3b01      	subs	r3, #1
 8002076:	b29b      	uxth	r3, r3
 8002078:	687a      	ldr	r2, [r7, #4]
 800207a:	4619      	mov	r1, r3
 800207c:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800207e:	2b00      	cmp	r3, #0
 8002080:	d120      	bne.n	80020c4 <UART_Receive_IT+0xf4>
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	681b      	ldr	r3, [r3, #0]
 8002086:	68da      	ldr	r2, [r3, #12]
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	f022 0220 	bic.w	r2, r2, #32
 8002090:	60da      	str	r2, [r3, #12]
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	68da      	ldr	r2, [r3, #12]
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80020a0:	60da      	str	r2, [r3, #12]
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	695a      	ldr	r2, [r3, #20]
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	f022 0201 	bic.w	r2, r2, #1
 80020b0:	615a      	str	r2, [r3, #20]
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	2220      	movs	r2, #32
 80020b6:	f883 203a 	strb.w	r2, [r3, #58]	@ 0x3a
 80020ba:	6878      	ldr	r0, [r7, #4]
 80020bc:	f7fe fa04 	bl	80004c8 <HAL_UART_RxCpltCallback>
 80020c0:	2300      	movs	r3, #0
 80020c2:	e002      	b.n	80020ca <UART_Receive_IT+0xfa>
 80020c4:	2300      	movs	r3, #0
 80020c6:	e000      	b.n	80020ca <UART_Receive_IT+0xfa>
 80020c8:	2302      	movs	r3, #2
 80020ca:	4618      	mov	r0, r3
 80020cc:	3710      	adds	r7, #16
 80020ce:	46bd      	mov	sp, r7
 80020d0:	bd80      	pop	{r7, pc}
	...

080020d4 <UART_SetConfig>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b084      	sub	sp, #16
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	691b      	ldr	r3, [r3, #16]
 80020e2:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	68da      	ldr	r2, [r3, #12]
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	430a      	orrs	r2, r1
 80020f0:	611a      	str	r2, [r3, #16]
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	689a      	ldr	r2, [r3, #8]
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	691b      	ldr	r3, [r3, #16]
 80020fa:	431a      	orrs	r2, r3
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	695b      	ldr	r3, [r3, #20]
 8002100:	4313      	orrs	r3, r2
 8002102:	60fb      	str	r3, [r7, #12]
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	68db      	ldr	r3, [r3, #12]
 800210a:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 800210e:	f023 030c 	bic.w	r3, r3, #12
 8002112:	687a      	ldr	r2, [r7, #4]
 8002114:	6812      	ldr	r2, [r2, #0]
 8002116:	68f9      	ldr	r1, [r7, #12]
 8002118:	430b      	orrs	r3, r1
 800211a:	60d3      	str	r3, [r2, #12]
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	695b      	ldr	r3, [r3, #20]
 8002122:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	699a      	ldr	r2, [r3, #24]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	430a      	orrs	r2, r1
 8002130:	615a      	str	r2, [r3, #20]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	4a52      	ldr	r2, [pc, #328]	@ (8002280 <UART_SetConfig+0x1ac>)
 8002138:	4293      	cmp	r3, r2
 800213a:	d14e      	bne.n	80021da <UART_SetConfig+0x106>
 800213c:	f7ff fc86 	bl	8001a4c <HAL_RCC_GetPCLK2Freq>
 8002140:	60b8      	str	r0, [r7, #8]
 8002142:	68ba      	ldr	r2, [r7, #8]
 8002144:	4613      	mov	r3, r2
 8002146:	009b      	lsls	r3, r3, #2
 8002148:	4413      	add	r3, r2
 800214a:	009a      	lsls	r2, r3, #2
 800214c:	441a      	add	r2, r3
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	685b      	ldr	r3, [r3, #4]
 8002152:	009b      	lsls	r3, r3, #2
 8002154:	fbb2 f3f3 	udiv	r3, r2, r3
 8002158:	4a4a      	ldr	r2, [pc, #296]	@ (8002284 <UART_SetConfig+0x1b0>)
 800215a:	fba2 2303 	umull	r2, r3, r2, r3
 800215e:	095b      	lsrs	r3, r3, #5
 8002160:	0119      	lsls	r1, r3, #4
 8002162:	68ba      	ldr	r2, [r7, #8]
 8002164:	4613      	mov	r3, r2
 8002166:	009b      	lsls	r3, r3, #2
 8002168:	4413      	add	r3, r2
 800216a:	009a      	lsls	r2, r3, #2
 800216c:	441a      	add	r2, r3
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	685b      	ldr	r3, [r3, #4]
 8002172:	009b      	lsls	r3, r3, #2
 8002174:	fbb2 f2f3 	udiv	r2, r2, r3
 8002178:	4b42      	ldr	r3, [pc, #264]	@ (8002284 <UART_SetConfig+0x1b0>)
 800217a:	fba3 0302 	umull	r0, r3, r3, r2
 800217e:	095b      	lsrs	r3, r3, #5
 8002180:	2064      	movs	r0, #100	@ 0x64
 8002182:	fb00 f303 	mul.w	r3, r0, r3
 8002186:	1ad3      	subs	r3, r2, r3
 8002188:	011b      	lsls	r3, r3, #4
 800218a:	3332      	adds	r3, #50	@ 0x32
 800218c:	4a3d      	ldr	r2, [pc, #244]	@ (8002284 <UART_SetConfig+0x1b0>)
 800218e:	fba2 2303 	umull	r2, r3, r2, r3
 8002192:	095b      	lsrs	r3, r3, #5
 8002194:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002198:	4419      	add	r1, r3
 800219a:	68ba      	ldr	r2, [r7, #8]
 800219c:	4613      	mov	r3, r2
 800219e:	009b      	lsls	r3, r3, #2
 80021a0:	4413      	add	r3, r2
 80021a2:	009a      	lsls	r2, r3, #2
 80021a4:	441a      	add	r2, r3
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	685b      	ldr	r3, [r3, #4]
 80021aa:	009b      	lsls	r3, r3, #2
 80021ac:	fbb2 f2f3 	udiv	r2, r2, r3
 80021b0:	4b34      	ldr	r3, [pc, #208]	@ (8002284 <UART_SetConfig+0x1b0>)
 80021b2:	fba3 0302 	umull	r0, r3, r3, r2
 80021b6:	095b      	lsrs	r3, r3, #5
 80021b8:	2064      	movs	r0, #100	@ 0x64
 80021ba:	fb00 f303 	mul.w	r3, r0, r3
 80021be:	1ad3      	subs	r3, r2, r3
 80021c0:	011b      	lsls	r3, r3, #4
 80021c2:	3332      	adds	r3, #50	@ 0x32
 80021c4:	4a2f      	ldr	r2, [pc, #188]	@ (8002284 <UART_SetConfig+0x1b0>)
 80021c6:	fba2 2303 	umull	r2, r3, r2, r3
 80021ca:	095b      	lsrs	r3, r3, #5
 80021cc:	f003 020f 	and.w	r2, r3, #15
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	440a      	add	r2, r1
 80021d6:	609a      	str	r2, [r3, #8]
 80021d8:	e04d      	b.n	8002276 <UART_SetConfig+0x1a2>
 80021da:	f7ff fc23 	bl	8001a24 <HAL_RCC_GetPCLK1Freq>
 80021de:	60b8      	str	r0, [r7, #8]
 80021e0:	68ba      	ldr	r2, [r7, #8]
 80021e2:	4613      	mov	r3, r2
 80021e4:	009b      	lsls	r3, r3, #2
 80021e6:	4413      	add	r3, r2
 80021e8:	009a      	lsls	r2, r3, #2
 80021ea:	441a      	add	r2, r3
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	685b      	ldr	r3, [r3, #4]
 80021f0:	009b      	lsls	r3, r3, #2
 80021f2:	fbb2 f3f3 	udiv	r3, r2, r3
 80021f6:	4a23      	ldr	r2, [pc, #140]	@ (8002284 <UART_SetConfig+0x1b0>)
 80021f8:	fba2 2303 	umull	r2, r3, r2, r3
 80021fc:	095b      	lsrs	r3, r3, #5
 80021fe:	0119      	lsls	r1, r3, #4
 8002200:	68ba      	ldr	r2, [r7, #8]
 8002202:	4613      	mov	r3, r2
 8002204:	009b      	lsls	r3, r3, #2
 8002206:	4413      	add	r3, r2
 8002208:	009a      	lsls	r2, r3, #2
 800220a:	441a      	add	r2, r3
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	685b      	ldr	r3, [r3, #4]
 8002210:	009b      	lsls	r3, r3, #2
 8002212:	fbb2 f2f3 	udiv	r2, r2, r3
 8002216:	4b1b      	ldr	r3, [pc, #108]	@ (8002284 <UART_SetConfig+0x1b0>)
 8002218:	fba3 0302 	umull	r0, r3, r3, r2
 800221c:	095b      	lsrs	r3, r3, #5
 800221e:	2064      	movs	r0, #100	@ 0x64
 8002220:	fb00 f303 	mul.w	r3, r0, r3
 8002224:	1ad3      	subs	r3, r2, r3
 8002226:	011b      	lsls	r3, r3, #4
 8002228:	3332      	adds	r3, #50	@ 0x32
 800222a:	4a16      	ldr	r2, [pc, #88]	@ (8002284 <UART_SetConfig+0x1b0>)
 800222c:	fba2 2303 	umull	r2, r3, r2, r3
 8002230:	095b      	lsrs	r3, r3, #5
 8002232:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002236:	4419      	add	r1, r3
 8002238:	68ba      	ldr	r2, [r7, #8]
 800223a:	4613      	mov	r3, r2
 800223c:	009b      	lsls	r3, r3, #2
 800223e:	4413      	add	r3, r2
 8002240:	009a      	lsls	r2, r3, #2
 8002242:	441a      	add	r2, r3
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	685b      	ldr	r3, [r3, #4]
 8002248:	009b      	lsls	r3, r3, #2
 800224a:	fbb2 f2f3 	udiv	r2, r2, r3
 800224e:	4b0d      	ldr	r3, [pc, #52]	@ (8002284 <UART_SetConfig+0x1b0>)
 8002250:	fba3 0302 	umull	r0, r3, r3, r2
 8002254:	095b      	lsrs	r3, r3, #5
 8002256:	2064      	movs	r0, #100	@ 0x64
 8002258:	fb00 f303 	mul.w	r3, r0, r3
 800225c:	1ad3      	subs	r3, r2, r3
 800225e:	011b      	lsls	r3, r3, #4
 8002260:	3332      	adds	r3, #50	@ 0x32
 8002262:	4a08      	ldr	r2, [pc, #32]	@ (8002284 <UART_SetConfig+0x1b0>)
 8002264:	fba2 2303 	umull	r2, r3, r2, r3
 8002268:	095b      	lsrs	r3, r3, #5
 800226a:	f003 020f 	and.w	r2, r3, #15
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	440a      	add	r2, r1
 8002274:	609a      	str	r2, [r3, #8]
 8002276:	bf00      	nop
 8002278:	3710      	adds	r7, #16
 800227a:	46bd      	mov	sp, r7
 800227c:	bd80      	pop	{r7, pc}
 800227e:	bf00      	nop
 8002280:	40013800 	.word	0x40013800
 8002284:	51eb851f 	.word	0x51eb851f

08002288 <sniprintf>:
 8002288:	b40c      	push	{r2, r3}
 800228a:	b530      	push	{r4, r5, lr}
 800228c:	4b17      	ldr	r3, [pc, #92]	@ (80022ec <sniprintf+0x64>)
 800228e:	1e0c      	subs	r4, r1, #0
 8002290:	681d      	ldr	r5, [r3, #0]
 8002292:	b09d      	sub	sp, #116	@ 0x74
 8002294:	da08      	bge.n	80022a8 <sniprintf+0x20>
 8002296:	238b      	movs	r3, #139	@ 0x8b
 8002298:	f04f 30ff 	mov.w	r0, #4294967295
 800229c:	602b      	str	r3, [r5, #0]
 800229e:	b01d      	add	sp, #116	@ 0x74
 80022a0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80022a4:	b002      	add	sp, #8
 80022a6:	4770      	bx	lr
 80022a8:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80022ac:	f8ad 3014 	strh.w	r3, [sp, #20]
 80022b0:	bf0c      	ite	eq
 80022b2:	4623      	moveq	r3, r4
 80022b4:	f104 33ff 	addne.w	r3, r4, #4294967295
 80022b8:	9304      	str	r3, [sp, #16]
 80022ba:	9307      	str	r3, [sp, #28]
 80022bc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80022c0:	9002      	str	r0, [sp, #8]
 80022c2:	9006      	str	r0, [sp, #24]
 80022c4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80022c8:	4628      	mov	r0, r5
 80022ca:	ab21      	add	r3, sp, #132	@ 0x84
 80022cc:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80022ce:	a902      	add	r1, sp, #8
 80022d0:	9301      	str	r3, [sp, #4]
 80022d2:	f000 f993 	bl	80025fc <_svfiprintf_r>
 80022d6:	1c43      	adds	r3, r0, #1
 80022d8:	bfbc      	itt	lt
 80022da:	238b      	movlt	r3, #139	@ 0x8b
 80022dc:	602b      	strlt	r3, [r5, #0]
 80022de:	2c00      	cmp	r4, #0
 80022e0:	d0dd      	beq.n	800229e <sniprintf+0x16>
 80022e2:	2200      	movs	r2, #0
 80022e4:	9b02      	ldr	r3, [sp, #8]
 80022e6:	701a      	strb	r2, [r3, #0]
 80022e8:	e7d9      	b.n	800229e <sniprintf+0x16>
 80022ea:	bf00      	nop
 80022ec:	2000000c 	.word	0x2000000c

080022f0 <memset>:
 80022f0:	4603      	mov	r3, r0
 80022f2:	4402      	add	r2, r0
 80022f4:	4293      	cmp	r3, r2
 80022f6:	d100      	bne.n	80022fa <memset+0xa>
 80022f8:	4770      	bx	lr
 80022fa:	f803 1b01 	strb.w	r1, [r3], #1
 80022fe:	e7f9      	b.n	80022f4 <memset+0x4>

08002300 <__errno>:
 8002300:	4b01      	ldr	r3, [pc, #4]	@ (8002308 <__errno+0x8>)
 8002302:	6818      	ldr	r0, [r3, #0]
 8002304:	4770      	bx	lr
 8002306:	bf00      	nop
 8002308:	2000000c 	.word	0x2000000c

0800230c <__libc_init_array>:
 800230c:	b570      	push	{r4, r5, r6, lr}
 800230e:	2600      	movs	r6, #0
 8002310:	4d0c      	ldr	r5, [pc, #48]	@ (8002344 <__libc_init_array+0x38>)
 8002312:	4c0d      	ldr	r4, [pc, #52]	@ (8002348 <__libc_init_array+0x3c>)
 8002314:	1b64      	subs	r4, r4, r5
 8002316:	10a4      	asrs	r4, r4, #2
 8002318:	42a6      	cmp	r6, r4
 800231a:	d109      	bne.n	8002330 <__libc_init_array+0x24>
 800231c:	f000 fc78 	bl	8002c10 <_init>
 8002320:	2600      	movs	r6, #0
 8002322:	4d0a      	ldr	r5, [pc, #40]	@ (800234c <__libc_init_array+0x40>)
 8002324:	4c0a      	ldr	r4, [pc, #40]	@ (8002350 <__libc_init_array+0x44>)
 8002326:	1b64      	subs	r4, r4, r5
 8002328:	10a4      	asrs	r4, r4, #2
 800232a:	42a6      	cmp	r6, r4
 800232c:	d105      	bne.n	800233a <__libc_init_array+0x2e>
 800232e:	bd70      	pop	{r4, r5, r6, pc}
 8002330:	f855 3b04 	ldr.w	r3, [r5], #4
 8002334:	4798      	blx	r3
 8002336:	3601      	adds	r6, #1
 8002338:	e7ee      	b.n	8002318 <__libc_init_array+0xc>
 800233a:	f855 3b04 	ldr.w	r3, [r5], #4
 800233e:	4798      	blx	r3
 8002340:	3601      	adds	r6, #1
 8002342:	e7f2      	b.n	800232a <__libc_init_array+0x1e>
 8002344:	08002ca0 	.word	0x08002ca0
 8002348:	08002ca0 	.word	0x08002ca0
 800234c:	08002ca0 	.word	0x08002ca0
 8002350:	08002ca4 	.word	0x08002ca4

08002354 <__retarget_lock_acquire_recursive>:
 8002354:	4770      	bx	lr

08002356 <__retarget_lock_release_recursive>:
 8002356:	4770      	bx	lr

08002358 <_free_r>:
 8002358:	b538      	push	{r3, r4, r5, lr}
 800235a:	4605      	mov	r5, r0
 800235c:	2900      	cmp	r1, #0
 800235e:	d040      	beq.n	80023e2 <_free_r+0x8a>
 8002360:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002364:	1f0c      	subs	r4, r1, #4
 8002366:	2b00      	cmp	r3, #0
 8002368:	bfb8      	it	lt
 800236a:	18e4      	addlt	r4, r4, r3
 800236c:	f000 f8de 	bl	800252c <__malloc_lock>
 8002370:	4a1c      	ldr	r2, [pc, #112]	@ (80023e4 <_free_r+0x8c>)
 8002372:	6813      	ldr	r3, [r2, #0]
 8002374:	b933      	cbnz	r3, 8002384 <_free_r+0x2c>
 8002376:	6063      	str	r3, [r4, #4]
 8002378:	6014      	str	r4, [r2, #0]
 800237a:	4628      	mov	r0, r5
 800237c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002380:	f000 b8da 	b.w	8002538 <__malloc_unlock>
 8002384:	42a3      	cmp	r3, r4
 8002386:	d908      	bls.n	800239a <_free_r+0x42>
 8002388:	6820      	ldr	r0, [r4, #0]
 800238a:	1821      	adds	r1, r4, r0
 800238c:	428b      	cmp	r3, r1
 800238e:	bf01      	itttt	eq
 8002390:	6819      	ldreq	r1, [r3, #0]
 8002392:	685b      	ldreq	r3, [r3, #4]
 8002394:	1809      	addeq	r1, r1, r0
 8002396:	6021      	streq	r1, [r4, #0]
 8002398:	e7ed      	b.n	8002376 <_free_r+0x1e>
 800239a:	461a      	mov	r2, r3
 800239c:	685b      	ldr	r3, [r3, #4]
 800239e:	b10b      	cbz	r3, 80023a4 <_free_r+0x4c>
 80023a0:	42a3      	cmp	r3, r4
 80023a2:	d9fa      	bls.n	800239a <_free_r+0x42>
 80023a4:	6811      	ldr	r1, [r2, #0]
 80023a6:	1850      	adds	r0, r2, r1
 80023a8:	42a0      	cmp	r0, r4
 80023aa:	d10b      	bne.n	80023c4 <_free_r+0x6c>
 80023ac:	6820      	ldr	r0, [r4, #0]
 80023ae:	4401      	add	r1, r0
 80023b0:	1850      	adds	r0, r2, r1
 80023b2:	4283      	cmp	r3, r0
 80023b4:	6011      	str	r1, [r2, #0]
 80023b6:	d1e0      	bne.n	800237a <_free_r+0x22>
 80023b8:	6818      	ldr	r0, [r3, #0]
 80023ba:	685b      	ldr	r3, [r3, #4]
 80023bc:	4408      	add	r0, r1
 80023be:	6010      	str	r0, [r2, #0]
 80023c0:	6053      	str	r3, [r2, #4]
 80023c2:	e7da      	b.n	800237a <_free_r+0x22>
 80023c4:	d902      	bls.n	80023cc <_free_r+0x74>
 80023c6:	230c      	movs	r3, #12
 80023c8:	602b      	str	r3, [r5, #0]
 80023ca:	e7d6      	b.n	800237a <_free_r+0x22>
 80023cc:	6820      	ldr	r0, [r4, #0]
 80023ce:	1821      	adds	r1, r4, r0
 80023d0:	428b      	cmp	r3, r1
 80023d2:	bf01      	itttt	eq
 80023d4:	6819      	ldreq	r1, [r3, #0]
 80023d6:	685b      	ldreq	r3, [r3, #4]
 80023d8:	1809      	addeq	r1, r1, r0
 80023da:	6021      	streq	r1, [r4, #0]
 80023dc:	6063      	str	r3, [r4, #4]
 80023de:	6054      	str	r4, [r2, #4]
 80023e0:	e7cb      	b.n	800237a <_free_r+0x22>
 80023e2:	bd38      	pop	{r3, r4, r5, pc}
 80023e4:	200003e8 	.word	0x200003e8

080023e8 <sbrk_aligned>:
 80023e8:	b570      	push	{r4, r5, r6, lr}
 80023ea:	4e0f      	ldr	r6, [pc, #60]	@ (8002428 <sbrk_aligned+0x40>)
 80023ec:	460c      	mov	r4, r1
 80023ee:	6831      	ldr	r1, [r6, #0]
 80023f0:	4605      	mov	r5, r0
 80023f2:	b911      	cbnz	r1, 80023fa <sbrk_aligned+0x12>
 80023f4:	f000 fbaa 	bl	8002b4c <_sbrk_r>
 80023f8:	6030      	str	r0, [r6, #0]
 80023fa:	4621      	mov	r1, r4
 80023fc:	4628      	mov	r0, r5
 80023fe:	f000 fba5 	bl	8002b4c <_sbrk_r>
 8002402:	1c43      	adds	r3, r0, #1
 8002404:	d103      	bne.n	800240e <sbrk_aligned+0x26>
 8002406:	f04f 34ff 	mov.w	r4, #4294967295
 800240a:	4620      	mov	r0, r4
 800240c:	bd70      	pop	{r4, r5, r6, pc}
 800240e:	1cc4      	adds	r4, r0, #3
 8002410:	f024 0403 	bic.w	r4, r4, #3
 8002414:	42a0      	cmp	r0, r4
 8002416:	d0f8      	beq.n	800240a <sbrk_aligned+0x22>
 8002418:	1a21      	subs	r1, r4, r0
 800241a:	4628      	mov	r0, r5
 800241c:	f000 fb96 	bl	8002b4c <_sbrk_r>
 8002420:	3001      	adds	r0, #1
 8002422:	d1f2      	bne.n	800240a <sbrk_aligned+0x22>
 8002424:	e7ef      	b.n	8002406 <sbrk_aligned+0x1e>
 8002426:	bf00      	nop
 8002428:	200003e4 	.word	0x200003e4

0800242c <_malloc_r>:
 800242c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002430:	1ccd      	adds	r5, r1, #3
 8002432:	f025 0503 	bic.w	r5, r5, #3
 8002436:	3508      	adds	r5, #8
 8002438:	2d0c      	cmp	r5, #12
 800243a:	bf38      	it	cc
 800243c:	250c      	movcc	r5, #12
 800243e:	2d00      	cmp	r5, #0
 8002440:	4606      	mov	r6, r0
 8002442:	db01      	blt.n	8002448 <_malloc_r+0x1c>
 8002444:	42a9      	cmp	r1, r5
 8002446:	d904      	bls.n	8002452 <_malloc_r+0x26>
 8002448:	230c      	movs	r3, #12
 800244a:	6033      	str	r3, [r6, #0]
 800244c:	2000      	movs	r0, #0
 800244e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002452:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002528 <_malloc_r+0xfc>
 8002456:	f000 f869 	bl	800252c <__malloc_lock>
 800245a:	f8d8 3000 	ldr.w	r3, [r8]
 800245e:	461c      	mov	r4, r3
 8002460:	bb44      	cbnz	r4, 80024b4 <_malloc_r+0x88>
 8002462:	4629      	mov	r1, r5
 8002464:	4630      	mov	r0, r6
 8002466:	f7ff ffbf 	bl	80023e8 <sbrk_aligned>
 800246a:	1c43      	adds	r3, r0, #1
 800246c:	4604      	mov	r4, r0
 800246e:	d158      	bne.n	8002522 <_malloc_r+0xf6>
 8002470:	f8d8 4000 	ldr.w	r4, [r8]
 8002474:	4627      	mov	r7, r4
 8002476:	2f00      	cmp	r7, #0
 8002478:	d143      	bne.n	8002502 <_malloc_r+0xd6>
 800247a:	2c00      	cmp	r4, #0
 800247c:	d04b      	beq.n	8002516 <_malloc_r+0xea>
 800247e:	6823      	ldr	r3, [r4, #0]
 8002480:	4639      	mov	r1, r7
 8002482:	4630      	mov	r0, r6
 8002484:	eb04 0903 	add.w	r9, r4, r3
 8002488:	f000 fb60 	bl	8002b4c <_sbrk_r>
 800248c:	4581      	cmp	r9, r0
 800248e:	d142      	bne.n	8002516 <_malloc_r+0xea>
 8002490:	6821      	ldr	r1, [r4, #0]
 8002492:	4630      	mov	r0, r6
 8002494:	1a6d      	subs	r5, r5, r1
 8002496:	4629      	mov	r1, r5
 8002498:	f7ff ffa6 	bl	80023e8 <sbrk_aligned>
 800249c:	3001      	adds	r0, #1
 800249e:	d03a      	beq.n	8002516 <_malloc_r+0xea>
 80024a0:	6823      	ldr	r3, [r4, #0]
 80024a2:	442b      	add	r3, r5
 80024a4:	6023      	str	r3, [r4, #0]
 80024a6:	f8d8 3000 	ldr.w	r3, [r8]
 80024aa:	685a      	ldr	r2, [r3, #4]
 80024ac:	bb62      	cbnz	r2, 8002508 <_malloc_r+0xdc>
 80024ae:	f8c8 7000 	str.w	r7, [r8]
 80024b2:	e00f      	b.n	80024d4 <_malloc_r+0xa8>
 80024b4:	6822      	ldr	r2, [r4, #0]
 80024b6:	1b52      	subs	r2, r2, r5
 80024b8:	d420      	bmi.n	80024fc <_malloc_r+0xd0>
 80024ba:	2a0b      	cmp	r2, #11
 80024bc:	d917      	bls.n	80024ee <_malloc_r+0xc2>
 80024be:	1961      	adds	r1, r4, r5
 80024c0:	42a3      	cmp	r3, r4
 80024c2:	6025      	str	r5, [r4, #0]
 80024c4:	bf18      	it	ne
 80024c6:	6059      	strne	r1, [r3, #4]
 80024c8:	6863      	ldr	r3, [r4, #4]
 80024ca:	bf08      	it	eq
 80024cc:	f8c8 1000 	streq.w	r1, [r8]
 80024d0:	5162      	str	r2, [r4, r5]
 80024d2:	604b      	str	r3, [r1, #4]
 80024d4:	4630      	mov	r0, r6
 80024d6:	f000 f82f 	bl	8002538 <__malloc_unlock>
 80024da:	f104 000b 	add.w	r0, r4, #11
 80024de:	1d23      	adds	r3, r4, #4
 80024e0:	f020 0007 	bic.w	r0, r0, #7
 80024e4:	1ac2      	subs	r2, r0, r3
 80024e6:	bf1c      	itt	ne
 80024e8:	1a1b      	subne	r3, r3, r0
 80024ea:	50a3      	strne	r3, [r4, r2]
 80024ec:	e7af      	b.n	800244e <_malloc_r+0x22>
 80024ee:	6862      	ldr	r2, [r4, #4]
 80024f0:	42a3      	cmp	r3, r4
 80024f2:	bf0c      	ite	eq
 80024f4:	f8c8 2000 	streq.w	r2, [r8]
 80024f8:	605a      	strne	r2, [r3, #4]
 80024fa:	e7eb      	b.n	80024d4 <_malloc_r+0xa8>
 80024fc:	4623      	mov	r3, r4
 80024fe:	6864      	ldr	r4, [r4, #4]
 8002500:	e7ae      	b.n	8002460 <_malloc_r+0x34>
 8002502:	463c      	mov	r4, r7
 8002504:	687f      	ldr	r7, [r7, #4]
 8002506:	e7b6      	b.n	8002476 <_malloc_r+0x4a>
 8002508:	461a      	mov	r2, r3
 800250a:	685b      	ldr	r3, [r3, #4]
 800250c:	42a3      	cmp	r3, r4
 800250e:	d1fb      	bne.n	8002508 <_malloc_r+0xdc>
 8002510:	2300      	movs	r3, #0
 8002512:	6053      	str	r3, [r2, #4]
 8002514:	e7de      	b.n	80024d4 <_malloc_r+0xa8>
 8002516:	230c      	movs	r3, #12
 8002518:	4630      	mov	r0, r6
 800251a:	6033      	str	r3, [r6, #0]
 800251c:	f000 f80c 	bl	8002538 <__malloc_unlock>
 8002520:	e794      	b.n	800244c <_malloc_r+0x20>
 8002522:	6005      	str	r5, [r0, #0]
 8002524:	e7d6      	b.n	80024d4 <_malloc_r+0xa8>
 8002526:	bf00      	nop
 8002528:	200003e8 	.word	0x200003e8

0800252c <__malloc_lock>:
 800252c:	4801      	ldr	r0, [pc, #4]	@ (8002534 <__malloc_lock+0x8>)
 800252e:	f7ff bf11 	b.w	8002354 <__retarget_lock_acquire_recursive>
 8002532:	bf00      	nop
 8002534:	200003e0 	.word	0x200003e0

08002538 <__malloc_unlock>:
 8002538:	4801      	ldr	r0, [pc, #4]	@ (8002540 <__malloc_unlock+0x8>)
 800253a:	f7ff bf0c 	b.w	8002356 <__retarget_lock_release_recursive>
 800253e:	bf00      	nop
 8002540:	200003e0 	.word	0x200003e0

08002544 <__ssputs_r>:
 8002544:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002548:	461f      	mov	r7, r3
 800254a:	688e      	ldr	r6, [r1, #8]
 800254c:	4682      	mov	sl, r0
 800254e:	42be      	cmp	r6, r7
 8002550:	460c      	mov	r4, r1
 8002552:	4690      	mov	r8, r2
 8002554:	680b      	ldr	r3, [r1, #0]
 8002556:	d82d      	bhi.n	80025b4 <__ssputs_r+0x70>
 8002558:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800255c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8002560:	d026      	beq.n	80025b0 <__ssputs_r+0x6c>
 8002562:	6965      	ldr	r5, [r4, #20]
 8002564:	6909      	ldr	r1, [r1, #16]
 8002566:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800256a:	eba3 0901 	sub.w	r9, r3, r1
 800256e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002572:	1c7b      	adds	r3, r7, #1
 8002574:	444b      	add	r3, r9
 8002576:	106d      	asrs	r5, r5, #1
 8002578:	429d      	cmp	r5, r3
 800257a:	bf38      	it	cc
 800257c:	461d      	movcc	r5, r3
 800257e:	0553      	lsls	r3, r2, #21
 8002580:	d527      	bpl.n	80025d2 <__ssputs_r+0x8e>
 8002582:	4629      	mov	r1, r5
 8002584:	f7ff ff52 	bl	800242c <_malloc_r>
 8002588:	4606      	mov	r6, r0
 800258a:	b360      	cbz	r0, 80025e6 <__ssputs_r+0xa2>
 800258c:	464a      	mov	r2, r9
 800258e:	6921      	ldr	r1, [r4, #16]
 8002590:	f000 fafa 	bl	8002b88 <memcpy>
 8002594:	89a3      	ldrh	r3, [r4, #12]
 8002596:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800259a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800259e:	81a3      	strh	r3, [r4, #12]
 80025a0:	6126      	str	r6, [r4, #16]
 80025a2:	444e      	add	r6, r9
 80025a4:	6026      	str	r6, [r4, #0]
 80025a6:	463e      	mov	r6, r7
 80025a8:	6165      	str	r5, [r4, #20]
 80025aa:	eba5 0509 	sub.w	r5, r5, r9
 80025ae:	60a5      	str	r5, [r4, #8]
 80025b0:	42be      	cmp	r6, r7
 80025b2:	d900      	bls.n	80025b6 <__ssputs_r+0x72>
 80025b4:	463e      	mov	r6, r7
 80025b6:	4632      	mov	r2, r6
 80025b8:	4641      	mov	r1, r8
 80025ba:	6820      	ldr	r0, [r4, #0]
 80025bc:	f000 faac 	bl	8002b18 <memmove>
 80025c0:	2000      	movs	r0, #0
 80025c2:	68a3      	ldr	r3, [r4, #8]
 80025c4:	1b9b      	subs	r3, r3, r6
 80025c6:	60a3      	str	r3, [r4, #8]
 80025c8:	6823      	ldr	r3, [r4, #0]
 80025ca:	4433      	add	r3, r6
 80025cc:	6023      	str	r3, [r4, #0]
 80025ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80025d2:	462a      	mov	r2, r5
 80025d4:	f000 fae6 	bl	8002ba4 <_realloc_r>
 80025d8:	4606      	mov	r6, r0
 80025da:	2800      	cmp	r0, #0
 80025dc:	d1e0      	bne.n	80025a0 <__ssputs_r+0x5c>
 80025de:	4650      	mov	r0, sl
 80025e0:	6921      	ldr	r1, [r4, #16]
 80025e2:	f7ff feb9 	bl	8002358 <_free_r>
 80025e6:	230c      	movs	r3, #12
 80025e8:	f8ca 3000 	str.w	r3, [sl]
 80025ec:	89a3      	ldrh	r3, [r4, #12]
 80025ee:	f04f 30ff 	mov.w	r0, #4294967295
 80025f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80025f6:	81a3      	strh	r3, [r4, #12]
 80025f8:	e7e9      	b.n	80025ce <__ssputs_r+0x8a>
	...

080025fc <_svfiprintf_r>:
 80025fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002600:	4698      	mov	r8, r3
 8002602:	898b      	ldrh	r3, [r1, #12]
 8002604:	4607      	mov	r7, r0
 8002606:	061b      	lsls	r3, r3, #24
 8002608:	460d      	mov	r5, r1
 800260a:	4614      	mov	r4, r2
 800260c:	b09d      	sub	sp, #116	@ 0x74
 800260e:	d510      	bpl.n	8002632 <_svfiprintf_r+0x36>
 8002610:	690b      	ldr	r3, [r1, #16]
 8002612:	b973      	cbnz	r3, 8002632 <_svfiprintf_r+0x36>
 8002614:	2140      	movs	r1, #64	@ 0x40
 8002616:	f7ff ff09 	bl	800242c <_malloc_r>
 800261a:	6028      	str	r0, [r5, #0]
 800261c:	6128      	str	r0, [r5, #16]
 800261e:	b930      	cbnz	r0, 800262e <_svfiprintf_r+0x32>
 8002620:	230c      	movs	r3, #12
 8002622:	603b      	str	r3, [r7, #0]
 8002624:	f04f 30ff 	mov.w	r0, #4294967295
 8002628:	b01d      	add	sp, #116	@ 0x74
 800262a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800262e:	2340      	movs	r3, #64	@ 0x40
 8002630:	616b      	str	r3, [r5, #20]
 8002632:	2300      	movs	r3, #0
 8002634:	9309      	str	r3, [sp, #36]	@ 0x24
 8002636:	2320      	movs	r3, #32
 8002638:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800263c:	2330      	movs	r3, #48	@ 0x30
 800263e:	f04f 0901 	mov.w	r9, #1
 8002642:	f8cd 800c 	str.w	r8, [sp, #12]
 8002646:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80027e0 <_svfiprintf_r+0x1e4>
 800264a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800264e:	4623      	mov	r3, r4
 8002650:	469a      	mov	sl, r3
 8002652:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002656:	b10a      	cbz	r2, 800265c <_svfiprintf_r+0x60>
 8002658:	2a25      	cmp	r2, #37	@ 0x25
 800265a:	d1f9      	bne.n	8002650 <_svfiprintf_r+0x54>
 800265c:	ebba 0b04 	subs.w	fp, sl, r4
 8002660:	d00b      	beq.n	800267a <_svfiprintf_r+0x7e>
 8002662:	465b      	mov	r3, fp
 8002664:	4622      	mov	r2, r4
 8002666:	4629      	mov	r1, r5
 8002668:	4638      	mov	r0, r7
 800266a:	f7ff ff6b 	bl	8002544 <__ssputs_r>
 800266e:	3001      	adds	r0, #1
 8002670:	f000 80a7 	beq.w	80027c2 <_svfiprintf_r+0x1c6>
 8002674:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002676:	445a      	add	r2, fp
 8002678:	9209      	str	r2, [sp, #36]	@ 0x24
 800267a:	f89a 3000 	ldrb.w	r3, [sl]
 800267e:	2b00      	cmp	r3, #0
 8002680:	f000 809f 	beq.w	80027c2 <_svfiprintf_r+0x1c6>
 8002684:	2300      	movs	r3, #0
 8002686:	f04f 32ff 	mov.w	r2, #4294967295
 800268a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800268e:	f10a 0a01 	add.w	sl, sl, #1
 8002692:	9304      	str	r3, [sp, #16]
 8002694:	9307      	str	r3, [sp, #28]
 8002696:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800269a:	931a      	str	r3, [sp, #104]	@ 0x68
 800269c:	4654      	mov	r4, sl
 800269e:	2205      	movs	r2, #5
 80026a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80026a4:	484e      	ldr	r0, [pc, #312]	@ (80027e0 <_svfiprintf_r+0x1e4>)
 80026a6:	f000 fa61 	bl	8002b6c <memchr>
 80026aa:	9a04      	ldr	r2, [sp, #16]
 80026ac:	b9d8      	cbnz	r0, 80026e6 <_svfiprintf_r+0xea>
 80026ae:	06d0      	lsls	r0, r2, #27
 80026b0:	bf44      	itt	mi
 80026b2:	2320      	movmi	r3, #32
 80026b4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80026b8:	0711      	lsls	r1, r2, #28
 80026ba:	bf44      	itt	mi
 80026bc:	232b      	movmi	r3, #43	@ 0x2b
 80026be:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80026c2:	f89a 3000 	ldrb.w	r3, [sl]
 80026c6:	2b2a      	cmp	r3, #42	@ 0x2a
 80026c8:	d015      	beq.n	80026f6 <_svfiprintf_r+0xfa>
 80026ca:	4654      	mov	r4, sl
 80026cc:	2000      	movs	r0, #0
 80026ce:	f04f 0c0a 	mov.w	ip, #10
 80026d2:	9a07      	ldr	r2, [sp, #28]
 80026d4:	4621      	mov	r1, r4
 80026d6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80026da:	3b30      	subs	r3, #48	@ 0x30
 80026dc:	2b09      	cmp	r3, #9
 80026de:	d94b      	bls.n	8002778 <_svfiprintf_r+0x17c>
 80026e0:	b1b0      	cbz	r0, 8002710 <_svfiprintf_r+0x114>
 80026e2:	9207      	str	r2, [sp, #28]
 80026e4:	e014      	b.n	8002710 <_svfiprintf_r+0x114>
 80026e6:	eba0 0308 	sub.w	r3, r0, r8
 80026ea:	fa09 f303 	lsl.w	r3, r9, r3
 80026ee:	4313      	orrs	r3, r2
 80026f0:	46a2      	mov	sl, r4
 80026f2:	9304      	str	r3, [sp, #16]
 80026f4:	e7d2      	b.n	800269c <_svfiprintf_r+0xa0>
 80026f6:	9b03      	ldr	r3, [sp, #12]
 80026f8:	1d19      	adds	r1, r3, #4
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	9103      	str	r1, [sp, #12]
 80026fe:	2b00      	cmp	r3, #0
 8002700:	bfbb      	ittet	lt
 8002702:	425b      	neglt	r3, r3
 8002704:	f042 0202 	orrlt.w	r2, r2, #2
 8002708:	9307      	strge	r3, [sp, #28]
 800270a:	9307      	strlt	r3, [sp, #28]
 800270c:	bfb8      	it	lt
 800270e:	9204      	strlt	r2, [sp, #16]
 8002710:	7823      	ldrb	r3, [r4, #0]
 8002712:	2b2e      	cmp	r3, #46	@ 0x2e
 8002714:	d10a      	bne.n	800272c <_svfiprintf_r+0x130>
 8002716:	7863      	ldrb	r3, [r4, #1]
 8002718:	2b2a      	cmp	r3, #42	@ 0x2a
 800271a:	d132      	bne.n	8002782 <_svfiprintf_r+0x186>
 800271c:	9b03      	ldr	r3, [sp, #12]
 800271e:	3402      	adds	r4, #2
 8002720:	1d1a      	adds	r2, r3, #4
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	9203      	str	r2, [sp, #12]
 8002726:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800272a:	9305      	str	r3, [sp, #20]
 800272c:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 80027e4 <_svfiprintf_r+0x1e8>
 8002730:	2203      	movs	r2, #3
 8002732:	4650      	mov	r0, sl
 8002734:	7821      	ldrb	r1, [r4, #0]
 8002736:	f000 fa19 	bl	8002b6c <memchr>
 800273a:	b138      	cbz	r0, 800274c <_svfiprintf_r+0x150>
 800273c:	2240      	movs	r2, #64	@ 0x40
 800273e:	9b04      	ldr	r3, [sp, #16]
 8002740:	eba0 000a 	sub.w	r0, r0, sl
 8002744:	4082      	lsls	r2, r0
 8002746:	4313      	orrs	r3, r2
 8002748:	3401      	adds	r4, #1
 800274a:	9304      	str	r3, [sp, #16]
 800274c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002750:	2206      	movs	r2, #6
 8002752:	4825      	ldr	r0, [pc, #148]	@ (80027e8 <_svfiprintf_r+0x1ec>)
 8002754:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8002758:	f000 fa08 	bl	8002b6c <memchr>
 800275c:	2800      	cmp	r0, #0
 800275e:	d036      	beq.n	80027ce <_svfiprintf_r+0x1d2>
 8002760:	4b22      	ldr	r3, [pc, #136]	@ (80027ec <_svfiprintf_r+0x1f0>)
 8002762:	bb1b      	cbnz	r3, 80027ac <_svfiprintf_r+0x1b0>
 8002764:	9b03      	ldr	r3, [sp, #12]
 8002766:	3307      	adds	r3, #7
 8002768:	f023 0307 	bic.w	r3, r3, #7
 800276c:	3308      	adds	r3, #8
 800276e:	9303      	str	r3, [sp, #12]
 8002770:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002772:	4433      	add	r3, r6
 8002774:	9309      	str	r3, [sp, #36]	@ 0x24
 8002776:	e76a      	b.n	800264e <_svfiprintf_r+0x52>
 8002778:	460c      	mov	r4, r1
 800277a:	2001      	movs	r0, #1
 800277c:	fb0c 3202 	mla	r2, ip, r2, r3
 8002780:	e7a8      	b.n	80026d4 <_svfiprintf_r+0xd8>
 8002782:	2300      	movs	r3, #0
 8002784:	f04f 0c0a 	mov.w	ip, #10
 8002788:	4619      	mov	r1, r3
 800278a:	3401      	adds	r4, #1
 800278c:	9305      	str	r3, [sp, #20]
 800278e:	4620      	mov	r0, r4
 8002790:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002794:	3a30      	subs	r2, #48	@ 0x30
 8002796:	2a09      	cmp	r2, #9
 8002798:	d903      	bls.n	80027a2 <_svfiprintf_r+0x1a6>
 800279a:	2b00      	cmp	r3, #0
 800279c:	d0c6      	beq.n	800272c <_svfiprintf_r+0x130>
 800279e:	9105      	str	r1, [sp, #20]
 80027a0:	e7c4      	b.n	800272c <_svfiprintf_r+0x130>
 80027a2:	4604      	mov	r4, r0
 80027a4:	2301      	movs	r3, #1
 80027a6:	fb0c 2101 	mla	r1, ip, r1, r2
 80027aa:	e7f0      	b.n	800278e <_svfiprintf_r+0x192>
 80027ac:	ab03      	add	r3, sp, #12
 80027ae:	9300      	str	r3, [sp, #0]
 80027b0:	462a      	mov	r2, r5
 80027b2:	4638      	mov	r0, r7
 80027b4:	4b0e      	ldr	r3, [pc, #56]	@ (80027f0 <_svfiprintf_r+0x1f4>)
 80027b6:	a904      	add	r1, sp, #16
 80027b8:	f3af 8000 	nop.w
 80027bc:	1c42      	adds	r2, r0, #1
 80027be:	4606      	mov	r6, r0
 80027c0:	d1d6      	bne.n	8002770 <_svfiprintf_r+0x174>
 80027c2:	89ab      	ldrh	r3, [r5, #12]
 80027c4:	065b      	lsls	r3, r3, #25
 80027c6:	f53f af2d 	bmi.w	8002624 <_svfiprintf_r+0x28>
 80027ca:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80027cc:	e72c      	b.n	8002628 <_svfiprintf_r+0x2c>
 80027ce:	ab03      	add	r3, sp, #12
 80027d0:	9300      	str	r3, [sp, #0]
 80027d2:	462a      	mov	r2, r5
 80027d4:	4638      	mov	r0, r7
 80027d6:	4b06      	ldr	r3, [pc, #24]	@ (80027f0 <_svfiprintf_r+0x1f4>)
 80027d8:	a904      	add	r1, sp, #16
 80027da:	f000 f87d 	bl	80028d8 <_printf_i>
 80027de:	e7ed      	b.n	80027bc <_svfiprintf_r+0x1c0>
 80027e0:	08002c64 	.word	0x08002c64
 80027e4:	08002c6a 	.word	0x08002c6a
 80027e8:	08002c6e 	.word	0x08002c6e
 80027ec:	00000000 	.word	0x00000000
 80027f0:	08002545 	.word	0x08002545

080027f4 <_printf_common>:
 80027f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80027f8:	4616      	mov	r6, r2
 80027fa:	4698      	mov	r8, r3
 80027fc:	688a      	ldr	r2, [r1, #8]
 80027fe:	690b      	ldr	r3, [r1, #16]
 8002800:	4607      	mov	r7, r0
 8002802:	4293      	cmp	r3, r2
 8002804:	bfb8      	it	lt
 8002806:	4613      	movlt	r3, r2
 8002808:	6033      	str	r3, [r6, #0]
 800280a:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800280e:	460c      	mov	r4, r1
 8002810:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002814:	b10a      	cbz	r2, 800281a <_printf_common+0x26>
 8002816:	3301      	adds	r3, #1
 8002818:	6033      	str	r3, [r6, #0]
 800281a:	6823      	ldr	r3, [r4, #0]
 800281c:	0699      	lsls	r1, r3, #26
 800281e:	bf42      	ittt	mi
 8002820:	6833      	ldrmi	r3, [r6, #0]
 8002822:	3302      	addmi	r3, #2
 8002824:	6033      	strmi	r3, [r6, #0]
 8002826:	6825      	ldr	r5, [r4, #0]
 8002828:	f015 0506 	ands.w	r5, r5, #6
 800282c:	d106      	bne.n	800283c <_printf_common+0x48>
 800282e:	f104 0a19 	add.w	sl, r4, #25
 8002832:	68e3      	ldr	r3, [r4, #12]
 8002834:	6832      	ldr	r2, [r6, #0]
 8002836:	1a9b      	subs	r3, r3, r2
 8002838:	42ab      	cmp	r3, r5
 800283a:	dc2b      	bgt.n	8002894 <_printf_common+0xa0>
 800283c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002840:	6822      	ldr	r2, [r4, #0]
 8002842:	3b00      	subs	r3, #0
 8002844:	bf18      	it	ne
 8002846:	2301      	movne	r3, #1
 8002848:	0692      	lsls	r2, r2, #26
 800284a:	d430      	bmi.n	80028ae <_printf_common+0xba>
 800284c:	4641      	mov	r1, r8
 800284e:	4638      	mov	r0, r7
 8002850:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002854:	47c8      	blx	r9
 8002856:	3001      	adds	r0, #1
 8002858:	d023      	beq.n	80028a2 <_printf_common+0xae>
 800285a:	6823      	ldr	r3, [r4, #0]
 800285c:	6922      	ldr	r2, [r4, #16]
 800285e:	f003 0306 	and.w	r3, r3, #6
 8002862:	2b04      	cmp	r3, #4
 8002864:	bf14      	ite	ne
 8002866:	2500      	movne	r5, #0
 8002868:	6833      	ldreq	r3, [r6, #0]
 800286a:	f04f 0600 	mov.w	r6, #0
 800286e:	bf08      	it	eq
 8002870:	68e5      	ldreq	r5, [r4, #12]
 8002872:	f104 041a 	add.w	r4, r4, #26
 8002876:	bf08      	it	eq
 8002878:	1aed      	subeq	r5, r5, r3
 800287a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800287e:	bf08      	it	eq
 8002880:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002884:	4293      	cmp	r3, r2
 8002886:	bfc4      	itt	gt
 8002888:	1a9b      	subgt	r3, r3, r2
 800288a:	18ed      	addgt	r5, r5, r3
 800288c:	42b5      	cmp	r5, r6
 800288e:	d11a      	bne.n	80028c6 <_printf_common+0xd2>
 8002890:	2000      	movs	r0, #0
 8002892:	e008      	b.n	80028a6 <_printf_common+0xb2>
 8002894:	2301      	movs	r3, #1
 8002896:	4652      	mov	r2, sl
 8002898:	4641      	mov	r1, r8
 800289a:	4638      	mov	r0, r7
 800289c:	47c8      	blx	r9
 800289e:	3001      	adds	r0, #1
 80028a0:	d103      	bne.n	80028aa <_printf_common+0xb6>
 80028a2:	f04f 30ff 	mov.w	r0, #4294967295
 80028a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80028aa:	3501      	adds	r5, #1
 80028ac:	e7c1      	b.n	8002832 <_printf_common+0x3e>
 80028ae:	2030      	movs	r0, #48	@ 0x30
 80028b0:	18e1      	adds	r1, r4, r3
 80028b2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80028b6:	1c5a      	adds	r2, r3, #1
 80028b8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80028bc:	4422      	add	r2, r4
 80028be:	3302      	adds	r3, #2
 80028c0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80028c4:	e7c2      	b.n	800284c <_printf_common+0x58>
 80028c6:	2301      	movs	r3, #1
 80028c8:	4622      	mov	r2, r4
 80028ca:	4641      	mov	r1, r8
 80028cc:	4638      	mov	r0, r7
 80028ce:	47c8      	blx	r9
 80028d0:	3001      	adds	r0, #1
 80028d2:	d0e6      	beq.n	80028a2 <_printf_common+0xae>
 80028d4:	3601      	adds	r6, #1
 80028d6:	e7d9      	b.n	800288c <_printf_common+0x98>

080028d8 <_printf_i>:
 80028d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80028dc:	7e0f      	ldrb	r7, [r1, #24]
 80028de:	4691      	mov	r9, r2
 80028e0:	2f78      	cmp	r7, #120	@ 0x78
 80028e2:	4680      	mov	r8, r0
 80028e4:	460c      	mov	r4, r1
 80028e6:	469a      	mov	sl, r3
 80028e8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80028ea:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80028ee:	d807      	bhi.n	8002900 <_printf_i+0x28>
 80028f0:	2f62      	cmp	r7, #98	@ 0x62
 80028f2:	d80a      	bhi.n	800290a <_printf_i+0x32>
 80028f4:	2f00      	cmp	r7, #0
 80028f6:	f000 80d3 	beq.w	8002aa0 <_printf_i+0x1c8>
 80028fa:	2f58      	cmp	r7, #88	@ 0x58
 80028fc:	f000 80ba 	beq.w	8002a74 <_printf_i+0x19c>
 8002900:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002904:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002908:	e03a      	b.n	8002980 <_printf_i+0xa8>
 800290a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800290e:	2b15      	cmp	r3, #21
 8002910:	d8f6      	bhi.n	8002900 <_printf_i+0x28>
 8002912:	a101      	add	r1, pc, #4	@ (adr r1, 8002918 <_printf_i+0x40>)
 8002914:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002918:	08002971 	.word	0x08002971
 800291c:	08002985 	.word	0x08002985
 8002920:	08002901 	.word	0x08002901
 8002924:	08002901 	.word	0x08002901
 8002928:	08002901 	.word	0x08002901
 800292c:	08002901 	.word	0x08002901
 8002930:	08002985 	.word	0x08002985
 8002934:	08002901 	.word	0x08002901
 8002938:	08002901 	.word	0x08002901
 800293c:	08002901 	.word	0x08002901
 8002940:	08002901 	.word	0x08002901
 8002944:	08002a87 	.word	0x08002a87
 8002948:	080029af 	.word	0x080029af
 800294c:	08002a41 	.word	0x08002a41
 8002950:	08002901 	.word	0x08002901
 8002954:	08002901 	.word	0x08002901
 8002958:	08002aa9 	.word	0x08002aa9
 800295c:	08002901 	.word	0x08002901
 8002960:	080029af 	.word	0x080029af
 8002964:	08002901 	.word	0x08002901
 8002968:	08002901 	.word	0x08002901
 800296c:	08002a49 	.word	0x08002a49
 8002970:	6833      	ldr	r3, [r6, #0]
 8002972:	1d1a      	adds	r2, r3, #4
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	6032      	str	r2, [r6, #0]
 8002978:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800297c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002980:	2301      	movs	r3, #1
 8002982:	e09e      	b.n	8002ac2 <_printf_i+0x1ea>
 8002984:	6833      	ldr	r3, [r6, #0]
 8002986:	6820      	ldr	r0, [r4, #0]
 8002988:	1d19      	adds	r1, r3, #4
 800298a:	6031      	str	r1, [r6, #0]
 800298c:	0606      	lsls	r6, r0, #24
 800298e:	d501      	bpl.n	8002994 <_printf_i+0xbc>
 8002990:	681d      	ldr	r5, [r3, #0]
 8002992:	e003      	b.n	800299c <_printf_i+0xc4>
 8002994:	0645      	lsls	r5, r0, #25
 8002996:	d5fb      	bpl.n	8002990 <_printf_i+0xb8>
 8002998:	f9b3 5000 	ldrsh.w	r5, [r3]
 800299c:	2d00      	cmp	r5, #0
 800299e:	da03      	bge.n	80029a8 <_printf_i+0xd0>
 80029a0:	232d      	movs	r3, #45	@ 0x2d
 80029a2:	426d      	negs	r5, r5
 80029a4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80029a8:	230a      	movs	r3, #10
 80029aa:	4859      	ldr	r0, [pc, #356]	@ (8002b10 <_printf_i+0x238>)
 80029ac:	e011      	b.n	80029d2 <_printf_i+0xfa>
 80029ae:	6821      	ldr	r1, [r4, #0]
 80029b0:	6833      	ldr	r3, [r6, #0]
 80029b2:	0608      	lsls	r0, r1, #24
 80029b4:	f853 5b04 	ldr.w	r5, [r3], #4
 80029b8:	d402      	bmi.n	80029c0 <_printf_i+0xe8>
 80029ba:	0649      	lsls	r1, r1, #25
 80029bc:	bf48      	it	mi
 80029be:	b2ad      	uxthmi	r5, r5
 80029c0:	2f6f      	cmp	r7, #111	@ 0x6f
 80029c2:	6033      	str	r3, [r6, #0]
 80029c4:	bf14      	ite	ne
 80029c6:	230a      	movne	r3, #10
 80029c8:	2308      	moveq	r3, #8
 80029ca:	4851      	ldr	r0, [pc, #324]	@ (8002b10 <_printf_i+0x238>)
 80029cc:	2100      	movs	r1, #0
 80029ce:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80029d2:	6866      	ldr	r6, [r4, #4]
 80029d4:	2e00      	cmp	r6, #0
 80029d6:	bfa8      	it	ge
 80029d8:	6821      	ldrge	r1, [r4, #0]
 80029da:	60a6      	str	r6, [r4, #8]
 80029dc:	bfa4      	itt	ge
 80029de:	f021 0104 	bicge.w	r1, r1, #4
 80029e2:	6021      	strge	r1, [r4, #0]
 80029e4:	b90d      	cbnz	r5, 80029ea <_printf_i+0x112>
 80029e6:	2e00      	cmp	r6, #0
 80029e8:	d04b      	beq.n	8002a82 <_printf_i+0x1aa>
 80029ea:	4616      	mov	r6, r2
 80029ec:	fbb5 f1f3 	udiv	r1, r5, r3
 80029f0:	fb03 5711 	mls	r7, r3, r1, r5
 80029f4:	5dc7      	ldrb	r7, [r0, r7]
 80029f6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80029fa:	462f      	mov	r7, r5
 80029fc:	42bb      	cmp	r3, r7
 80029fe:	460d      	mov	r5, r1
 8002a00:	d9f4      	bls.n	80029ec <_printf_i+0x114>
 8002a02:	2b08      	cmp	r3, #8
 8002a04:	d10b      	bne.n	8002a1e <_printf_i+0x146>
 8002a06:	6823      	ldr	r3, [r4, #0]
 8002a08:	07df      	lsls	r7, r3, #31
 8002a0a:	d508      	bpl.n	8002a1e <_printf_i+0x146>
 8002a0c:	6923      	ldr	r3, [r4, #16]
 8002a0e:	6861      	ldr	r1, [r4, #4]
 8002a10:	4299      	cmp	r1, r3
 8002a12:	bfde      	ittt	le
 8002a14:	2330      	movle	r3, #48	@ 0x30
 8002a16:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002a1a:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002a1e:	1b92      	subs	r2, r2, r6
 8002a20:	6122      	str	r2, [r4, #16]
 8002a22:	464b      	mov	r3, r9
 8002a24:	4621      	mov	r1, r4
 8002a26:	4640      	mov	r0, r8
 8002a28:	f8cd a000 	str.w	sl, [sp]
 8002a2c:	aa03      	add	r2, sp, #12
 8002a2e:	f7ff fee1 	bl	80027f4 <_printf_common>
 8002a32:	3001      	adds	r0, #1
 8002a34:	d14a      	bne.n	8002acc <_printf_i+0x1f4>
 8002a36:	f04f 30ff 	mov.w	r0, #4294967295
 8002a3a:	b004      	add	sp, #16
 8002a3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a40:	6823      	ldr	r3, [r4, #0]
 8002a42:	f043 0320 	orr.w	r3, r3, #32
 8002a46:	6023      	str	r3, [r4, #0]
 8002a48:	2778      	movs	r7, #120	@ 0x78
 8002a4a:	4832      	ldr	r0, [pc, #200]	@ (8002b14 <_printf_i+0x23c>)
 8002a4c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002a50:	6823      	ldr	r3, [r4, #0]
 8002a52:	6831      	ldr	r1, [r6, #0]
 8002a54:	061f      	lsls	r7, r3, #24
 8002a56:	f851 5b04 	ldr.w	r5, [r1], #4
 8002a5a:	d402      	bmi.n	8002a62 <_printf_i+0x18a>
 8002a5c:	065f      	lsls	r7, r3, #25
 8002a5e:	bf48      	it	mi
 8002a60:	b2ad      	uxthmi	r5, r5
 8002a62:	6031      	str	r1, [r6, #0]
 8002a64:	07d9      	lsls	r1, r3, #31
 8002a66:	bf44      	itt	mi
 8002a68:	f043 0320 	orrmi.w	r3, r3, #32
 8002a6c:	6023      	strmi	r3, [r4, #0]
 8002a6e:	b11d      	cbz	r5, 8002a78 <_printf_i+0x1a0>
 8002a70:	2310      	movs	r3, #16
 8002a72:	e7ab      	b.n	80029cc <_printf_i+0xf4>
 8002a74:	4826      	ldr	r0, [pc, #152]	@ (8002b10 <_printf_i+0x238>)
 8002a76:	e7e9      	b.n	8002a4c <_printf_i+0x174>
 8002a78:	6823      	ldr	r3, [r4, #0]
 8002a7a:	f023 0320 	bic.w	r3, r3, #32
 8002a7e:	6023      	str	r3, [r4, #0]
 8002a80:	e7f6      	b.n	8002a70 <_printf_i+0x198>
 8002a82:	4616      	mov	r6, r2
 8002a84:	e7bd      	b.n	8002a02 <_printf_i+0x12a>
 8002a86:	6833      	ldr	r3, [r6, #0]
 8002a88:	6825      	ldr	r5, [r4, #0]
 8002a8a:	1d18      	adds	r0, r3, #4
 8002a8c:	6961      	ldr	r1, [r4, #20]
 8002a8e:	6030      	str	r0, [r6, #0]
 8002a90:	062e      	lsls	r6, r5, #24
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	d501      	bpl.n	8002a9a <_printf_i+0x1c2>
 8002a96:	6019      	str	r1, [r3, #0]
 8002a98:	e002      	b.n	8002aa0 <_printf_i+0x1c8>
 8002a9a:	0668      	lsls	r0, r5, #25
 8002a9c:	d5fb      	bpl.n	8002a96 <_printf_i+0x1be>
 8002a9e:	8019      	strh	r1, [r3, #0]
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	4616      	mov	r6, r2
 8002aa4:	6123      	str	r3, [r4, #16]
 8002aa6:	e7bc      	b.n	8002a22 <_printf_i+0x14a>
 8002aa8:	6833      	ldr	r3, [r6, #0]
 8002aaa:	2100      	movs	r1, #0
 8002aac:	1d1a      	adds	r2, r3, #4
 8002aae:	6032      	str	r2, [r6, #0]
 8002ab0:	681e      	ldr	r6, [r3, #0]
 8002ab2:	6862      	ldr	r2, [r4, #4]
 8002ab4:	4630      	mov	r0, r6
 8002ab6:	f000 f859 	bl	8002b6c <memchr>
 8002aba:	b108      	cbz	r0, 8002ac0 <_printf_i+0x1e8>
 8002abc:	1b80      	subs	r0, r0, r6
 8002abe:	6060      	str	r0, [r4, #4]
 8002ac0:	6863      	ldr	r3, [r4, #4]
 8002ac2:	6123      	str	r3, [r4, #16]
 8002ac4:	2300      	movs	r3, #0
 8002ac6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002aca:	e7aa      	b.n	8002a22 <_printf_i+0x14a>
 8002acc:	4632      	mov	r2, r6
 8002ace:	4649      	mov	r1, r9
 8002ad0:	4640      	mov	r0, r8
 8002ad2:	6923      	ldr	r3, [r4, #16]
 8002ad4:	47d0      	blx	sl
 8002ad6:	3001      	adds	r0, #1
 8002ad8:	d0ad      	beq.n	8002a36 <_printf_i+0x15e>
 8002ada:	6823      	ldr	r3, [r4, #0]
 8002adc:	079b      	lsls	r3, r3, #30
 8002ade:	d413      	bmi.n	8002b08 <_printf_i+0x230>
 8002ae0:	68e0      	ldr	r0, [r4, #12]
 8002ae2:	9b03      	ldr	r3, [sp, #12]
 8002ae4:	4298      	cmp	r0, r3
 8002ae6:	bfb8      	it	lt
 8002ae8:	4618      	movlt	r0, r3
 8002aea:	e7a6      	b.n	8002a3a <_printf_i+0x162>
 8002aec:	2301      	movs	r3, #1
 8002aee:	4632      	mov	r2, r6
 8002af0:	4649      	mov	r1, r9
 8002af2:	4640      	mov	r0, r8
 8002af4:	47d0      	blx	sl
 8002af6:	3001      	adds	r0, #1
 8002af8:	d09d      	beq.n	8002a36 <_printf_i+0x15e>
 8002afa:	3501      	adds	r5, #1
 8002afc:	68e3      	ldr	r3, [r4, #12]
 8002afe:	9903      	ldr	r1, [sp, #12]
 8002b00:	1a5b      	subs	r3, r3, r1
 8002b02:	42ab      	cmp	r3, r5
 8002b04:	dcf2      	bgt.n	8002aec <_printf_i+0x214>
 8002b06:	e7eb      	b.n	8002ae0 <_printf_i+0x208>
 8002b08:	2500      	movs	r5, #0
 8002b0a:	f104 0619 	add.w	r6, r4, #25
 8002b0e:	e7f5      	b.n	8002afc <_printf_i+0x224>
 8002b10:	08002c75 	.word	0x08002c75
 8002b14:	08002c86 	.word	0x08002c86

08002b18 <memmove>:
 8002b18:	4288      	cmp	r0, r1
 8002b1a:	b510      	push	{r4, lr}
 8002b1c:	eb01 0402 	add.w	r4, r1, r2
 8002b20:	d902      	bls.n	8002b28 <memmove+0x10>
 8002b22:	4284      	cmp	r4, r0
 8002b24:	4623      	mov	r3, r4
 8002b26:	d807      	bhi.n	8002b38 <memmove+0x20>
 8002b28:	1e43      	subs	r3, r0, #1
 8002b2a:	42a1      	cmp	r1, r4
 8002b2c:	d008      	beq.n	8002b40 <memmove+0x28>
 8002b2e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8002b32:	f803 2f01 	strb.w	r2, [r3, #1]!
 8002b36:	e7f8      	b.n	8002b2a <memmove+0x12>
 8002b38:	4601      	mov	r1, r0
 8002b3a:	4402      	add	r2, r0
 8002b3c:	428a      	cmp	r2, r1
 8002b3e:	d100      	bne.n	8002b42 <memmove+0x2a>
 8002b40:	bd10      	pop	{r4, pc}
 8002b42:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8002b46:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8002b4a:	e7f7      	b.n	8002b3c <memmove+0x24>

08002b4c <_sbrk_r>:
 8002b4c:	b538      	push	{r3, r4, r5, lr}
 8002b4e:	2300      	movs	r3, #0
 8002b50:	4d05      	ldr	r5, [pc, #20]	@ (8002b68 <_sbrk_r+0x1c>)
 8002b52:	4604      	mov	r4, r0
 8002b54:	4608      	mov	r0, r1
 8002b56:	602b      	str	r3, [r5, #0]
 8002b58:	f7fd ff7e 	bl	8000a58 <_sbrk>
 8002b5c:	1c43      	adds	r3, r0, #1
 8002b5e:	d102      	bne.n	8002b66 <_sbrk_r+0x1a>
 8002b60:	682b      	ldr	r3, [r5, #0]
 8002b62:	b103      	cbz	r3, 8002b66 <_sbrk_r+0x1a>
 8002b64:	6023      	str	r3, [r4, #0]
 8002b66:	bd38      	pop	{r3, r4, r5, pc}
 8002b68:	200003dc 	.word	0x200003dc

08002b6c <memchr>:
 8002b6c:	4603      	mov	r3, r0
 8002b6e:	b510      	push	{r4, lr}
 8002b70:	b2c9      	uxtb	r1, r1
 8002b72:	4402      	add	r2, r0
 8002b74:	4293      	cmp	r3, r2
 8002b76:	4618      	mov	r0, r3
 8002b78:	d101      	bne.n	8002b7e <memchr+0x12>
 8002b7a:	2000      	movs	r0, #0
 8002b7c:	e003      	b.n	8002b86 <memchr+0x1a>
 8002b7e:	7804      	ldrb	r4, [r0, #0]
 8002b80:	3301      	adds	r3, #1
 8002b82:	428c      	cmp	r4, r1
 8002b84:	d1f6      	bne.n	8002b74 <memchr+0x8>
 8002b86:	bd10      	pop	{r4, pc}

08002b88 <memcpy>:
 8002b88:	440a      	add	r2, r1
 8002b8a:	4291      	cmp	r1, r2
 8002b8c:	f100 33ff 	add.w	r3, r0, #4294967295
 8002b90:	d100      	bne.n	8002b94 <memcpy+0xc>
 8002b92:	4770      	bx	lr
 8002b94:	b510      	push	{r4, lr}
 8002b96:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002b9a:	4291      	cmp	r1, r2
 8002b9c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002ba0:	d1f9      	bne.n	8002b96 <memcpy+0xe>
 8002ba2:	bd10      	pop	{r4, pc}

08002ba4 <_realloc_r>:
 8002ba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ba8:	4680      	mov	r8, r0
 8002baa:	4615      	mov	r5, r2
 8002bac:	460c      	mov	r4, r1
 8002bae:	b921      	cbnz	r1, 8002bba <_realloc_r+0x16>
 8002bb0:	4611      	mov	r1, r2
 8002bb2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002bb6:	f7ff bc39 	b.w	800242c <_malloc_r>
 8002bba:	b92a      	cbnz	r2, 8002bc8 <_realloc_r+0x24>
 8002bbc:	f7ff fbcc 	bl	8002358 <_free_r>
 8002bc0:	2400      	movs	r4, #0
 8002bc2:	4620      	mov	r0, r4
 8002bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002bc8:	f000 f81a 	bl	8002c00 <_malloc_usable_size_r>
 8002bcc:	4285      	cmp	r5, r0
 8002bce:	4606      	mov	r6, r0
 8002bd0:	d802      	bhi.n	8002bd8 <_realloc_r+0x34>
 8002bd2:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8002bd6:	d8f4      	bhi.n	8002bc2 <_realloc_r+0x1e>
 8002bd8:	4629      	mov	r1, r5
 8002bda:	4640      	mov	r0, r8
 8002bdc:	f7ff fc26 	bl	800242c <_malloc_r>
 8002be0:	4607      	mov	r7, r0
 8002be2:	2800      	cmp	r0, #0
 8002be4:	d0ec      	beq.n	8002bc0 <_realloc_r+0x1c>
 8002be6:	42b5      	cmp	r5, r6
 8002be8:	462a      	mov	r2, r5
 8002bea:	4621      	mov	r1, r4
 8002bec:	bf28      	it	cs
 8002bee:	4632      	movcs	r2, r6
 8002bf0:	f7ff ffca 	bl	8002b88 <memcpy>
 8002bf4:	4621      	mov	r1, r4
 8002bf6:	4640      	mov	r0, r8
 8002bf8:	f7ff fbae 	bl	8002358 <_free_r>
 8002bfc:	463c      	mov	r4, r7
 8002bfe:	e7e0      	b.n	8002bc2 <_realloc_r+0x1e>

08002c00 <_malloc_usable_size_r>:
 8002c00:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002c04:	1f18      	subs	r0, r3, #4
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	bfbc      	itt	lt
 8002c0a:	580b      	ldrlt	r3, [r1, r0]
 8002c0c:	18c0      	addlt	r0, r0, r3
 8002c0e:	4770      	bx	lr

08002c10 <_init>:
 8002c10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c12:	bf00      	nop
 8002c14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c16:	bc08      	pop	{r3}
 8002c18:	469e      	mov	lr, r3
 8002c1a:	4770      	bx	lr

08002c1c <_fini>:
 8002c1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c1e:	bf00      	nop
 8002c20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c22:	bc08      	pop	{r3}
 8002c24:	469e      	mov	lr, r3
 8002c26:	4770      	bx	lr
